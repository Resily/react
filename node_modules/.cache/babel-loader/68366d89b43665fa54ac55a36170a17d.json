{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nexport default function NormalVisibilityItemsByConnectorAnnotationTask(connectorAnnotationOptionTask) {\n  var _data = {\n    items: []\n  },\n      _hash = {},\n      _dataTemplate = new ArrayReader(new ValueReader([\"string\", \"number\"], true), true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n        annotations = connectorAnnotationOptionTask.getAnnotations();\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(annotations), \"items\", context);\n    return context.isChanged;\n  }\n\n  function getSelectedItems(annotations) {\n    var result = [],\n        processed = {},\n        index,\n        len,\n        annotation,\n        treeItem;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotation = annotations[index];\n\n      if (annotation.selectItems) {\n        if (annotation.fromItem != null && !processed.hasOwnProperty(annotation.fromItem)) {\n          result.push(annotation.fromItem);\n          processed[annotation.fromItem] = true;\n        }\n\n        if (annotation.toItem != null && !processed.hasOwnProperty(annotation.toItem)) {\n          result.push(annotation.toItem);\n          processed[annotation.toItem] = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/selection/NormalVisibilityItemsByConnectorAnnotationTask.js"],"names":["ArrayReader","ValueReader","NormalVisibilityItemsByConnectorAnnotationTask","connectorAnnotationOptionTask","_data","items","_hash","_dataTemplate","process","context","isChanged","hash","annotations","getAnnotations","read","getSelectedItems","result","processed","index","len","annotation","treeItem","length","selectItems","fromItem","hasOwnProperty","push","toItem","getItems"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,eAAe,SAASC,8CAAT,CAAwDC,6BAAxD,EAAuF;AACpG,MAAIC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE;AADG,GAAZ;AAAA,MAGEC,KAAK,GAAG,EAHV;AAAA,MAIEC,aAAa,GAAG,IAAIP,WAAJ,CACd,IAAIC,WAAJ,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,EAAsC,IAAtC,CADc,EAEd,IAFc,CAJlB;;AASA,WAASO,OAAT,GAAmB;AACjB,QAAIC,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEL;AAFM,KAAd;AAAA,QAIEM,WAAW,GAAGT,6BAA6B,CAACU,cAA9B,EAJhB;AAMAT,IAAAA,KAAK,CAACC,KAAN,GAAcE,aAAa,CAACO,IAAd,CAAmBV,KAAK,CAACC,KAAzB,EAAgCU,gBAAgB,CAACH,WAAD,CAAhD,EAA+D,OAA/D,EAAwEH,OAAxE,CAAd;AAEA,WAAOA,OAAO,CAACC,SAAf;AACD;;AAED,WAASK,gBAAT,CAA0BH,WAA1B,EAAuC;AACrC,QAAII,MAAM,GAAG,EAAb;AAAA,QACEC,SAAS,GAAG,EADd;AAAA,QAEEC,KAFF;AAAA,QAESC,GAFT;AAAA,QAGEC,UAHF;AAAA,QAIEC,QAJF;;AAMA,SAAKH,KAAK,GAAG,CAAR,EAAWC,GAAG,GAAGP,WAAW,CAACU,MAAlC,EAA0CJ,KAAK,GAAGC,GAAlD,EAAuDD,KAAK,IAAI,CAAhE,EAAmE;AACjEE,MAAAA,UAAU,GAAGR,WAAW,CAACM,KAAD,CAAxB;;AACA,UAAIE,UAAU,CAACG,WAAf,EAA4B;AAC1B,YAAIH,UAAU,CAACI,QAAX,IAAuB,IAAvB,IAA+B,CAACP,SAAS,CAACQ,cAAV,CAAyBL,UAAU,CAACI,QAApC,CAApC,EAAmF;AACjFR,UAAAA,MAAM,CAACU,IAAP,CAAYN,UAAU,CAACI,QAAvB;AACAP,UAAAA,SAAS,CAACG,UAAU,CAACI,QAAZ,CAAT,GAAiC,IAAjC;AACD;;AACD,YAAIJ,UAAU,CAACO,MAAX,IAAqB,IAArB,IAA6B,CAACV,SAAS,CAACQ,cAAV,CAAyBL,UAAU,CAACO,MAApC,CAAlC,EAA+E;AAC7EX,UAAAA,MAAM,CAACU,IAAP,CAAYN,UAAU,CAACO,MAAvB;AACAV,UAAAA,SAAS,CAACG,UAAU,CAACO,MAAZ,CAAT,GAA+B,IAA/B;AACD;AACF;AACF;;AAED,WAAOX,MAAP;AACD;;AAED,WAASY,QAAT,GAAoB;AAClB,WAAOxB,KAAK,CAACC,KAAb;AACD;;AAED,SAAO;AACLG,IAAAA,OAAO,EAAEA,OADJ;AAELoB,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID;AAAA","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\n\nexport default function NormalVisibilityItemsByConnectorAnnotationTask(connectorAnnotationOptionTask) {\n  var _data = {\n    items: []\n  },\n    _hash = {},\n    _dataTemplate = new ArrayReader(\n      new ValueReader([\"string\", \"number\"], true),\n      true\n    );\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n      annotations = connectorAnnotationOptionTask.getAnnotations();\n\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(annotations), \"items\", context);\n\n    return context.isChanged;\n  }\n\n  function getSelectedItems(annotations) {\n    var result = [],\n      processed = {},\n      index, len,\n      annotation,\n      treeItem;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotation = annotations[index];\n      if (annotation.selectItems) {\n        if (annotation.fromItem != null && !processed.hasOwnProperty(annotation.fromItem)) {\n          result.push(annotation.fromItem);\n          processed[annotation.fromItem] = true;\n        }\n        if (annotation.toItem != null && !processed.hasOwnProperty(annotation.toItem)) {\n          result.push(annotation.toItem);\n          processed[annotation.toItem] = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n};"]},"metadata":{},"sourceType":"module"}