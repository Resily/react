{"ast":null,"code":"import TemplateParams from '../../models/TemplateParams';\nimport { isNullOrEmpty } from '../../common';\nimport { Enabled } from '../../enums';\nexport default function ItemTemplateParamsTask(itemsSizesOptionTask, cursorItemOptionTask, readTemplatesTask) {\n  var _data = {\n    items: {} // TemplateParams\n\n  };\n\n  function process() {\n    var itemsSizesOptions = itemsSizesOptionTask.getOptions(),\n        hasButtonsRender = itemsSizesOptions.onButtonsRender != null,\n        cursorItem = cursorItemOptionTask.getCursorItem(),\n        items = itemsSizesOptions.items,\n        index,\n        len;\n    _data.items = {};\n\n    for (index = 0, len = items.length; index < len; index += 1) {\n      var itemConfig = items[index],\n          templateParams = new TemplateParams(),\n          isCursor = cursorItem == itemConfig.id,\n          template = readTemplatesTask.getTemplate(itemConfig.templateName, itemsSizesOptions.defaultTemplateName, readTemplatesTask.DefaultWidgetTemplateName),\n          templateConfig = template.templateConfig;\n      templateParams.template = template;\n      templateParams.isActive = itemConfig.isActive && templateConfig.isActive;\n\n      if (templateParams.isActive) {\n        templateParams.hasSelectorCheckbox = getSelectionVisibility(isCursor, itemConfig.hasSelectorCheckbox, itemsSizesOptions.hasSelectorCheckbox);\n        templateParams.hasButtons = templateConfig.hasButtons !== Enabled.Auto ? templateConfig.hasButtons == Enabled.True : hasButtonsRender && getSelectionVisibility(isCursor, itemConfig.hasButtons, itemsSizesOptions.hasButtons);\n\n        if (templateParams.hasButtons) {\n          templateParams.onButtonsRender = templateConfig.onButtonsRender || itemsSizesOptions.onButtonsRender;\n        }\n      }\n\n      templateParams.hasGroupTitle = !isNullOrEmpty(itemConfig.groupTitle);\n      _data.items[itemConfig.id] = templateParams;\n    }\n\n    return true;\n  }\n\n  function getSelectionVisibility(isCursor, itemState, widgetState) {\n    var result = false;\n\n    switch (itemState) {\n      case Enabled.Auto:\n        switch (widgetState) {\n          case Enabled.Auto:\n            result = isCursor;\n            break;\n\n          case Enabled.True:\n            result = true;\n            break;\n\n          case Enabled.False:\n            result = false;\n            break;\n        }\n\n        break;\n\n      case Enabled.True:\n        result = true;\n        break;\n\n      case Enabled.False:\n        result = false;\n        break;\n    }\n\n    return result;\n  }\n\n  function getTemplateParams(orgItemId) {\n    return _data.items[orgItemId];\n  }\n\n  return {\n    process: process,\n    getTemplateParams: getTemplateParams\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/templates/ItemTemplateParamsTask.js"],"names":["TemplateParams","isNullOrEmpty","Enabled","ItemTemplateParamsTask","itemsSizesOptionTask","cursorItemOptionTask","readTemplatesTask","_data","items","process","itemsSizesOptions","getOptions","hasButtonsRender","onButtonsRender","cursorItem","getCursorItem","index","len","length","itemConfig","templateParams","isCursor","id","template","getTemplate","templateName","defaultTemplateName","DefaultWidgetTemplateName","templateConfig","isActive","hasSelectorCheckbox","getSelectionVisibility","hasButtons","Auto","True","hasGroupTitle","groupTitle","itemState","widgetState","result","False","getTemplateParams","orgItemId"],"mappings":"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","sourcesContent":["import TemplateParams from '../../models/TemplateParams';\nimport { isNullOrEmpty } from '../../common';\nimport { Enabled } from '../../enums';\n\nexport default function ItemTemplateParamsTask(itemsSizesOptionTask, cursorItemOptionTask, readTemplatesTask) {\n  var _data = {\n    items: {} // TemplateParams\n  };\n\n  function process() {\n    var itemsSizesOptions = itemsSizesOptionTask.getOptions(),\n      hasButtonsRender = (itemsSizesOptions.onButtonsRender != null),\n      cursorItem = cursorItemOptionTask.getCursorItem(),\n      items = itemsSizesOptions.items,\n      index, len;\n\n    _data.items = {};\n\n    for (index = 0, len = items.length; index < len; index += 1) {\n      var itemConfig = items[index],\n        templateParams = new TemplateParams(),\n        isCursor = (cursorItem == itemConfig.id),\n        template = readTemplatesTask.getTemplate(itemConfig.templateName, itemsSizesOptions.defaultTemplateName, readTemplatesTask.DefaultWidgetTemplateName),\n        templateConfig = template.templateConfig;\n\n      templateParams.template = template;\n\n      templateParams.isActive = itemConfig.isActive && templateConfig.isActive;\n      if (templateParams.isActive) {\n        templateParams.hasSelectorCheckbox = getSelectionVisibility(isCursor, itemConfig.hasSelectorCheckbox, itemsSizesOptions.hasSelectorCheckbox);\n        templateParams.hasButtons = (templateConfig.hasButtons !== Enabled.Auto) ? (templateConfig.hasButtons == Enabled.True) : (hasButtonsRender && getSelectionVisibility(isCursor, itemConfig.hasButtons, itemsSizesOptions.hasButtons));\n        if (templateParams.hasButtons) {\n          templateParams.onButtonsRender = templateConfig.onButtonsRender || itemsSizesOptions.onButtonsRender;\n        }\n      }\n      templateParams.hasGroupTitle = !isNullOrEmpty(itemConfig.groupTitle);\n      _data.items[itemConfig.id] = templateParams;\n    }\n    return true;\n  }\n\n  function getSelectionVisibility(isCursor, itemState, widgetState) {\n    var result = false;\n    switch (itemState) {\n      case Enabled.Auto:\n        switch (widgetState) {\n          case Enabled.Auto:\n            result = isCursor;\n            break;\n          case Enabled.True:\n            result = true;\n            break;\n          case Enabled.False:\n            result = false;\n            break;\n        }\n        break;\n      case Enabled.True:\n        result = true;\n        break;\n      case Enabled.False:\n        result = false;\n        break;\n    }\n    return result;\n  }\n\n  function getTemplateParams(orgItemId) {\n    return _data.items[orgItemId];\n  }\n\n  return {\n    process: process,\n    getTemplateParams: getTemplateParams\n  };\n};"]},"metadata":{},"sourceType":"module"}