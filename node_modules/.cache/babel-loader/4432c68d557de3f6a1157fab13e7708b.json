{"ast":null,"code":"import { Layers } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Interval from '../../graphics/structs/Interval';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { mergeObjects } from '../../common';\nexport default function DrawLevelAnnotationBackgroundTask(getGraphics, verticalOffsetTask, createTransformTask, applyLayoutChangesTask, levelAnnotationOptionTask, mergeLevelIntervalsTask, levelAnnotationTemplateTask) {\n  var _graphics, _positions, _transform, _backgroundTemplate;\n\n  function process() {\n    var annotations = levelAnnotationOptionTask.getAnnotations();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"placeholder\", Layers.LevelAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = mergeLevelIntervalsTask.getPositions();\n      _transform = createTransformTask.getTransform();\n      _backgroundTemplate = levelAnnotationTemplateTask.getBackgroundTemplate();\n      drawAnnotations(annotations, _positions);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions) {\n    var verticalOffset = new Interval(verticalOffsetTask.getVerticalOffset()),\n        panel = _graphics.activate(\"placeholder\", Layers.LevelAnnotation),\n        panelRect;\n\n    _transform.transformRect(0, 0, panel.size.width, panel.size.height, false, this, function (x, y, width, height) {\n      panelRect = new Rect(x, y, width, height);\n    });\n\n    for (var index = 0, len = annotations.length; index < len; index += 1) {\n      var annotationConfig = annotations[index];\n\n      var lineWidth = _transform.transformThickness(annotationConfig.lineWidth, true);\n\n      var intervals = positions[index];\n\n      if (intervals != null) {\n        for (var index3 = 0, len3 = intervals.length; index3 < len3; index3 += 1) {\n          var interval = intervals[index3];\n          var position = new Rect(0, interval.from, panelRect.width, interval.width());\n          position.offset(annotationConfig.offset);\n          var verticalInterval = position.verticalInterval();\n\n          if (verticalInterval.overlaps(verticalOffset)) {\n            var uiHash = new RenderEventArgs();\n            uiHash.context = annotationConfig;\n            mergeObjects(uiHash.context, {\n              lineWidth: lineWidth\n            });\n\n            _transform.transformRect(position.x, position.y, position.width, position.height, true, this, function (x, y, width, height) {\n              _graphics.template(x, y, width, height, 0, 0, width, height, _backgroundTemplate.template(), _backgroundTemplate.getHashCode(), _backgroundTemplate.render, uiHash, null);\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawLevelAnnotationBackgroundTask.js"],"names":["Layers","Rect","Interval","RenderEventArgs","mergeObjects","DrawLevelAnnotationBackgroundTask","getGraphics","verticalOffsetTask","createTransformTask","applyLayoutChangesTask","levelAnnotationOptionTask","mergeLevelIntervalsTask","levelAnnotationTemplateTask","_graphics","_positions","_transform","_backgroundTemplate","process","annotations","getAnnotations","reset","LevelAnnotation","length","getPositions","getTransform","getBackgroundTemplate","drawAnnotations","positions","verticalOffset","getVerticalOffset","panel","activate","panelRect","transformRect","size","width","height","x","y","index","len","annotationConfig","lineWidth","transformThickness","intervals","index3","len3","interval","position","from","offset","verticalInterval","overlaps","uiHash","context","template","getHashCode","render"],"mappings":"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","sourcesContent":["import { Layers } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Interval from '../../graphics/structs/Interval';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { mergeObjects } from '../../common';\n\nexport default function DrawLevelAnnotationBackgroundTask(getGraphics, verticalOffsetTask, createTransformTask, applyLayoutChangesTask, \n  levelAnnotationOptionTask, mergeLevelIntervalsTask, levelAnnotationTemplateTask) {\n  var _graphics,\n    _positions,\n    _transform,\n    _backgroundTemplate;\n\n  function process() {\n    var annotations = levelAnnotationOptionTask.getAnnotations();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"placeholder\", Layers.LevelAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = mergeLevelIntervalsTask.getPositions();\n      _transform = createTransformTask.getTransform();\n      _backgroundTemplate = levelAnnotationTemplateTask.getBackgroundTemplate();\n\n      drawAnnotations(annotations, _positions);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions) {\n    var verticalOffset = new Interval(verticalOffsetTask.getVerticalOffset()),\n      panel = _graphics.activate(\"placeholder\", Layers.LevelAnnotation),\n      panelRect;\n\n    _transform.transformRect(0, 0, panel.size.width, panel.size.height, false,\n      this, function (x, y, width, height) {\n        panelRect = new Rect(x, y, width, height);\n      });\n\n      \n    for (var index = 0, len = annotations.length; index < len; index += 1) {\n      var annotationConfig = annotations[index];\n      var lineWidth = _transform.transformThickness(annotationConfig.lineWidth, true);\n      var intervals = positions[index];\n      if (intervals != null) {\n        for (var index3 = 0, len3 = intervals.length; index3 < len3; index3 += 1) {\n          var interval = intervals[index3];\n\n          var position = new Rect(0, interval.from, panelRect.width, interval.width());\n          position.offset(annotationConfig.offset);\n\n          var verticalInterval = position.verticalInterval();\n          if(verticalInterval.overlaps(verticalOffset)) {\n            var uiHash = new RenderEventArgs();\n            uiHash.context = annotationConfig;\n            mergeObjects(uiHash.context, { lineWidth });\n    \n            _transform.transformRect(position.x, position.y, position.width, position.height, true,\n              this, function (x, y, width, height) {\n                _graphics.template(\n                  x\n                  , y\n                  , width\n                  , height\n                  , 0\n                  , 0\n                  , width\n                  , height\n                  , _backgroundTemplate.template()\n                  , _backgroundTemplate.getHashCode()\n                  , _backgroundTemplate.render\n                  , uiHash\n                  , null\n                );\n              });\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}