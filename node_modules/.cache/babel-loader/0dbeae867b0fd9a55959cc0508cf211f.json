{"ast":null,"code":"import ValueReader from '../../readers/ValueReader';\nimport ObjectReader from '../../readers/ObjectReader';\nimport EnumerationReader from '../../readers/EnumerationReader';\nimport { ConnectorType, GroupByType, ElbowType, LineType } from '../../enums';\nexport default function ConnectorsOptionTask(optionsTask, defaultConfig) {\n  var _data = {},\n      _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    arrowsDirection: new EnumerationReader(GroupByType, false, defaultConfig.arrowsDirection),\n    showExtraArrows: new ValueReader([\"boolean\"], false, defaultConfig.showExtraArrows),\n    extraArrowsMinimumSpace: new ValueReader([\"number\"], false, defaultConfig.extraArrowsMinimumSpace),\n    connectorType: new EnumerationReader(ConnectorType, false, defaultConfig.hasOwnProperty(\"connectorType\") ? defaultConfig.connectorType : ConnectorType.Squared),\n    showNeigboursConnectorsHighlighted: new EnumerationReader(ConnectorType, false, defaultConfig.hasOwnProperty(\"showNeigboursConnectorsHighlighted\") ? defaultConfig.showNeigboursConnectorsHighlighted : false),\n    elbowType: new EnumerationReader(ElbowType, false, defaultConfig.elbowType),\n    bevelSize: new ValueReader([\"number\"], false, defaultConfig.bevelSize),\n    elbowDotSize: new ValueReader([\"number\"], false, defaultConfig.elbowDotSize),\n    linesColor: new ValueReader([\"string\"], false, defaultConfig.linesColor),\n    linesWidth: new ValueReader([\"number\"], false, defaultConfig.linesWidth),\n    linesType: new EnumerationReader(LineType, false, defaultConfig.linesType),\n    highlightLinesColor: new ValueReader([\"string\"], false, defaultConfig.highlightLinesColor),\n    highlightLinesWidth: new ValueReader([\"number\"], false, defaultConfig.highlightLinesWidth),\n    highlightLinesType: new EnumerationReader(LineType, false, defaultConfig.highlightLinesType)\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n    _data = _dataTemplate.read(_data, optionsTask.getOptions(), \"options\", context);\n    return context.isChanged;\n  }\n\n  function getOptions() {\n    return _data;\n  }\n\n  return {\n    process: process,\n    getOptions: getOptions,\n    description: \"Checks connector lines drawing options.\"\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/options/ConnectorsOptionTask.js"],"names":["ValueReader","ObjectReader","EnumerationReader","ConnectorType","GroupByType","ElbowType","LineType","ConnectorsOptionTask","optionsTask","defaultConfig","_data","_hash","_dataTemplate","arrowsDirection","showExtraArrows","extraArrowsMinimumSpace","connectorType","hasOwnProperty","Squared","showNeigboursConnectorsHighlighted","elbowType","bevelSize","elbowDotSize","linesColor","linesWidth","linesType","highlightLinesColor","highlightLinesWidth","highlightLinesType","process","context","isChanged","hash","read","getOptions","description"],"mappings":"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","sourcesContent":["import ValueReader from '../../readers/ValueReader';\nimport ObjectReader from '../../readers/ObjectReader';\nimport EnumerationReader from '../../readers/EnumerationReader';\nimport { ConnectorType, GroupByType, ElbowType, LineType } from '../../enums';\n\nexport default function ConnectorsOptionTask(optionsTask, defaultConfig) {\n  var _data = {},\n    _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    arrowsDirection: new EnumerationReader(GroupByType, false, defaultConfig.arrowsDirection),\n    showExtraArrows: new ValueReader([\"boolean\"], false, defaultConfig.showExtraArrows),\n    extraArrowsMinimumSpace: new ValueReader([\"number\"], false, defaultConfig.extraArrowsMinimumSpace),\n    connectorType: new EnumerationReader(ConnectorType, false, defaultConfig.hasOwnProperty(\"connectorType\") ? defaultConfig.connectorType : ConnectorType.Squared),\n    showNeigboursConnectorsHighlighted: new EnumerationReader(ConnectorType, false, defaultConfig.hasOwnProperty(\"showNeigboursConnectorsHighlighted\") ? defaultConfig.showNeigboursConnectorsHighlighted : false),\n    elbowType: new EnumerationReader(ElbowType, false, defaultConfig.elbowType),\n    bevelSize: new ValueReader([\"number\"], false, defaultConfig.bevelSize),\n    elbowDotSize: new ValueReader([\"number\"], false, defaultConfig.elbowDotSize),\n    linesColor: new ValueReader([\"string\"], false, defaultConfig.linesColor),\n    linesWidth: new ValueReader([\"number\"], false, defaultConfig.linesWidth),\n    linesType: new EnumerationReader(LineType, false, defaultConfig.linesType),\n    highlightLinesColor: new ValueReader([\"string\"], false, defaultConfig.highlightLinesColor),\n    highlightLinesWidth: new ValueReader([\"number\"], false, defaultConfig.highlightLinesWidth),\n    highlightLinesType: new EnumerationReader(LineType, false, defaultConfig.highlightLinesType)\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n\n    _data = _dataTemplate.read(_data, optionsTask.getOptions(), \"options\", context);\n\n    return context.isChanged;\n  }\n\n  function getOptions() {\n    return _data;\n  }\n\n  return {\n    process: process,\n    getOptions: getOptions,\n    description: \"Checks connector lines drawing options.\"\n  };\n};"]},"metadata":{},"sourceType":"module"}