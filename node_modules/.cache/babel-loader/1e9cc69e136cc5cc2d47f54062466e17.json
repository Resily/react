{"ast":null,"code":"import { ZOrderType, AnnotationType } from '../../../enums';\nexport default function SplitAnnotationsOptionTask(optionsTask) {\n  var _data = {\n    annotations: {}\n  };\n\n  function process() {\n    var options = optionsTask.getOptions(),\n        annotations = options.annotations,\n        index,\n        len,\n        annotationConfig,\n        annotationType,\n        zOrderType,\n        key,\n        hash = {};\n\n    if (Array.isArray(annotations)) {\n      for (index = 0, len = annotations.length; index < len; index += 1) {\n        annotationConfig = annotations[index];\n        annotationType = annotationConfig.annotationType;\n\n        switch (annotationType) {\n          case AnnotationType.Shape:\n          case AnnotationType.Connector:\n          case AnnotationType.HighlightPath:\n            switch (annotationConfig.zOrderType) {\n              case ZOrderType.Background:\n                zOrderType = ZOrderType.Background;\n                break;\n\n              case ZOrderType.Foreground:\n              case ZOrderType.Auto: //ignore jslint\n\n              default:\n                zOrderType = ZOrderType.Foreground;\n                break;\n            }\n\n            break;\n\n          case AnnotationType.Background:\n          case AnnotationType.Label: //ignore jslint\n\n          default:\n            zOrderType = null;\n            break;\n        }\n\n        if (annotationType != null) {\n          key = annotationType * 1000 + (zOrderType || 0);\n\n          if (!hash.hasOwnProperty(key)) {\n            hash[key] = [];\n          }\n\n          hash[key].push(annotationConfig);\n        }\n      }\n    }\n\n    _data.annotations = hash;\n    return true;\n  }\n\n  function getAnnotations(annotationType, zOrderType) {\n    var key = annotationType * 1000 + (zOrderType || 0);\n    return _data.annotations[key];\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/options/annotations/SplitAnnotationsOptionTask.js"],"names":["ZOrderType","AnnotationType","SplitAnnotationsOptionTask","optionsTask","_data","annotations","process","options","getOptions","index","len","annotationConfig","annotationType","zOrderType","key","hash","Array","isArray","length","Shape","Connector","HighlightPath","Background","Foreground","Auto","Label","hasOwnProperty","push","getAnnotations"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,gBAA3C;AAEA,eAAe,SAASC,0BAAT,CAAoCC,WAApC,EAAiD;AAC9D,MAAIC,KAAK,GAAG;AACVC,IAAAA,WAAW,EAAE;AADH,GAAZ;;AAIA,WAASC,OAAT,GAAmB;AACjB,QAAIC,OAAO,GAAGJ,WAAW,CAACK,UAAZ,EAAd;AAAA,QACEH,WAAW,GAAGE,OAAO,CAACF,WADxB;AAAA,QAEEI,KAFF;AAAA,QAESC,GAFT;AAAA,QAGEC,gBAHF;AAAA,QAIEC,cAJF;AAAA,QAKEC,UALF;AAAA,QAMEC,GANF;AAAA,QAOEC,IAAI,GAAG,EAPT;;AASA,QAAIC,KAAK,CAACC,OAAN,CAAcZ,WAAd,CAAJ,EAAgC;AAC9B,WAAKI,KAAK,GAAG,CAAR,EAAWC,GAAG,GAAGL,WAAW,CAACa,MAAlC,EAA0CT,KAAK,GAAGC,GAAlD,EAAuDD,KAAK,IAAI,CAAhE,EAAmE;AACjEE,QAAAA,gBAAgB,GAAGN,WAAW,CAACI,KAAD,CAA9B;AACAG,QAAAA,cAAc,GAAGD,gBAAgB,CAACC,cAAlC;;AAEA,gBAAQA,cAAR;AACE,eAAKX,cAAc,CAACkB,KAApB;AACA,eAAKlB,cAAc,CAACmB,SAApB;AACA,eAAKnB,cAAc,CAACoB,aAApB;AACE,oBAAQV,gBAAgB,CAACE,UAAzB;AACE,mBAAKb,UAAU,CAACsB,UAAhB;AACET,gBAAAA,UAAU,GAAGb,UAAU,CAACsB,UAAxB;AACA;;AACF,mBAAKtB,UAAU,CAACuB,UAAhB;AACA,mBAAKvB,UAAU,CAACwB,IAAhB,CALF,CAKwB;;AACtB;AACEX,gBAAAA,UAAU,GAAGb,UAAU,CAACuB,UAAxB;AACA;AARJ;;AAUA;;AACF,eAAKtB,cAAc,CAACqB,UAApB;AACA,eAAKrB,cAAc,CAACwB,KAApB,CAhBF,CAgB6B;;AAC3B;AACEZ,YAAAA,UAAU,GAAG,IAAb;AACA;AAnBJ;;AAsBA,YAAID,cAAc,IAAI,IAAtB,EAA4B;AAC1BE,UAAAA,GAAG,GAAGF,cAAc,GAAG,IAAjB,IAAyBC,UAAU,IAAI,CAAvC,CAAN;;AAEA,cAAI,CAACE,IAAI,CAACW,cAAL,CAAoBZ,GAApB,CAAL,EAA+B;AAC7BC,YAAAA,IAAI,CAACD,GAAD,CAAJ,GAAY,EAAZ;AACD;;AACDC,UAAAA,IAAI,CAACD,GAAD,CAAJ,CAAUa,IAAV,CAAehB,gBAAf;AACD;AACF;AACF;;AAEDP,IAAAA,KAAK,CAACC,WAAN,GAAoBU,IAApB;AAEA,WAAO,IAAP;AACD;;AAED,WAASa,cAAT,CAAwBhB,cAAxB,EAAwCC,UAAxC,EAAoD;AAClD,QAAIC,GAAG,GAAGF,cAAc,GAAG,IAAjB,IAAyBC,UAAU,IAAI,CAAvC,CAAV;AACA,WAAOT,KAAK,CAACC,WAAN,CAAkBS,GAAlB,CAAP;AACD;;AAED,SAAO;AACLR,IAAAA,OAAO,EAAEA,OADJ;AAELsB,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAID;AAAA","sourcesContent":["import { ZOrderType, AnnotationType } from '../../../enums';\n\nexport default function SplitAnnotationsOptionTask(optionsTask) {\n  var _data = {\n    annotations: {}\n  };\n\n  function process() {\n    var options = optionsTask.getOptions(),\n      annotations = options.annotations,\n      index, len,\n      annotationConfig,\n      annotationType,\n      zOrderType,\n      key,\n      hash = {};\n\n    if (Array.isArray(annotations)) {\n      for (index = 0, len = annotations.length; index < len; index += 1) {\n        annotationConfig = annotations[index];\n        annotationType = annotationConfig.annotationType;\n\n        switch (annotationType) {\n          case AnnotationType.Shape:\n          case AnnotationType.Connector:\n          case AnnotationType.HighlightPath:\n            switch (annotationConfig.zOrderType) {\n              case ZOrderType.Background:\n                zOrderType = ZOrderType.Background;\n                break;\n              case ZOrderType.Foreground:\n              case ZOrderType.Auto: //ignore jslint\n              default:\n                zOrderType = ZOrderType.Foreground;\n                break;\n            }\n            break;\n          case AnnotationType.Background:\n          case AnnotationType.Label: //ignore jslint\n          default:\n            zOrderType = null;\n            break;\n        }\n\n        if (annotationType != null) {\n          key = annotationType * 1000 + (zOrderType || 0);\n\n          if (!hash.hasOwnProperty(key)) {\n            hash[key] = [];\n          }\n          hash[key].push(annotationConfig);\n        }\n      }\n    }\n\n    _data.annotations = hash;\n\n    return true;\n  }\n\n  function getAnnotations(annotationType, zOrderType) {\n    var key = annotationType * 1000 + (zOrderType || 0);\n    return _data.annotations[key];\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations\n  };\n};"]},"metadata":{},"sourceType":"module"}