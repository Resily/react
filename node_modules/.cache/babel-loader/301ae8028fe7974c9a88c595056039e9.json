{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nexport default function NormalVisibilityItemsByAnnotationTask(annotationOptionTask) {\n  var _data = {\n    items: []\n  },\n      _hash = {};\n\n  var _dataTemplate = new ArrayReader(new ValueReader([\"string\", \"number\"], true), true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n        annotations = annotationOptionTask.getAnnotations();\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(annotations), \"items\", context);\n    return context.isChanged;\n  }\n\n  function getSelectedItems(annotations) {\n    var result = [],\n        processed = {},\n        index,\n        len,\n        index2,\n        len2,\n        items,\n        item,\n        annotation,\n        treeItemId;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotation = annotations[index];\n\n      if (annotation.selectItems) {\n        items = annotation.items;\n\n        for (index2 = 0, len2 = items.length; index2 < len2; index2 += 1) {\n          treeItemId = items[index2];\n\n          if (treeItemId != null && !processed.hasOwnProperty(treeItemId)) {\n            result.push(treeItemId);\n            processed[treeItemId] = true;\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/selection/NormalVisibilityItemsByAnnotationTask.js"],"names":["ArrayReader","ValueReader","NormalVisibilityItemsByAnnotationTask","annotationOptionTask","_data","items","_hash","_dataTemplate","process","context","isChanged","hash","annotations","getAnnotations","read","getSelectedItems","result","processed","index","len","index2","len2","item","annotation","treeItemId","length","selectItems","hasOwnProperty","push","getItems"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,eAAe,SAASC,qCAAT,CAA+CC,oBAA/C,EAAqE;AAClF,MAAIC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE;AADG,GAAZ;AAAA,MAGEC,KAAK,GAAG,EAHV;;AAKA,MAAIC,aAAa,GAAG,IAAIP,WAAJ,CAClB,IAAIC,WAAJ,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,EAAsC,IAAtC,CADkB,EAElB,IAFkB,CAApB;;AAKA,WAASO,OAAT,GAAmB;AACjB,QAAIC,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEL;AAFM,KAAd;AAAA,QAIEM,WAAW,GAAGT,oBAAoB,CAACU,cAArB,EAJhB;AAMAT,IAAAA,KAAK,CAACC,KAAN,GAAcE,aAAa,CAACO,IAAd,CAAmBV,KAAK,CAACC,KAAzB,EAAgCU,gBAAgB,CAACH,WAAD,CAAhD,EAA+D,OAA/D,EAAwEH,OAAxE,CAAd;AAEA,WAAOA,OAAO,CAACC,SAAf;AACD;;AAED,WAASK,gBAAT,CAA0BH,WAA1B,EAAuC;AACrC,QAAII,MAAM,GAAG,EAAb;AAAA,QACEC,SAAS,GAAG,EADd;AAAA,QAEEC,KAFF;AAAA,QAESC,GAFT;AAAA,QAEcC,MAFd;AAAA,QAEsBC,IAFtB;AAAA,QAGEhB,KAHF;AAAA,QAGSiB,IAHT;AAAA,QAIEC,UAJF;AAAA,QAKEC,UALF;;AAOA,SAAKN,KAAK,GAAG,CAAR,EAAWC,GAAG,GAAGP,WAAW,CAACa,MAAlC,EAA0CP,KAAK,GAAGC,GAAlD,EAAuDD,KAAK,IAAI,CAAhE,EAAmE;AACjEK,MAAAA,UAAU,GAAGX,WAAW,CAACM,KAAD,CAAxB;;AACA,UAAIK,UAAU,CAACG,WAAf,EAA4B;AAC1BrB,QAAAA,KAAK,GAAGkB,UAAU,CAAClB,KAAnB;;AACA,aAAKe,MAAM,GAAG,CAAT,EAAYC,IAAI,GAAGhB,KAAK,CAACoB,MAA9B,EAAsCL,MAAM,GAAGC,IAA/C,EAAqDD,MAAM,IAAI,CAA/D,EAAkE;AAChEI,UAAAA,UAAU,GAAGnB,KAAK,CAACe,MAAD,CAAlB;;AACA,cAAII,UAAU,IAAI,IAAd,IAAsB,CAACP,SAAS,CAACU,cAAV,CAAyBH,UAAzB,CAA3B,EAAiE;AAC/DR,YAAAA,MAAM,CAACY,IAAP,CAAYJ,UAAZ;AACAP,YAAAA,SAAS,CAACO,UAAD,CAAT,GAAwB,IAAxB;AACD;AACF;AACF;AACF;;AAED,WAAOR,MAAP;AACD;;AAED,WAASa,QAAT,GAAoB;AAClB,WAAOzB,KAAK,CAACC,KAAb;AACD;;AAED,SAAO;AACLG,IAAAA,OAAO,EAAEA,OADJ;AAELqB,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID;AAAA","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\n\nexport default function NormalVisibilityItemsByAnnotationTask(annotationOptionTask) {\n  var _data = {\n    items: []\n  },\n    _hash = {};\n\n  var _dataTemplate = new ArrayReader(\n    new ValueReader([\"string\", \"number\"], true),\n    true\n  );\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n      annotations = annotationOptionTask.getAnnotations();\n\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(annotations), \"items\", context);\n\n    return context.isChanged;\n  }\n\n  function getSelectedItems(annotations) {\n    var result = [],\n      processed = {},\n      index, len, index2, len2,\n      items, item,\n      annotation,\n      treeItemId;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotation = annotations[index];\n      if (annotation.selectItems) {\n        items = annotation.items;\n        for (index2 = 0, len2 = items.length; index2 < len2; index2 += 1) {\n          treeItemId = items[index2];\n          if (treeItemId != null && !processed.hasOwnProperty(treeItemId)) {\n            result.push(treeItemId);\n            processed[treeItemId] = true;\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n};"]},"metadata":{},"sourceType":"module"}