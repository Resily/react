{"ast":null,"code":"import { Layers } from '../../enums';\nimport MergedRectangles from '../../graphics/shapes/MergedRectangles';\nimport BackgroundAnnotationConfig from '../../configs/BackgroundAnnotationConfig';\nimport Rect from '../../graphics/structs/Rect';\nexport default function DrawBackgroundAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask, backgroundAnnotationOptionTask, navigationFamilyTask, alignDiagramTask) {\n  var _graphics, _positions, _transform;\n\n  function process() {\n    var annotations = backgroundAnnotationOptionTask.getAnnotations(),\n        navigationFamily;\n    _graphics = getGraphics();\n\n    _graphics.reset(\"placeholder\", Layers.BackgroundAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = alignDiagramTask.getItemsPositions();\n      _transform = createTransformTask.getTransform();\n      navigationFamily = navigationFamilyTask.getLogicalFamily();\n      drawAnnotations(annotations, _positions, navigationFamily);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions, navigationFamily) {\n    var panel, index, len, index2, len2, index3, len3, shape, defaultConfig, rects, rect, itemsHash, item, properties, property, annotationConfig, treeItemPosition;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotationConfig = annotations[index];\n\n      if (annotationConfig.items != null && annotationConfig.items.length > 0) {\n        shape = new MergedRectangles(_graphics);\n        shape.transform = _transform;\n        defaultConfig = new BackgroundAnnotationConfig();\n        properties = [\"opacity\", \"lineWidth\", \"borderColor\", \"fillColor\", \"lineType\"];\n\n        for (index3 = 0, len3 = properties.length; index3 < len3; index3 += 1) {\n          property = properties[index3];\n          shape[property] = annotationConfig.hasOwnProperty(property) ? annotationConfig[property] : defaultConfig[property];\n        }\n\n        panel = _graphics.activate(\"placeholder\", Layers.BackgroundAnnotation);\n        rects = [];\n        itemsHash = {};\n\n        for (index2 = 0, len2 = annotationConfig.items.length; index2 < len2; index2 += 1) {\n          item = annotationConfig.items[index2];\n          treeItemPosition = alignDiagramTask.getItemPosition(item);\n\n          if (treeItemPosition != null) {\n            itemsHash[item] = true;\n            rect = new Rect(treeItemPosition.actualPosition);\n            rect.offset(annotationConfig.offset);\n            rects.push(rect);\n\n            if (annotationConfig.includeChildren) {\n              navigationFamily.loopChildren(this, item, function (childItemId, childItem) {\n                if (!itemsHash[childItemId]) {\n                  itemsHash[childItemId] = true;\n                  treeItemPosition = alignDiagramTask.getItemPosition(childItemId);\n\n                  if (treeItemPosition != null) {\n                    rect = new Rect(treeItemPosition.actualPosition);\n                    rect.offset(annotationConfig.offset);\n                    rects.push(rect);\n                  }\n                }\n              }); //ignore jslint\n            }\n          }\n        }\n\n        shape.draw(rects);\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawBackgroundAnnotationTask.js"],"names":["Layers","MergedRectangles","BackgroundAnnotationConfig","Rect","DrawBackgroundAnnotationTask","getGraphics","createTransformTask","applyLayoutChangesTask","backgroundAnnotationOptionTask","navigationFamilyTask","alignDiagramTask","_graphics","_positions","_transform","process","annotations","getAnnotations","navigationFamily","reset","BackgroundAnnotation","length","getItemsPositions","getTransform","getLogicalFamily","drawAnnotations","positions","panel","index","len","index2","len2","index3","len3","shape","defaultConfig","rects","rect","itemsHash","item","properties","property","annotationConfig","treeItemPosition","items","transform","hasOwnProperty","activate","getItemPosition","actualPosition","offset","push","includeChildren","loopChildren","childItemId","childItem","draw"],"mappings":"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","sourcesContent":["import { Layers } from '../../enums';\nimport MergedRectangles from '../../graphics/shapes/MergedRectangles';\nimport BackgroundAnnotationConfig from '../../configs/BackgroundAnnotationConfig';\nimport Rect from '../../graphics/structs/Rect';\n\nexport default function DrawBackgroundAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask,\n  backgroundAnnotationOptionTask, navigationFamilyTask, alignDiagramTask) {\n  var _graphics,\n    _positions,\n    _transform;\n\n  function process() {\n    var annotations = backgroundAnnotationOptionTask.getAnnotations(),\n      navigationFamily;\n\n    _graphics = getGraphics();\n    _graphics.reset(\"placeholder\", Layers.BackgroundAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = alignDiagramTask.getItemsPositions();\n      _transform = createTransformTask.getTransform();\n\n      navigationFamily = navigationFamilyTask.getLogicalFamily();\n\n      drawAnnotations(annotations, _positions, navigationFamily);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions, navigationFamily) {\n    var panel,\n      index, len,\n      index2, len2,\n      index3, len3,\n      shape,\n      defaultConfig,\n      rects, rect,\n      itemsHash, item,\n      properties, property,\n      annotationConfig, treeItemPosition;\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotationConfig = annotations[index];\n\n      if (annotationConfig.items != null && annotationConfig.items.length > 0) {\n        shape = new MergedRectangles(_graphics);\n        shape.transform = _transform;\n        defaultConfig = new BackgroundAnnotationConfig();\n        properties = [\"opacity\", \"lineWidth\", \"borderColor\", \"fillColor\", \"lineType\"];\n        for (index3 = 0, len3 = properties.length; index3 < len3; index3 += 1) {\n          property = properties[index3];\n          shape[property] = annotationConfig.hasOwnProperty(property) ? annotationConfig[property] : defaultConfig[property];\n        }\n        panel = _graphics.activate(\"placeholder\", Layers.BackgroundAnnotation);\n\n        rects = [];\n        itemsHash = {};\n        for (index2 = 0, len2 = annotationConfig.items.length; index2 < len2; index2 += 1) {\n          item = annotationConfig.items[index2];\n          treeItemPosition = alignDiagramTask.getItemPosition(item);\n          if (treeItemPosition != null) {\n            itemsHash[item] = true;\n            rect = new Rect(treeItemPosition.actualPosition);\n            rect.offset(annotationConfig.offset);\n            rects.push(rect);\n\n            if (annotationConfig.includeChildren) {\n              navigationFamily.loopChildren(this, item, function (childItemId, childItem) {\n                if (!itemsHash[childItemId]) {\n                  itemsHash[childItemId] = true;\n                  treeItemPosition = alignDiagramTask.getItemPosition(childItemId);\n                  if (treeItemPosition != null) {\n                    rect = new Rect(treeItemPosition.actualPosition);\n                    rect.offset(annotationConfig.offset);\n                    rects.push(rect);\n                  }\n                }\n              }); //ignore jslint\n            }\n          }\n        }\n        shape.draw(rects);\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}