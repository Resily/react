{"ast":null,"code":"import CollinearVectorBundle from './CollinearVectorBundle';\nexport default function ConnectorAnnotationOffsetResolver() {\n  var _bundles = {};\n\n  function getOffset(vector, callback) {\n    var key = vector.getLineKey();\n\n    if (!_bundles.hasOwnProperty(key)) {\n      _bundles[key] = new CollinearVectorBundle();\n    }\n\n    _bundles[key].addVector(vector, callback);\n  }\n\n  function resolve() {\n    for (var key in _bundles) {\n      if (_bundles.hasOwnProperty(key)) {\n        var bundle = _bundles[key];\n        bundle.resolve();\n      }\n    }\n  }\n\n  return {\n    getOffset: getOffset,\n    resolve: resolve\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/offsetResolver/ConnectorAnnotationOffsetResolver.js"],"names":["CollinearVectorBundle","ConnectorAnnotationOffsetResolver","_bundles","getOffset","vector","callback","key","getLineKey","hasOwnProperty","addVector","resolve","bundle"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,yBAAlC;AAEA,eAAe,SAASC,iCAAT,GAA6C;AAC1D,MAAIC,QAAQ,GAAG,EAAf;;AAEA,WAASC,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;AACnC,QAAIC,GAAG,GAAGF,MAAM,CAACG,UAAP,EAAV;;AAEA,QAAI,CAACL,QAAQ,CAACM,cAAT,CAAwBF,GAAxB,CAAL,EAAmC;AACjCJ,MAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgB,IAAIN,qBAAJ,EAAhB;AACD;;AAEDE,IAAAA,QAAQ,CAACI,GAAD,CAAR,CAAcG,SAAd,CAAwBL,MAAxB,EAAgCC,QAAhC;AACD;;AAED,WAASK,OAAT,GAAmB;AACjB,SAAK,IAAIJ,GAAT,IAAgBJ,QAAhB,EAA0B;AACxB,UAAIA,QAAQ,CAACM,cAAT,CAAwBF,GAAxB,CAAJ,EAAkC;AAChC,YAAIK,MAAM,GAAGT,QAAQ,CAACI,GAAD,CAArB;AACAK,QAAAA,MAAM,CAACD,OAAP;AACD;AACF;AACF;;AAED,SAAO;AACLP,IAAAA,SAAS,EAAEA,SADN;AAELO,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID;AAAA","sourcesContent":["import CollinearVectorBundle from './CollinearVectorBundle';\n\nexport default function ConnectorAnnotationOffsetResolver() {\n  var _bundles = {};\n\n  function getOffset(vector, callback) {\n    var key = vector.getLineKey();\n\n    if (!_bundles.hasOwnProperty(key)) {\n      _bundles[key] = new CollinearVectorBundle();\n    }\n\n    _bundles[key].addVector(vector, callback);\n  }\n\n  function resolve() {\n    for (var key in _bundles) {\n      if (_bundles.hasOwnProperty(key)) {\n        var bundle = _bundles[key];\n        bundle.resolve();\n      }\n    }\n  }\n\n  return {\n    getOffset: getOffset,\n    resolve: resolve\n  };\n};"]},"metadata":{},"sourceType":"module"}