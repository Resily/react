{"ast":null,"code":"/*  This task optionally eliminates direct connections to grand parents */\nexport default function HideGrandParentsConnectorsTask(hideGrandParentsConnectorsOptionTask, addSpousesTask) {\n  var _data = {\n    maximumId: null,\n\n    /* maximum of OrgItem.id */\n    logicalFamily: null\n  };\n\n  function process(debug) {\n    var logicalFamily = addSpousesTask.getLogicalFamily(),\n        maximumId = addSpousesTask.getMaximumId();\n    var options = hideGrandParentsConnectorsOptionTask.getOptions();\n\n    if (options.hideGrandParentsConnectors == true) {\n      /* optionally eliminate grand parents connectors */\n      logicalFamily = logicalFamily.getFamilyWithoutGrandParentsRelations();\n    } else {\n      logicalFamily = logicalFamily.clone();\n    }\n\n    _data.logicalFamily = logicalFamily;\n    _data.maximumId = maximumId;\n    return true;\n  }\n\n  function getLogicalFamily() {\n    return _data.logicalFamily;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  return {\n    process: process,\n    getLogicalFamily: getLogicalFamily,\n    getMaximumId: getMaximumId\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/HideGrandParentsConnectorsTask.js"],"names":["HideGrandParentsConnectorsTask","hideGrandParentsConnectorsOptionTask","addSpousesTask","_data","maximumId","logicalFamily","process","debug","getLogicalFamily","getMaximumId","options","getOptions","hideGrandParentsConnectors","getFamilyWithoutGrandParentsRelations","clone"],"mappings":"AAAA;AACA,eAAe,SAASA,8BAAT,CAAwCC,oCAAxC,EAA8EC,cAA9E,EAA8F;AAC3G,MAAIC,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,IADD;;AACO;AACjBC,IAAAA,aAAa,EAAE;AAFL,GAAZ;;AAKA,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIF,aAAa,GAAGH,cAAc,CAACM,gBAAf,EAApB;AAAA,QACEJ,SAAS,GAAGF,cAAc,CAACO,YAAf,EADd;AAGA,QAAIC,OAAO,GAAGT,oCAAoC,CAACU,UAArC,EAAd;;AAEA,QAAID,OAAO,CAACE,0BAAR,IAAsC,IAA1C,EAAgD;AAC9C;AACAP,MAAAA,aAAa,GAAGA,aAAa,CAACQ,qCAAd,EAAhB;AACD,KAHD,MAGO;AACLR,MAAAA,aAAa,GAAGA,aAAa,CAACS,KAAd,EAAhB;AACD;;AAEDX,IAAAA,KAAK,CAACE,aAAN,GAAsBA,aAAtB;AACAF,IAAAA,KAAK,CAACC,SAAN,GAAkBA,SAAlB;AAEA,WAAO,IAAP;AACD;;AAED,WAASI,gBAAT,GAA4B;AAC1B,WAAOL,KAAK,CAACE,aAAb;AACD;;AAED,WAASI,YAAT,GAAwB;AACtB,WAAON,KAAK,CAACC,SAAb;AACD;;AAED,SAAO;AACLE,IAAAA,OAAO,EAAEA,OADJ;AAELE,IAAAA,gBAAgB,EAAEA,gBAFb;AAGLC,IAAAA,YAAY,EAAEA;AAHT,GAAP;AAKD;AAAA","sourcesContent":["/*  This task optionally eliminates direct connections to grand parents */\nexport default function HideGrandParentsConnectorsTask(hideGrandParentsConnectorsOptionTask, addSpousesTask) {\n  var _data = {\n    maximumId: null, /* maximum of OrgItem.id */\n    logicalFamily: null\n  }\n\n  function process(debug) {\n    var logicalFamily = addSpousesTask.getLogicalFamily(),\n      maximumId = addSpousesTask.getMaximumId();\n\n    var options = hideGrandParentsConnectorsOptionTask.getOptions();\n\n    if (options.hideGrandParentsConnectors == true) {\n      /* optionally eliminate grand parents connectors */\n      logicalFamily = logicalFamily.getFamilyWithoutGrandParentsRelations();\n    } else {\n      logicalFamily = logicalFamily.clone();\n    }\n\n    _data.logicalFamily = logicalFamily;\n    _data.maximumId = maximumId;\n\n    return true;\n  }\n\n  function getLogicalFamily() {\n    return _data.logicalFamily;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  return {\n    process: process,\n    getLogicalFamily: getLogicalFamily,\n    getMaximumId: getMaximumId\n  };\n};\n"]},"metadata":{},"sourceType":"module"}