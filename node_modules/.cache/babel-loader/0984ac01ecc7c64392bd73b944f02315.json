{"ast":null,"code":"import { OrientationType } from '../../enums';\nimport JsonML from '../../common/jsonml-html';\nimport { highestContrast } from '../../common/colors';\nimport { getRotatedText, updateRotatedText } from './RotatedText';\nexport default function GroupTitleTemplate(options) {\n  var fontSize = options.groupTitleFontSize,\n      fontFamily = options.groupTitleFontFamily,\n      fontWeight = options.groupTitleFontWeight,\n      fontStyle = options.groupTitleFontStyle,\n      groupTitleColor = options.groupTitleColor,\n      itemTitleFirstFontColor = options.itemTitleFirstFontColor,\n      itemTitleSecondFontColor = options.itemTitleSecondFontColor,\n      textOrientation = options.groupTitleOrientation,\n      horizontalAlignment = options.groupTitleHorizontalAlignment,\n      verticalAlignment = options.groupTitleVerticalAlignment;\n\n  var _template = create();\n\n  function create() {\n    return [\"div\", {\n      \"style\": {\n        \"fontSize\": fontSize,\n        \"fontFamily\": fontFamily,\n        \"fontWeight\": fontWeight,\n        \"fontStyle\": fontStyle\n      },\n      \"class\": [\"bp-item\", \"bp-corner-all\", \"bp-grouptitle-frame\"]\n    }, getRotatedText({\n      orientation: OrientationType.Horizontal,\n      textOrientation: textOrientation,\n      horizontalAlignment: horizontalAlignment,\n      verticalAlignment: verticalAlignment,\n      fontSize: fontSize,\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontStyle: fontStyle\n    })];\n  }\n\n  function template() {\n    return _template;\n  }\n\n  function getHashCode() {\n    return \"defaultGroupTitleTemplate\";\n  }\n\n  function render(event, data) {\n    var element = data.element,\n        itemConfig = data.context,\n        width = data.width,\n        height = data.height,\n        label = itemConfig.groupTitle,\n        backgroundColor = itemConfig.groupTitleColor || groupTitleColor,\n        fontColor = highestContrast(backgroundColor, itemTitleSecondFontColor, itemTitleFirstFontColor);\n    updateRotatedText({\n      element: element,\n      orientation: OrientationType.Horizontal,\n      textOrientation: textOrientation,\n      verticalAlignment: verticalAlignment,\n      width: width,\n      height: height,\n      label: label,\n      fontColor: fontColor\n    });\n    JsonML.applyStyles(data.element, {\n      \"backgroundColor\": backgroundColor\n    });\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/templates/html/GroupTitleTemplate.js"],"names":["OrientationType","JsonML","highestContrast","getRotatedText","updateRotatedText","GroupTitleTemplate","options","fontSize","groupTitleFontSize","fontFamily","groupTitleFontFamily","fontWeight","groupTitleFontWeight","fontStyle","groupTitleFontStyle","groupTitleColor","itemTitleFirstFontColor","itemTitleSecondFontColor","textOrientation","groupTitleOrientation","horizontalAlignment","groupTitleHorizontalAlignment","verticalAlignment","groupTitleVerticalAlignment","_template","create","orientation","Horizontal","template","getHashCode","render","event","data","element","itemConfig","context","width","height","label","groupTitle","backgroundColor","fontColor","applyStyles"],"mappings":"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","sourcesContent":["import { OrientationType }  from '../../enums';\nimport JsonML from '../../common/jsonml-html';\nimport { highestContrast } from '../../common/colors';\nimport { getRotatedText, updateRotatedText } from './RotatedText';\n\nexport default function GroupTitleTemplate(options) {\n  var {groupTitleFontSize: fontSize, \n    groupTitleFontFamily: fontFamily,\n    groupTitleFontWeight: fontWeight,\n    groupTitleFontStyle: fontStyle,\n    groupTitleColor,\n    itemTitleFirstFontColor,\n    itemTitleSecondFontColor,\n    groupTitleOrientation: textOrientation,\n    groupTitleHorizontalAlignment: horizontalAlignment,\n    groupTitleVerticalAlignment: verticalAlignment\n  } = options;\n\n  var _template = create();\n\n  function create() {\n    return [\"div\",\n      {\n        \"style\": {\n          \"fontSize\": fontSize,\n          \"fontFamily\": fontFamily,\n          \"fontWeight\": fontWeight,\n          \"fontStyle\": fontStyle\n        },\n        \"class\": [\"bp-item\", \"bp-corner-all\", \"bp-grouptitle-frame\"]\n      },\n      getRotatedText({orientation: OrientationType.Horizontal, textOrientation, horizontalAlignment, verticalAlignment, fontSize, fontFamily, fontWeight, fontStyle})\n    ];\n  }\n\n  function template() {\n    return _template;\n  }\n\n  function getHashCode() {\n    return \"defaultGroupTitleTemplate\";\n  }\n\n  function render(event, data) {\n    var { element, context: itemConfig, width, height } = data,\n      label = itemConfig.groupTitle,\n      backgroundColor = itemConfig.groupTitleColor || groupTitleColor,\n      fontColor = highestContrast(backgroundColor, itemTitleSecondFontColor, itemTitleFirstFontColor);\n    \n    updateRotatedText({element, orientation: OrientationType.Horizontal, textOrientation, verticalAlignment, width, height, label, fontColor });\n\n    JsonML.applyStyles(data.element, {\n      \"backgroundColor\": backgroundColor\n    });\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}