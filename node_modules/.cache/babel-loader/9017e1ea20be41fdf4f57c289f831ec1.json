{"ast":null,"code":"import ArrayReader from '../../readers/ArrayReader';\nimport ValueReader from '../../readers/ValueReader';\nexport default function ActiveItemsTask(itemsSizesOptionTask, readTemplatesTask) {\n  var _data = {\n    items: []\n  },\n      _hash = {};\n\n  var _dataTemplate = new ArrayReader(new ValueReader([\"string\", \"number\"], true), true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n        itemsSizesOptions = itemsSizesOptionTask.getOptions(),\n        items = itemsSizesOptions.items;\n    _data.items = _dataTemplate.read(_data.items, collectActiveItems(itemsSizesOptions, items), \"items\", context);\n    return context.isChanged;\n  }\n\n  function collectActiveItems(itemsSizesOptions, items) {\n    var result = [],\n        index,\n        len;\n\n    for (index = 0, len = items.length; index < len; index += 1) {\n      var itemConfig = items[index],\n          template = readTemplatesTask.getTemplate(itemConfig.templateName, itemsSizesOptions.defaultTemplateName, readTemplatesTask.DefaultWidgetTemplateName),\n          templateConfig = template.templateConfig,\n          isActive = itemConfig.isActive && templateConfig.isActive;\n\n      if (isActive) {\n        result.push(itemConfig.id);\n      }\n    }\n\n    return result;\n  }\n\n  function getActiveItems() {\n    return _hash.items;\n  }\n\n  return {\n    process: process,\n    getActiveItems: getActiveItems\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/templates/ActiveItemsTask.js"],"names":["ArrayReader","ValueReader","ActiveItemsTask","itemsSizesOptionTask","readTemplatesTask","_data","items","_hash","_dataTemplate","process","context","isChanged","hash","itemsSizesOptions","getOptions","read","collectActiveItems","result","index","len","length","itemConfig","template","getTemplate","templateName","defaultTemplateName","DefaultWidgetTemplateName","templateConfig","isActive","push","id","getActiveItems"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,eAAT,CAAyBC,oBAAzB,EAA+CC,iBAA/C,EAAkE;AAC/E,MAAIC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAE;AADG,GAAZ;AAAA,MAGEC,KAAK,GAAG,EAHV;;AAKA,MAAIC,aAAa,GAAG,IAAIR,WAAJ,CAClB,IAAIC,WAAJ,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,EAAsC,IAAtC,CADkB,EAElB,IAFkB,CAApB;;AAKA,WAASQ,OAAT,GAAmB;AACjB,QAAIC,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEL;AAFM,KAAd;AAAA,QAIEM,iBAAiB,GAAGV,oBAAoB,CAACW,UAArB,EAJtB;AAAA,QAKER,KAAK,GAAGO,iBAAiB,CAACP,KAL5B;AAOAD,IAAAA,KAAK,CAACC,KAAN,GAAcE,aAAa,CAACO,IAAd,CAAmBV,KAAK,CAACC,KAAzB,EAAgCU,kBAAkB,CAACH,iBAAD,EAAoBP,KAApB,CAAlD,EAA8E,OAA9E,EAAuFI,OAAvF,CAAd;AAEA,WAAOA,OAAO,CAACC,SAAf;AACD;;AAED,WAASK,kBAAT,CAA4BH,iBAA5B,EAA+CP,KAA/C,EAAsD;AACpD,QAAIW,MAAM,GAAG,EAAb;AAAA,QACEC,KADF;AAAA,QACSC,GADT;;AAEA,SAAKD,KAAK,GAAG,CAAR,EAAWC,GAAG,GAAGb,KAAK,CAACc,MAA5B,EAAoCF,KAAK,GAAGC,GAA5C,EAAiDD,KAAK,IAAI,CAA1D,EAA6D;AAC3D,UAAIG,UAAU,GAAGf,KAAK,CAACY,KAAD,CAAtB;AAAA,UACEI,QAAQ,GAAGlB,iBAAiB,CAACmB,WAAlB,CAA8BF,UAAU,CAACG,YAAzC,EAAuDX,iBAAiB,CAACY,mBAAzE,EAA8FrB,iBAAiB,CAACsB,yBAAhH,CADb;AAAA,UAEEC,cAAc,GAAGL,QAAQ,CAACK,cAF5B;AAAA,UAGEC,QAAQ,GAAGP,UAAU,CAACO,QAAX,IAAuBD,cAAc,CAACC,QAHnD;;AAKA,UAAIA,QAAJ,EAAc;AACZX,QAAAA,MAAM,CAACY,IAAP,CAAYR,UAAU,CAACS,EAAvB;AACD;AACF;;AACD,WAAOb,MAAP;AACD;;AAED,WAASc,cAAT,GAA0B;AACxB,WAAOxB,KAAK,CAACD,KAAb;AACD;;AAED,SAAO;AACLG,IAAAA,OAAO,EAAEA,OADJ;AAELsB,IAAAA,cAAc,EAAEA;AAFX,GAAP;AAID;AAAA","sourcesContent":["import ArrayReader from '../../readers/ArrayReader';\nimport ValueReader from '../../readers/ValueReader';\n\nexport default function ActiveItemsTask(itemsSizesOptionTask, readTemplatesTask) {\n  var _data = {\n    items: []\n  },\n    _hash = {};\n\n  var _dataTemplate = new ArrayReader(\n    new ValueReader([\"string\", \"number\"], true),\n    true\n  );\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n      itemsSizesOptions = itemsSizesOptionTask.getOptions(),\n      items = itemsSizesOptions.items;\n\n    _data.items = _dataTemplate.read(_data.items, collectActiveItems(itemsSizesOptions, items), \"items\", context);\n\n    return context.isChanged;\n  }\n\n  function collectActiveItems(itemsSizesOptions, items) {\n    var result = [],\n      index, len;\n    for (index = 0, len = items.length; index < len; index += 1) {\n      var itemConfig = items[index],\n        template = readTemplatesTask.getTemplate(itemConfig.templateName, itemsSizesOptions.defaultTemplateName, readTemplatesTask.DefaultWidgetTemplateName),\n        templateConfig = template.templateConfig,\n        isActive = itemConfig.isActive && templateConfig.isActive;\n\n      if (isActive) {\n        result.push(itemConfig.id);\n      }\n    }\n    return result;\n  }\n\n  function getActiveItems() {\n    return _hash.items;\n  }\n\n  return {\n    process: process,\n    getActiveItems: getActiveItems\n  };\n};"]},"metadata":{},"sourceType":"module"}