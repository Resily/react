{"ast":null,"code":"import BaseConnectorBundle from './BaseConnectorBundle';\nimport Polyline from '../graphics/structs/Polyline';\nimport MoveSegment from '../graphics/structs/MoveSegment';\nimport LineSegment from '../graphics/structs/LineSegment';\nimport { Visibility } from '../enums';\nexport default function HorizontalConnectorBundle(fromItem, toItem) {\n  this.fromItem = fromItem;\n  this.toItem = toItem;\n}\n;\nHorizontalConnectorBundle.prototype = new BaseConnectorBundle();\n\nHorizontalConnectorBundle.prototype.trace = function (data, params, options) {\n  var fromItemId = this.fromItem,\n      toItemId = this.toItem,\n      fromItemPosition = params.treeItemsPositions[fromItemId],\n      toItemPosition = params.treeItemsPositions[toItemId],\n      polyline = new Polyline();\n\n  if (fromItemPosition.actualPosition.x < toItemPosition.actualPosition.x) {\n    params.transform.transformPoints(fromItemPosition.actualPosition.right(), fromItemPosition.horizontalConnectorsShift, toItemPosition.actualPosition.x, toItemPosition.horizontalConnectorsShift, true, this, function (fromX, fromY, toX, toY) {\n      polyline.addSegment(new MoveSegment(fromX, fromY));\n      polyline.addSegment(new LineSegment(toX, toY));\n    }); //ignore jslint\n  } else {\n    params.transform.transformPoints(fromItemPosition.actualPosition.x, fromItemPosition.horizontalConnectorsShift, toItemPosition.actualPosition.right(), fromItemPosition.horizontalConnectorsShift, true, this, function (fromX, fromY, toX, toY) {\n      polyline.addSegment(new MoveSegment(fromX, fromY));\n      polyline.addSegment(new LineSegment(toX, toY));\n    }); //ignore jslint\n  }\n\n  var toItemIsVisible = toItemPosition.actualVisibility !== Visibility.Invisible;\n  var fromItemIsVisible = fromItemPosition.actualVisibility !== Visibility.Invisible;\n  data.graph.addEdge(fromItemId, toItemId, new this.ConnectorEdge(fromItemId, toItemId, polyline, toItemIsVisible ? toItemId : null, fromItemIsVisible ? fromItemId : null, toItemIsVisible || fromItemIsVisible ? this.NORMAL_ITEM_WEIGHT : this.LINE_ITEM_WEIGHT), null, null, null, true);\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/connectors/HorizontalConnectorBundle.js"],"names":["BaseConnectorBundle","Polyline","MoveSegment","LineSegment","Visibility","HorizontalConnectorBundle","fromItem","toItem","prototype","trace","data","params","options","fromItemId","toItemId","fromItemPosition","treeItemsPositions","toItemPosition","polyline","actualPosition","x","transform","transformPoints","right","horizontalConnectorsShift","fromX","fromY","toX","toY","addSegment","toItemIsVisible","actualVisibility","Invisible","fromItemIsVisible","graph","addEdge","ConnectorEdge","NORMAL_ITEM_WEIGHT","LINE_ITEM_WEIGHT"],"mappings":"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","sourcesContent":["import BaseConnectorBundle from './BaseConnectorBundle';\nimport Polyline from '../graphics/structs/Polyline';\nimport MoveSegment from '../graphics/structs/MoveSegment';\nimport LineSegment from '../graphics/structs/LineSegment';\nimport { Visibility } from '../enums';\n\nexport default function HorizontalConnectorBundle(fromItem, toItem) {\n  this.fromItem = fromItem;\n  this.toItem = toItem;\n};\n\nHorizontalConnectorBundle.prototype = new BaseConnectorBundle();\n\nHorizontalConnectorBundle.prototype.trace = function (data, params, options) {\n  var fromItemId = this.fromItem,\n    toItemId = this.toItem,\n    fromItemPosition = params.treeItemsPositions[fromItemId],\n    toItemPosition = params.treeItemsPositions[toItemId],\n    polyline = new Polyline();\n\n  if (fromItemPosition.actualPosition.x < toItemPosition.actualPosition.x) {\n    params.transform.transformPoints(fromItemPosition.actualPosition.right(), fromItemPosition.horizontalConnectorsShift,\n      toItemPosition.actualPosition.x, toItemPosition.horizontalConnectorsShift, true, this, function (fromX, fromY, toX, toY) {\n        polyline.addSegment(new MoveSegment(fromX, fromY));\n        polyline.addSegment(new LineSegment(toX, toY));\n      });//ignore jslint\n  } else {\n    params.transform.transformPoints(fromItemPosition.actualPosition.x, fromItemPosition.horizontalConnectorsShift,\n      toItemPosition.actualPosition.right(), fromItemPosition.horizontalConnectorsShift, true, this, function (fromX, fromY, toX, toY) {\n        polyline.addSegment(new MoveSegment(fromX, fromY));\n        polyline.addSegment(new LineSegment(toX, toY));\n      });//ignore jslint\n  }\n  var toItemIsVisible = toItemPosition.actualVisibility !== Visibility.Invisible;\n  var fromItemIsVisible = fromItemPosition.actualVisibility !== Visibility.Invisible;\n  data.graph.addEdge(fromItemId, toItemId, new this.ConnectorEdge(fromItemId, toItemId, polyline,\n    toItemIsVisible ? toItemId : null,\n    fromItemIsVisible ? fromItemId : null,\n    (toItemIsVisible || fromItemIsVisible) ? this.NORMAL_ITEM_WEIGHT : this.LINE_ITEM_WEIGHT), null, null, null,\n    true\n  );\n};"]},"metadata":{},"sourceType":"module"}