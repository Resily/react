{"ast":null,"code":"import Rect from '../structs/Rect';\nimport Point from '../structs/Point';\nimport { PlacementType } from '../../enums';\nexport default function BaseShape() {}\n;\n\nBaseShape.prototype._getLabelPosition = function (x, y, width, height, labelWidth, labelHeight, labelOffset, labelPlacement) {\n  var result = null;\n\n  switch (labelPlacement) {\n    case PlacementType.Top:\n      result = new Rect(x + width / 2.0 - labelWidth / 2.0, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.TopRight:\n      result = new Rect(x + width - labelWidth, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.TopLeft:\n      result = new Rect(x, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.Right:\n      result = new Rect(x + width + labelOffset, y + height / 2.0 - labelHeight / 2.0, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.RightTop:\n      result = new Rect(x + width + labelOffset, y, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.RightBottom:\n      result = new Rect(x + width + labelOffset, y + height - labelHeight, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.BottomRight:\n      result = new Rect(x + width - labelWidth, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.BottomLeft:\n      result = new Rect(x, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.Left:\n      result = new Rect(x - labelWidth - labelOffset, y + height / 2.0 - labelHeight / 2.0, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.LeftTop:\n      result = new Rect(x - labelWidth - labelOffset, y, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.LeftBottom:\n      result = new Rect(x - labelWidth - labelOffset, y + height - labelHeight, labelWidth, labelHeight);\n      break;\n\n    case PlacementType.Auto: //ignore jslint\n\n    case PlacementType.Bottom: //ignore jslint\n\n    default:\n      //ignore jslint\n      result = new Rect(x + width / 2.0 - labelWidth / 2.0, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n  }\n\n  return result;\n};\n\nBaseShape.prototype._betweenPoint = function (first, second) {\n  return new Point((first.x + second.x) / 2, (first.y + second.y) / 2);\n};\n\nBaseShape.prototype._offsetPoint = function (first, second, offset) {\n  var result = null,\n      distance = first.distanceTo(second);\n\n  if (distance === 0 || offset === 0) {\n    result = new Point(first);\n  } else {\n    result = new Point(first.x + (second.x - first.x) / distance * offset, first.y + (second.y - first.y) / distance * offset);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/graphics/shapes/BaseShape.js"],"names":["Rect","Point","PlacementType","BaseShape","prototype","_getLabelPosition","x","y","width","height","labelWidth","labelHeight","labelOffset","labelPlacement","result","Top","TopRight","TopLeft","Right","RightTop","RightBottom","BottomRight","BottomLeft","Left","LeftTop","LeftBottom","Auto","Bottom","_betweenPoint","first","second","_offsetPoint","offset","distance","distanceTo"],"mappings":"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","sourcesContent":["import Rect from '../structs/Rect';\nimport Point from '../structs/Point';\nimport { PlacementType } from '../../enums';\n\nexport default function BaseShape() {\n\n};\n\n\nBaseShape.prototype._getLabelPosition = function (x, y, width, height, labelWidth, labelHeight, labelOffset, labelPlacement) {\n  var result = null;\n  switch (labelPlacement) {\n    case PlacementType.Top:\n      result = new Rect(x + width / 2.0 - labelWidth / 2.0, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n    case PlacementType.TopRight:\n      result = new Rect(x + width - labelWidth, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n    case PlacementType.TopLeft:\n      result = new Rect(x, y - labelOffset - labelHeight, labelWidth, labelHeight);\n      break;\n    case PlacementType.Right:\n      result = new Rect(x + width + labelOffset, y + height / 2.0 - labelHeight / 2.0, labelWidth, labelHeight);\n      break;\n    case PlacementType.RightTop:\n      result = new Rect(x + width + labelOffset, y, labelWidth, labelHeight);\n      break;\n    case PlacementType.RightBottom:\n      result = new Rect(x + width + labelOffset, y + height - labelHeight, labelWidth, labelHeight);\n      break;\n    case PlacementType.BottomRight:\n      result = new Rect(x + width - labelWidth, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n    case PlacementType.BottomLeft:\n      result = new Rect(x, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n    case PlacementType.Left:\n      result = new Rect(x - labelWidth - labelOffset, y + height / 2.0 - labelHeight / 2.0, labelWidth, labelHeight);\n      break;\n    case PlacementType.LeftTop:\n      result = new Rect(x - labelWidth - labelOffset, y, labelWidth, labelHeight);\n      break;\n    case PlacementType.LeftBottom:\n      result = new Rect(x - labelWidth - labelOffset, y + height - labelHeight, labelWidth, labelHeight);\n      break;\n    case PlacementType.Auto: //ignore jslint\n    case PlacementType.Bottom: //ignore jslint\n    default: //ignore jslint\n      result = new Rect(x + width / 2.0 - labelWidth / 2.0, y + height + labelOffset, labelWidth, labelHeight);\n      break;\n  }\n  return result;\n};\n\nBaseShape.prototype._betweenPoint = function (first, second) {\n  return new Point((first.x + second.x) / 2, (first.y + second.y) / 2);\n};\n\nBaseShape.prototype._offsetPoint = function (first, second, offset) {\n  var result = null,\n    distance = first.distanceTo(second);\n\n  if (distance === 0 || offset === 0) {\n    result = new Point(first);\n  } else {\n    result = new Point(first.x + (second.x - first.x) / distance * offset, first.y + (second.y - first.y) / distance * offset);\n  }\n  return result;\n};"]},"metadata":{},"sourceType":"module"}