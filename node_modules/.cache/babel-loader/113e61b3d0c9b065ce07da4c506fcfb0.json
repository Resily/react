{"ast":null,"code":"import { TextOrientationType, VerticalAlignmentType } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport { getTextAlign } from '../../graphics/EnumValues';\nexport function renderRotatedText(_ref) {\n  var doc = _ref.doc,\n      textOrientation = _ref.textOrientation,\n      label = _ref.label,\n      fontSize = _ref.fontSize,\n      fontColor = _ref.fontColor,\n      position = _ref.position,\n      titleColor = _ref.titleColor,\n      horizontalAlignment = _ref.horizontalAlignment,\n      verticalAlignment = _ref.verticalAlignment;\n  doc.save();\n  doc.fillColor(titleColor).roundedRect(position.x, position.y, position.width - 2, position.height, 4).fill();\n  var labelPosition = new Rect(position.x + 4, position.y, position.width - 8, position.height);\n\n  switch (textOrientation) {\n    case TextOrientationType.RotateLeft:\n      doc.translate(0, position.height).rotate(-90, {\n        origin: [position.x, position.y]\n      });\n      labelPosition = new Rect(position.x + 4, position.y, position.height - 8, position.width);\n      break;\n\n    case TextOrientationType.RotateRight:\n      doc.translate(position.width, 0).rotate(90, {\n        origin: [position.x, position.y]\n      });\n      labelPosition = new Rect(position.x + 4, position.y, position.height - 8, position.width);\n      break;\n\n    default:\n      break;\n  }\n\n  doc.font('Helvetica', fontSize);\n  var textHeight = doc.currentLineHeight();\n\n  switch (verticalAlignment) {\n    case VerticalAlignmentType.Top:\n      labelPosition.y += 2;\n      break;\n\n    case VerticalAlignmentType.Middle:\n      labelPosition.y += Math.ceil(labelPosition.height / 2 - textHeight / 2);\n      break;\n\n    case VerticalAlignmentType.Bottom:\n      labelPosition.y += Math.ceil(labelPosition.height - textHeight - 1);\n      break;\n  }\n  /* title */\n\n\n  doc.fillColor(fontColor).text(label, labelPosition.x, labelPosition.y, {\n    ellipsis: true,\n    width: labelPosition.width,\n    height: labelPosition.height,\n    align: getTextAlign(horizontalAlignment)\n  });\n  doc.restore();\n}","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/templates/pdf/RotatedText.js"],"names":["TextOrientationType","VerticalAlignmentType","Rect","getTextAlign","renderRotatedText","doc","textOrientation","label","fontSize","fontColor","position","titleColor","horizontalAlignment","verticalAlignment","save","fillColor","roundedRect","x","y","width","height","fill","labelPosition","RotateLeft","translate","rotate","origin","RotateRight","font","textHeight","currentLineHeight","Top","Middle","Math","ceil","Bottom","text","ellipsis","align","restore"],"mappings":"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","sourcesContent":["import { TextOrientationType, VerticalAlignmentType } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport { getTextAlign } from '../../graphics/EnumValues';\n\nexport function renderRotatedText({doc, textOrientation, label, fontSize, fontColor, position, titleColor, horizontalAlignment, verticalAlignment }) {\n    doc.save();\n\n    doc.fillColor(titleColor)\n    .roundedRect(position.x, position.y, position.width - 2, position.height, 4)\n    .fill();\n\n    var labelPosition = new Rect(position.x + 4, position.y, position.width - 8, position.height);\n    switch (textOrientation) {\n      case TextOrientationType.RotateLeft:\n        doc.translate( 0, position.height)\n        .rotate(-90, {\n          origin: [position.x, position.y]\n        });\n        labelPosition = new Rect(position.x + 4, position.y, position.height - 8, position.width);\n        break;\n      case TextOrientationType.RotateRight:\n        doc.translate(position.width, 0)\n        .rotate(90, {\n          origin: [position.x, position.y]\n        });\n        labelPosition = new Rect(position.x + 4, position.y, position.height - 8, position.width);\n        break;\n      default:\n        break;\n    }\n\n    doc.font('Helvetica', fontSize);\n\n    var textHeight = doc.currentLineHeight();\n\n    switch(verticalAlignment) {\n      case VerticalAlignmentType.Top:\n        labelPosition.y +=2;\n        break;\n      case VerticalAlignmentType.Middle:\n        labelPosition.y += Math.ceil(labelPosition.height / 2 - textHeight / 2);\n        break;\n      case VerticalAlignmentType.Bottom:\n        labelPosition.y += Math.ceil(labelPosition.height - textHeight - 1);\n        break;\n\n    }\n\n    /* title */\n    doc.fillColor(fontColor)\n      .text(label, labelPosition.x, labelPosition.y, {\n        ellipsis: true,\n        width: labelPosition.width,\n        height: labelPosition.height,\n        align: getTextAlign(horizontalAlignment)\n      });\n    doc.restore();    \n}"]},"metadata":{},"sourceType":"module"}