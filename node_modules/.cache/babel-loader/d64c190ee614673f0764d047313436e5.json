{"ast":null,"code":"import { GroupByType } from '../enums';\nexport default function FamilyItem(arg0) {\n  var property;\n  this.id = null;\n  this.familyId = null;\n  this.itemConfig = null;\n  this.isVisible = true;\n  this.isActive = true; // item is clickable\n\n  this.isLevelNeutral = false; // This option allows to place fake item in between of original item levels\n\n  this.level = null;\n  this.levelGravity = GroupByType.None; // If item can be moved between its parent and children levels in diagram, this option defines preference\n\n  this.hideParentConnection = false;\n  this.hideChildrenConnection = false;\n\n  switch (arguments.length) {\n    case 1:\n      for (property in arg0) {\n        if (arg0.hasOwnProperty(property)) {\n          this[property] = arg0[property];\n        }\n      }\n\n      break;\n  }\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/models/FamilyItem.js"],"names":["GroupByType","FamilyItem","arg0","property","id","familyId","itemConfig","isVisible","isActive","isLevelNeutral","level","levelGravity","None","hideParentConnection","hideChildrenConnection","arguments","length","hasOwnProperty"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACvC,MAAIC,QAAJ;AAEA,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,UAAL,GAAkB,IAAlB;AAEA,OAAKC,SAAL,GAAiB,IAAjB;AACA,OAAKC,QAAL,GAAgB,IAAhB,CARuC,CAQjB;;AACtB,OAAKC,cAAL,GAAsB,KAAtB,CATuC,CASV;;AAE7B,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,YAAL,GAAoBX,WAAW,CAACY,IAAhC,CAZuC,CAYD;;AACtC,OAAKC,oBAAL,GAA4B,KAA5B;AACA,OAAKC,sBAAL,GAA8B,KAA9B;;AAEA,UAAQC,SAAS,CAACC,MAAlB;AACE,SAAK,CAAL;AACE,WAAKb,QAAL,IAAiBD,IAAjB,EAAuB;AACrB,YAAIA,IAAI,CAACe,cAAL,CAAoBd,QAApB,CAAJ,EAAmC;AACjC,eAAKA,QAAL,IAAiBD,IAAI,CAACC,QAAD,CAArB;AACD;AACF;;AACD;AAPJ;AASD;AAAA","sourcesContent":["import { GroupByType } from '../enums';\n\nexport default function FamilyItem(arg0) {\n  var property;\n\n  this.id = null;\n  this.familyId = null;\n  this.itemConfig = null;\n\n  this.isVisible = true;\n  this.isActive = true; // item is clickable\n  this.isLevelNeutral = false; // This option allows to place fake item in between of original item levels\n\n  this.level = null;\n  this.levelGravity = GroupByType.None; // If item can be moved between its parent and children levels in diagram, this option defines preference\n  this.hideParentConnection = false;\n  this.hideChildrenConnection = false;\n\n  switch (arguments.length) {\n    case 1:\n      for (property in arg0) {\n        if (arg0.hasOwnProperty(property)) {\n          this[property] = arg0[property];\n        }\n      }\n      break;\n  }\n};"]},"metadata":{},"sourceType":"module"}