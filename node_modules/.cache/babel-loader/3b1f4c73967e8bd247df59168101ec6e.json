{"ast":null,"code":"import Size from '../../graphics/structs/Size';\nimport TemplateConfig from '../../configs/TemplateConfig';\nimport Template from '../../models/Template';\nimport { isNullOrEmpty } from '../../common';\nexport default function ReadTemplatesTask(templatesOptionTask, defaultTemplates) {\n  var _data = {\n    templates: {},\n    itemTemplates: []\n  },\n      _defaultWidgetTemplateName = \"DefaultWidgetTemplate\",\n      _defaultWidgetLabelAnnotationTemplateName = \"DefaultWidgetLabelAnnotationTemplate\";\n\n  function process() {\n    var index,\n        len,\n        templateConfig,\n        options = templatesOptionTask.getOptions(),\n        templates = options.templates;\n    _data.templates = {};\n    _data.itemTemplates = [];\n    templateConfig = new TemplateConfig();\n    _data.templates[_defaultWidgetTemplateName] = new Template(templateConfig, new defaultTemplates.ItemTemplate(options, templateConfig), new defaultTemplates.HighlightTemplate(options, templateConfig), new defaultTemplates.DotHighlightTemplate(options, templateConfig), new defaultTemplates.CursorTemplate(options, templateConfig));\n\n    _data.itemTemplates.push(_data.templates[_defaultWidgetTemplateName]);\n\n    templateConfig = getLabelAnnotationTemplateConfig(_defaultWidgetLabelAnnotationTemplateName);\n    _data.templates[_defaultWidgetLabelAnnotationTemplateName] = new Template(templateConfig, new defaultTemplates.LabelAnnotationTemplate(), null, new defaultTemplates.DotHighlightTemplate(options, templateConfig), null);\n\n    for (index = 0, len = templates.length; index < len; index += 1) {\n      templateConfig = templates[index];\n      _data.templates[templateConfig.name] = new Template(templateConfig, isNullOrEmpty(templateConfig.itemTemplate) ? new defaultTemplates.ItemTemplate(options, templateConfig) : new defaultTemplates.UserTemplate(options, templateConfig.itemTemplate, options.onItemRender), isNullOrEmpty(templateConfig.highlightTemplate) ? new defaultTemplates.HighlightTemplate(options, templateConfig) : new defaultTemplates.UserTemplate(options, templateConfig.highlightTemplate, options.onHighlightRender), new defaultTemplates.DotHighlightTemplate(options, templateConfig), isNullOrEmpty(templateConfig.cursorTemplate) ? new defaultTemplates.CursorTemplate(options, templateConfig) : new defaultTemplates.UserTemplate(options, templateConfig.cursorTemplate, options.onCursorRender));\n\n      _data.itemTemplates.push(_data.templates[templateConfig.name]);\n    }\n\n    return true;\n  }\n\n  function getLabelAnnotationTemplateConfig(name) {\n    var config = new TemplateConfig();\n    config.name = name;\n    config.isActive = false;\n    config.itemSize = new Size(100, 20);\n    config.minimizedItemSize = new Size(0, 0);\n    config.minimizedItemCornerRadius = config.minimizedItemSize.width / 2;\n    return config;\n  }\n\n  function getTemplate(templateName1, templateName2, templateName3) {\n    var result = _data.templates[templateName1] || _data.templates[templateName2] || _data.templates[templateName3];\n    return result;\n  }\n\n  function getItemTemplates() {\n    return _data.itemTemplates;\n  }\n\n  return {\n    process: process,\n    getTemplate: getTemplate,\n    getItemTemplates: getItemTemplates,\n    DefaultWidgetTemplateName: _defaultWidgetTemplateName,\n    DefaultWidgetLabelAnnotationTemplateName: _defaultWidgetLabelAnnotationTemplateName\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/templates/ReadTemplatesTask.js"],"names":["Size","TemplateConfig","Template","isNullOrEmpty","ReadTemplatesTask","templatesOptionTask","defaultTemplates","_data","templates","itemTemplates","_defaultWidgetTemplateName","_defaultWidgetLabelAnnotationTemplateName","process","index","len","templateConfig","options","getOptions","ItemTemplate","HighlightTemplate","DotHighlightTemplate","CursorTemplate","push","getLabelAnnotationTemplateConfig","LabelAnnotationTemplate","length","name","itemTemplate","UserTemplate","onItemRender","highlightTemplate","onHighlightRender","cursorTemplate","onCursorRender","config","isActive","itemSize","minimizedItemSize","minimizedItemCornerRadius","width","getTemplate","templateName1","templateName2","templateName3","result","getItemTemplates","DefaultWidgetTemplateName","DefaultWidgetLabelAnnotationTemplateName"],"mappings":"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","sourcesContent":["import Size from '../../graphics/structs/Size';\nimport TemplateConfig from '../../configs/TemplateConfig';\nimport Template from '../../models/Template';\nimport { isNullOrEmpty } from '../../common';\n\nexport default function ReadTemplatesTask(templatesOptionTask, defaultTemplates) {\n  var _data = {\n    templates: {},\n    itemTemplates: []\n  },\n    _defaultWidgetTemplateName = \"DefaultWidgetTemplate\",\n    _defaultWidgetLabelAnnotationTemplateName = \"DefaultWidgetLabelAnnotationTemplate\";\n\n  function process() {\n    var index, len,\n      templateConfig,\n      options = templatesOptionTask.getOptions(),\n      templates = options.templates;\n\n\n    _data.templates = {};\n    _data.itemTemplates = [];\n\n    templateConfig = new TemplateConfig();\n\n    _data.templates[_defaultWidgetTemplateName] = new Template(\n      templateConfig,\n      new defaultTemplates.ItemTemplate(options, templateConfig),\n      new defaultTemplates.HighlightTemplate(options, templateConfig),\n      new defaultTemplates.DotHighlightTemplate(options, templateConfig),\n      new defaultTemplates.CursorTemplate(options, templateConfig)\n    );\n\n    _data.itemTemplates.push(_data.templates[_defaultWidgetTemplateName]);\n\n    templateConfig = getLabelAnnotationTemplateConfig(_defaultWidgetLabelAnnotationTemplateName);\n\n    _data.templates[_defaultWidgetLabelAnnotationTemplateName] = new Template(\n      templateConfig,\n      new defaultTemplates.LabelAnnotationTemplate(),\n      null,\n      new defaultTemplates.DotHighlightTemplate(options, templateConfig),\n      null\n    );\n\n    for (index = 0, len = templates.length; index < len; index += 1) {\n      templateConfig = templates[index];\n\n      _data.templates[templateConfig.name] = new Template(\n        templateConfig,\n        isNullOrEmpty(templateConfig.itemTemplate) ?\n          new defaultTemplates.ItemTemplate(options, templateConfig) :\n          new defaultTemplates.UserTemplate(options, templateConfig.itemTemplate, options.onItemRender),\n        isNullOrEmpty(templateConfig.highlightTemplate) ?\n          new defaultTemplates.HighlightTemplate(options, templateConfig) :\n          new defaultTemplates.UserTemplate(options, templateConfig.highlightTemplate, options.onHighlightRender),\n        new defaultTemplates.DotHighlightTemplate(options, templateConfig),\n        isNullOrEmpty(templateConfig.cursorTemplate) ?\n          new defaultTemplates.CursorTemplate(options, templateConfig) :\n          new defaultTemplates.UserTemplate(options, templateConfig.cursorTemplate, options.onCursorRender)\n      );\n\n      _data.itemTemplates.push(_data.templates[templateConfig.name]);\n    }\n\n    return true;\n  }\n\n  function getLabelAnnotationTemplateConfig(name) {\n    var config = new TemplateConfig();\n    config.name = name;\n    config.isActive = false;\n    config.itemSize = new Size(100, 20);\n    config.minimizedItemSize = new Size(0, 0);\n    config.minimizedItemCornerRadius = config.minimizedItemSize.width / 2;\n    return config;\n  }\n\n  function getTemplate(templateName1, templateName2, templateName3) {\n    var result = _data.templates[templateName1] || _data.templates[templateName2] || _data.templates[templateName3];\n    return result;\n  }\n\n  function getItemTemplates() {\n    return _data.itemTemplates;\n  }\n\n  return {\n    process: process,\n    getTemplate: getTemplate,\n    getItemTemplates: getItemTemplates,\n    DefaultWidgetTemplateName: _defaultWidgetTemplateName,\n    DefaultWidgetLabelAnnotationTemplateName: _defaultWidgetLabelAnnotationTemplateName\n  };\n};"]},"metadata":{},"sourceType":"module"}