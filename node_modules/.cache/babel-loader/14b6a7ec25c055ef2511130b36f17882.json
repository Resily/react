{"ast":null,"code":"import Family from '../../algorithms/Family';\nimport FamilyItem from '../../models/FamilyItem';\nexport default function LogicalFamilyTask(itemsOptionTask) {\n  var _data = {\n    logicalFamily: null,\n    maximumId: null\n  };\n\n  function process(debug) {\n    var index,\n        len,\n        itemConfig,\n        famItem,\n        items = itemsOptionTask.getItems(),\n        logicalFamily = Family(),\n\n    /*family contains FamItemConfig */\n    maximumId = 0,\n        parsedId;\n\n    if (items.length > 0) {\n      for (index = 0, len = items.length; index < len; index += 1) {\n        itemConfig = items[index];\n\n        if (itemConfig != null) {\n          famItem = new FamilyItem({\n            id: itemConfig.id,\n            itemConfig: itemConfig,\n            isActive: itemConfig.isActive\n          });\n          logicalFamily.add(itemConfig.parents, famItem.id, famItem);\n          parsedId = parseInt(itemConfig.id, 10);\n          maximumId = Math.max(isNaN(parsedId) ? 0 : parsedId, maximumId);\n        }\n      }\n    }\n\n    _data.logicalFamily = logicalFamily;\n    _data.maximumId = maximumId;\n\n    if (debug && !logicalFamily.validate()) {\n      throw \"References are broken in family structure!\";\n    }\n\n    return true;\n  }\n\n  function getLogicalFamily() {\n    return _data.logicalFamily;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  return {\n    process: process,\n    getLogicalFamily: getLogicalFamily,\n    getMaximumId: getMaximumId\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/LogicalFamilyTask.js"],"names":["Family","FamilyItem","LogicalFamilyTask","itemsOptionTask","_data","logicalFamily","maximumId","process","debug","index","len","itemConfig","famItem","items","getItems","parsedId","length","id","isActive","add","parents","parseInt","Math","max","isNaN","validate","getLogicalFamily","getMaximumId"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,eAA3B,EAA4C;AACzD,MAAIC,KAAK,GAAG;AACVC,IAAAA,aAAa,EAAE,IADL;AAEVC,IAAAA,SAAS,EAAE;AAFD,GAAZ;;AAKA,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIC,KAAJ;AAAA,QAAWC,GAAX;AAAA,QACEC,UADF;AAAA,QACcC,OADd;AAAA,QAEEC,KAAK,GAAGV,eAAe,CAACW,QAAhB,EAFV;AAAA,QAGET,aAAa,GAAGL,MAAM,EAHxB;;AAG4B;AAC1BM,IAAAA,SAAS,GAAG,CAJd;AAAA,QAKES,QALF;;AAOA,QAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,WAAKP,KAAK,GAAG,CAAR,EAAWC,GAAG,GAAGG,KAAK,CAACG,MAA5B,EAAoCP,KAAK,GAAGC,GAA5C,EAAiDD,KAAK,IAAI,CAA1D,EAA6D;AAC3DE,QAAAA,UAAU,GAAGE,KAAK,CAACJ,KAAD,CAAlB;;AAEA,YAAIE,UAAU,IAAI,IAAlB,EAAwB;AACtBC,UAAAA,OAAO,GAAG,IAAIX,UAAJ,CAAe;AACvBgB,YAAAA,EAAE,EAAEN,UAAU,CAACM,EADQ;AAEvBN,YAAAA,UAAU,EAAEA,UAFW;AAGvBO,YAAAA,QAAQ,EAAEP,UAAU,CAACO;AAHE,WAAf,CAAV;AAMAb,UAAAA,aAAa,CAACc,GAAd,CAAkBR,UAAU,CAACS,OAA7B,EAAsCR,OAAO,CAACK,EAA9C,EAAkDL,OAAlD;AAEAG,UAAAA,QAAQ,GAAGM,QAAQ,CAACV,UAAU,CAACM,EAAZ,EAAgB,EAAhB,CAAnB;AACAX,UAAAA,SAAS,GAAGgB,IAAI,CAACC,GAAL,CAASC,KAAK,CAACT,QAAD,CAAL,GAAkB,CAAlB,GAAsBA,QAA/B,EAAyCT,SAAzC,CAAZ;AACD;AACF;AACF;;AAEDF,IAAAA,KAAK,CAACC,aAAN,GAAsBA,aAAtB;AACAD,IAAAA,KAAK,CAACE,SAAN,GAAkBA,SAAlB;;AAEA,QAAIE,KAAK,IAAI,CAACH,aAAa,CAACoB,QAAd,EAAd,EAAwC;AACtC,YAAM,4CAAN;AACD;;AAED,WAAO,IAAP;AACD;;AAED,WAASC,gBAAT,GAA4B;AAC1B,WAAOtB,KAAK,CAACC,aAAb;AACD;;AAED,WAASsB,YAAT,GAAwB;AACtB,WAAOvB,KAAK,CAACE,SAAb;AACD;;AAED,SAAO;AACLC,IAAAA,OAAO,EAAEA,OADJ;AAELmB,IAAAA,gBAAgB,EAAEA,gBAFb;AAGLC,IAAAA,YAAY,EAAEA;AAHT,GAAP;AAKD;AAAA","sourcesContent":["import Family from '../../algorithms/Family';\nimport FamilyItem from '../../models/FamilyItem';\n\nexport default function LogicalFamilyTask(itemsOptionTask) {\n  var _data = {\n    logicalFamily: null,\n    maximumId: null\n  };\n\n  function process(debug) {\n    var index, len,\n      itemConfig, famItem,\n      items = itemsOptionTask.getItems(),\n      logicalFamily = Family(), /*family contains FamItemConfig */\n      maximumId = 0,\n      parsedId;\n\n    if (items.length > 0) {\n      for (index = 0, len = items.length; index < len; index += 1) {\n        itemConfig = items[index];\n\n        if (itemConfig != null) {\n          famItem = new FamilyItem({\n            id: itemConfig.id,\n            itemConfig: itemConfig,\n            isActive: itemConfig.isActive\n          });\n\n          logicalFamily.add(itemConfig.parents, famItem.id, famItem);\n\n          parsedId = parseInt(itemConfig.id, 10);\n          maximumId = Math.max(isNaN(parsedId) ? 0 : parsedId, maximumId);\n        }\n      }\n    }\n\n    _data.logicalFamily = logicalFamily;\n    _data.maximumId = maximumId;\n\n    if (debug && !logicalFamily.validate()) {\n      throw \"References are broken in family structure!\";\n    }\n\n    return true;\n  }\n\n  function getLogicalFamily() {\n    return _data.logicalFamily;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  return {\n    process: process,\n    getLogicalFamily: getLogicalFamily,\n    getMaximumId: getMaximumId\n  };\n};"]},"metadata":{},"sourceType":"module"}