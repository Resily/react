{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport { NeighboursSelectionMode } from '../../../enums';\nexport default function FamCursorNeighboursTask(cursorItemTask, neighboursSelectionModeOptionTask, navigationFamilyTask, activeItemsTask) {\n  var _data = {\n    items: []\n  },\n      _hash = {};\n\n  var _dataTemplate = new ArrayReader(new ValueReader([\"string\", \"number\"], true), true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n        cursorTreeItemId = cursorItemTask.getCursorTreeItem(),\n        navigationFamily = navigationFamilyTask.getLogicalFamily(),\n        neighboursSelectionMode = neighboursSelectionModeOptionTask.getNeighboursSelectionMode(),\n        activeItems = activeItemsTask.getActiveItems();\n    _data.items = _dataTemplate.read(_data.items, getCursorNeighbours(cursorTreeItemId, neighboursSelectionMode, navigationFamily, activeItems), \"items\", context);\n    return context.isChanged;\n  }\n\n  function getCursorNeighbours(cursorTreeItemId, neighboursSelectionMode, navigationFamily, activeItems) {\n    var result = [],\n        processed = {};\n\n    if (cursorTreeItemId !== null) {\n      switch (neighboursSelectionMode) {\n        case NeighboursSelectionMode.ParentsAndChildren:\n          navigationFamily.loopParents(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n\n            if (activeItems.hasOwnProperty(itemid)) {\n              return navigationFamily.SKIP;\n            }\n          });\n          navigationFamily.loopChildren(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n\n            if (activeItems.hasOwnProperty(itemid)) {\n              return navigationFamily.SKIP;\n            }\n          });\n          break;\n\n        case NeighboursSelectionMode.ParentsChildrenSiblingsAndSpouses:\n          navigationFamily.loopNeighbours(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n\n            if (activeItems.hasOwnProperty(itemid)) {\n              return true;\n            }\n          });\n          break;\n      }\n    }\n\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/selection/FamCursorNeighboursTask.js"],"names":["ArrayReader","ValueReader","NeighboursSelectionMode","FamCursorNeighboursTask","cursorItemTask","neighboursSelectionModeOptionTask","navigationFamilyTask","activeItemsTask","_data","items","_hash","_dataTemplate","process","context","isChanged","hash","cursorTreeItemId","getCursorTreeItem","navigationFamily","getLogicalFamily","neighboursSelectionMode","getNeighboursSelectionMode","activeItems","getActiveItems","read","getCursorNeighbours","result","processed","ParentsAndChildren","loopParents","itemid","item","isVisible","hasOwnProperty","push","SKIP","loopChildren","ParentsChildrenSiblingsAndSpouses","loopNeighbours","getItems"],"mappings":"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","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport { NeighboursSelectionMode } from '../../../enums';\n\nexport default function FamCursorNeighboursTask(cursorItemTask, neighboursSelectionModeOptionTask, navigationFamilyTask, activeItemsTask) {\n  var _data = {\n    items: []\n  },\n    _hash = {};\n\n  var _dataTemplate = new ArrayReader(\n    new ValueReader([\"string\", \"number\"], true),\n    true\n  );\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n      cursorTreeItemId = cursorItemTask.getCursorTreeItem(),\n      navigationFamily = navigationFamilyTask.getLogicalFamily(),\n      neighboursSelectionMode = neighboursSelectionModeOptionTask.getNeighboursSelectionMode(),\n      activeItems = activeItemsTask.getActiveItems();\n\n    _data.items = _dataTemplate.read(_data.items, getCursorNeighbours(cursorTreeItemId, neighboursSelectionMode, navigationFamily, activeItems), \"items\", context);\n\n    return context.isChanged;\n  }\n\n  function getCursorNeighbours(cursorTreeItemId, neighboursSelectionMode, navigationFamily, activeItems) {\n    var result = [],\n      processed = {};\n    if (cursorTreeItemId !== null) {\n      switch (neighboursSelectionMode) {\n        case NeighboursSelectionMode.ParentsAndChildren:\n          navigationFamily.loopParents(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n            if (activeItems.hasOwnProperty(itemid)) {\n              return navigationFamily.SKIP;\n            }\n          });\n          navigationFamily.loopChildren(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n            if (activeItems.hasOwnProperty(itemid)) {\n              return navigationFamily.SKIP;\n            }\n          });\n          break;\n        case NeighboursSelectionMode.ParentsChildrenSiblingsAndSpouses:\n          navigationFamily.loopNeighbours(this, cursorTreeItemId, function (itemid, item) {\n            if (item.isVisible && !processed.hasOwnProperty(itemid)) {\n              processed[itemid] = true;\n              result.push(itemid);\n            }\n            if (activeItems.hasOwnProperty(itemid)) {\n              return true;\n            }\n          });\n          break;\n      }\n    }\n    return result;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  return {\n    process: process,\n    getItems: getItems\n  };\n};"]},"metadata":{},"sourceType":"module"}