{"ast":null,"code":"import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, Visibility } from '../../enums';\nexport default function DrawHighlightTask(getGraphics, createTransformTask, applyLayoutChangesTask, combinedContextsTask, alignDiagramTask, itemTemplateParamsTask, highlightItemTask, cursorItemTask, selectedItemsTask) {\n  var _graphics, _transform;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"placeholder\", Layers.Highlight);\n\n    if (treeItemId != null) {\n      _transform = createTransformTask.getTransform();\n      drawHighlight(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawHighlight(treeItemId) {\n    var uiHash,\n        panel = _graphics.activate(\"placeholder\", Layers.Highlight),\n        treeItemPosition = alignDiagramTask.getItemPosition(treeItemId),\n        actualPosition = treeItemPosition.actualPosition,\n        templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n        template = templateParams.template,\n        templateConfig = template.templateConfig,\n        highlightPadding = templateConfig.highlightPadding;\n\n    uiHash = new RenderEventArgs();\n    uiHash.context = combinedContextsTask.getConfig(treeItemId);\n    uiHash.isCursor = cursorItemTask.getCursorTreeItem() == treeItemId;\n    uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n    uiHash.templateName = templateConfig.name;\n\n    _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true, this, function (x, y, width, height) {\n      var position = new Rect(0, 0, Math.round(width), Math.round(height));\n      position.offset(highlightPadding.left, highlightPadding.top, highlightPadding.right, highlightPadding.bottom);\n      var element;\n\n      if (treeItemPosition.actualVisibility == Visibility.Normal) {\n        element = _graphics.template(x, y, width, height, position.x, position.y, position.width, position.height, template.highlightTemplate.template(), template.highlightTemplate.getHashCode(), template.highlightTemplate.render, uiHash, {\n          \"borderWidth\": templateConfig.highlightBorderWidth\n        });\n      } else {\n        element = _graphics.template(Math.round(x), Math.round(y), Math.round(width), Math.round(height), Math.round(position.x), Math.round(position.y), Math.round(position.width), Math.round(position.height), template.dotHighlightTemplate.template(), template.dotHighlightTemplate.getHashCode(), template.dotHighlightTemplate.render, uiHash, {\n          \"borderWidth\": templateConfig.highlightBorderWidth\n        });\n      }\n    });\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawHighlightTask.js"],"names":["Rect","RenderEventArgs","Layers","Visibility","DrawHighlightTask","getGraphics","createTransformTask","applyLayoutChangesTask","combinedContextsTask","alignDiagramTask","itemTemplateParamsTask","highlightItemTask","cursorItemTask","selectedItemsTask","_graphics","_transform","process","treeItemId","getHighlightTreeItem","reset","Highlight","getTransform","drawHighlight","uiHash","panel","activate","treeItemPosition","getItemPosition","actualPosition","templateParams","getTemplateParams","template","templateConfig","highlightPadding","context","getConfig","isCursor","getCursorTreeItem","isSelected","templateName","name","transformRect","x","y","width","height","position","Math","round","offset","left","top","right","bottom","element","actualVisibility","Normal","highlightTemplate","getHashCode","render","highlightBorderWidth","dotHighlightTemplate"],"mappings":"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","sourcesContent":["import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, Visibility } from '../../enums';\n\nexport default function DrawHighlightTask(getGraphics, createTransformTask, applyLayoutChangesTask,\n  combinedContextsTask,\n  alignDiagramTask, itemTemplateParamsTask,\n  highlightItemTask, cursorItemTask, selectedItemsTask) {\n  var _graphics,\n    _transform;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"placeholder\", Layers.Highlight);\n\n    if (treeItemId != null) {\n      _transform = createTransformTask.getTransform();\n      drawHighlight(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawHighlight(treeItemId) {\n    var uiHash,\n      panel = _graphics.activate(\"placeholder\", Layers.Highlight),\n      treeItemPosition = alignDiagramTask.getItemPosition(treeItemId),\n      actualPosition = treeItemPosition.actualPosition,\n      templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n      template = templateParams.template,\n      templateConfig = template.templateConfig,\n      highlightPadding = templateConfig.highlightPadding;\n\n    uiHash = new RenderEventArgs();\n    uiHash.context = combinedContextsTask.getConfig(treeItemId);\n    uiHash.isCursor = (cursorItemTask.getCursorTreeItem() == treeItemId);\n    uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n    uiHash.templateName = templateConfig.name;\n\n    _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true,\n      this, function (x, y, width, height) {\n        var position = new Rect(0, 0, Math.round(width), Math.round(height));\n        position.offset(highlightPadding.left, highlightPadding.top, highlightPadding.right, highlightPadding.bottom);\n\n        var element;\n        if (treeItemPosition.actualVisibility == Visibility.Normal) {\n          element = _graphics.template(\n            x\n            , y\n            , width\n            , height\n            , position.x\n            , position.y\n            , position.width\n            , position.height\n            , template.highlightTemplate.template()\n            , template.highlightTemplate.getHashCode()\n            , template.highlightTemplate.render\n            , uiHash\n            , { \"borderWidth\": templateConfig.highlightBorderWidth }\n          );\n        } else {\n          element = _graphics.template(\n            Math.round(x)\n            , Math.round(y)\n            , Math.round(width)\n            , Math.round(height)\n            , Math.round(position.x)\n            , Math.round(position.y)\n            , Math.round(position.width)\n            , Math.round(position.height)\n            , template.dotHighlightTemplate.template()\n            , template.dotHighlightTemplate.getHashCode()\n            , template.dotHighlightTemplate.render\n            , uiHash\n            , { \"borderWidth\": templateConfig.highlightBorderWidth }\n          );\n        }\n      });\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}