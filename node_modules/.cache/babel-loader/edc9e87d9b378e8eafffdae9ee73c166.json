{"ast":null,"code":"import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, ZOrderType } from '../../enums';\nimport Shape from '../../graphics/shapes/Shape';\nimport ShapeAnnotationConfig from '../../configs/ShapeAnnotationConfig';\nexport default function DrawShapeAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask, orientationOptionTask, shapeAnnotationOptionTask, alignDiagramTask, annotationLabelTemplateTask, zOrderType) {\n  var _graphics, _transform, _orientationOptions, _annotationLabelTemplate;\n\n  function process() {\n    _graphics = getGraphics();\n    _transform = createTransformTask.getTransform();\n    _orientationOptions = orientationOptionTask.getOptions();\n    _annotationLabelTemplate = annotationLabelTemplateTask.getTemplate();\n\n    switch (zOrderType) {\n      case ZOrderType.Background:\n        //ignore jslint\n        _graphics.reset(\"placeholder\", Layers.BackgroundAnnotations);\n\n        break;\n\n      case ZOrderType.Foreground:\n        //ignore jslint\n        _graphics.reset(\"placeholder\", Layers.ForegroundAnnotations);\n\n        break;\n    }\n\n    _drawAnnotations(shapeAnnotationOptionTask.getAnnotations(), alignDiagramTask.getItemPosition);\n\n    return false;\n  }\n\n  function _drawAnnotations(annotations, getItemPosition) {\n    var panel, index, len, index2, len2, index3, len3, shape, defaultConfig, itemPosition, position, properties, property, annotationConfig, uiHash;\n\n    switch (zOrderType) {\n      case ZOrderType.Background:\n        //ignore jslint\n        panel = _graphics.activate(\"placeholder\", Layers.BackgroundAnnotations);\n        break;\n\n      case ZOrderType.Foreground:\n        //ignore jslint\n        panel = _graphics.activate(\"placeholder\", Layers.ForegroundAnnotations);\n        break;\n    }\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotationConfig = annotations[index];\n\n      if (annotationConfig.items != null && annotationConfig.items.length > 0) {\n        position = new Rect();\n\n        for (index2 = 0, len2 = annotationConfig.items.length; index2 < len2; index2 += 1) {\n          itemPosition = getItemPosition(annotationConfig.items[index2]);\n\n          if (itemPosition != null) {\n            position.addRect(itemPosition.actualPosition);\n          }\n        }\n\n        if (!position.isEmpty()) {\n          shape = new Shape(_graphics);\n          defaultConfig = new ShapeAnnotationConfig();\n          properties = [\"opacity\", \"cornerRadius\", \"shapeType\", \"offset\", \"lineWidth\", \"borderColor\", \"fillColor\", \"lineType\", \"labelSize\", \"labelOffset\", \"labelPlacement\", \"zOrderType\"];\n\n          for (index3 = 0, len3 = properties.length; index3 < len3; index3 += 1) {\n            property = properties[index3];\n            shape[property] = annotationConfig.hasOwnProperty(property) ? annotationConfig[property] : defaultConfig[property];\n          }\n\n          shape.position = position;\n          shape.orientationType = _orientationOptions.orientationType;\n          shape.panelSize = panel.size;\n          shape.labelTemplate = _annotationLabelTemplate;\n          shape.hasLabel = annotationConfig.templateName != null || annotationConfig.label != null;\n          uiHash = new RenderEventArgs();\n          uiHash.context = annotationConfig;\n          uiHash.templateName = shape.labelTemplate;\n\n          _transform.transformRect(position.x, position.y, position.width, position.height, true, this, function (x, y, width, height) {\n            var position = new Rect(x, y, width, height);\n            shape.draw(position, uiHash);\n          }); //ignore jslint\n\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawShapeAnnotationTask.js"],"names":["Rect","RenderEventArgs","Layers","ZOrderType","Shape","ShapeAnnotationConfig","DrawShapeAnnotationTask","getGraphics","createTransformTask","applyLayoutChangesTask","orientationOptionTask","shapeAnnotationOptionTask","alignDiagramTask","annotationLabelTemplateTask","zOrderType","_graphics","_transform","_orientationOptions","_annotationLabelTemplate","process","getTransform","getOptions","getTemplate","Background","reset","BackgroundAnnotations","Foreground","ForegroundAnnotations","_drawAnnotations","getAnnotations","getItemPosition","annotations","panel","index","len","index2","len2","index3","len3","shape","defaultConfig","itemPosition","position","properties","property","annotationConfig","uiHash","activate","length","items","addRect","actualPosition","isEmpty","hasOwnProperty","orientationType","panelSize","size","labelTemplate","hasLabel","templateName","label","context","transformRect","x","y","width","height","draw"],"mappings":"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","sourcesContent":["import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, ZOrderType } from '../../enums';\nimport Shape from '../../graphics/shapes/Shape';\nimport ShapeAnnotationConfig from '../../configs/ShapeAnnotationConfig';\n\nexport default function DrawShapeAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask,\n  orientationOptionTask, shapeAnnotationOptionTask, alignDiagramTask, annotationLabelTemplateTask, zOrderType) {\n  var _graphics,\n    _transform,\n    _orientationOptions,\n    _annotationLabelTemplate;\n\n  function process() {\n\n    _graphics = getGraphics();\n\n    _transform = createTransformTask.getTransform();\n    _orientationOptions = orientationOptionTask.getOptions();\n\n    _annotationLabelTemplate = annotationLabelTemplateTask.getTemplate();\n\n    switch (zOrderType) {\n      case ZOrderType.Background://ignore jslint\n        _graphics.reset(\"placeholder\", Layers.BackgroundAnnotations);\n        break;\n      case ZOrderType.Foreground://ignore jslint\n        _graphics.reset(\"placeholder\", Layers.ForegroundAnnotations);\n        break;\n    }\n\n    _drawAnnotations(shapeAnnotationOptionTask.getAnnotations(), alignDiagramTask.getItemPosition);\n\n    return false;\n  }\n\n  function _drawAnnotations(annotations, getItemPosition) {\n    var panel,\n      index, len,\n      index2, len2,\n      index3, len3,\n      shape,\n      defaultConfig,\n      itemPosition, position,\n      properties, property,\n      annotationConfig,\n      uiHash;\n\n\n    switch (zOrderType) {\n      case ZOrderType.Background://ignore jslint\n        panel = _graphics.activate(\"placeholder\", Layers.BackgroundAnnotations);\n        break;\n      case ZOrderType.Foreground://ignore jslint\n        panel = _graphics.activate(\"placeholder\", Layers.ForegroundAnnotations);\n        break;\n    }\n\n    for (index = 0, len = annotations.length; index < len; index += 1) {\n      annotationConfig = annotations[index];\n\n      if (annotationConfig.items != null && annotationConfig.items.length > 0) {\n        position = new Rect();\n        for (index2 = 0, len2 = annotationConfig.items.length; index2 < len2; index2 += 1) {\n          itemPosition = getItemPosition(annotationConfig.items[index2]);\n          if (itemPosition != null) {\n            position.addRect(itemPosition.actualPosition);\n          }\n        }\n\n        if (!position.isEmpty()) {\n          shape = new Shape(_graphics);\n          defaultConfig = new ShapeAnnotationConfig();\n          properties = [\"opacity\", \"cornerRadius\", \"shapeType\", \"offset\", \"lineWidth\", \"borderColor\", \"fillColor\", \"lineType\", \"labelSize\", \"labelOffset\", \"labelPlacement\", \"zOrderType\"];\n          for (index3 = 0, len3 = properties.length; index3 < len3; index3 += 1) {\n            property = properties[index3];\n            shape[property] = annotationConfig.hasOwnProperty(property) ? annotationConfig[property] : defaultConfig[property];\n          }\n\n          shape.position = position;\n          shape.orientationType = _orientationOptions.orientationType;\n          shape.panelSize = panel.size;\n          shape.labelTemplate = _annotationLabelTemplate;\n          shape.hasLabel = annotationConfig.templateName != null || annotationConfig.label != null;\n\n          uiHash = new RenderEventArgs();\n          uiHash.context = annotationConfig;\n          uiHash.templateName = shape.labelTemplate;\n\n          _transform.transformRect(position.x, position.y, position.width, position.height, true,\n            this, function (x, y, width, height) {\n              var position = new Rect(x, y, width, height);\n              shape.draw(position, uiHash);\n            });//ignore jslint\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}