{"ast":null,"code":"import FamEventArgs from './events/FamEventArgs';\nimport { getElementOffset } from './graphics/dom';\nimport Rect from './graphics/structs/Rect';\nexport default function FamEventArgsFactory(data, oldTreeItemId, newTreeItemId, name) {\n  var result = new FamEventArgs(),\n      combinedContextsTask = data.tasks.getTask(\"CombinedContextsTask\"),\n      alignDiagramTask = data.tasks.getTask(\"AlignDiagramTask\"),\n      logicalFamilyTask = data.tasks.getTask(\"LogicalFamilyTask\"),\n      oldItemConfig = combinedContextsTask.getConfig(oldTreeItemId),\n      newItemConfig = combinedContextsTask.getConfig(newTreeItemId),\n      family = logicalFamilyTask.getLogicalFamily(),\n      itemPosition,\n      offset,\n      panelOffset;\n\n  if (oldItemConfig && oldItemConfig.id != null) {\n    result.oldContext = oldItemConfig;\n  }\n\n  if (newItemConfig && newItemConfig.id != null) {\n    result.context = newItemConfig;\n    family.loopParents(this, newItemConfig.id, function (itemid, item, levelIndex) {\n      if (levelIndex > 0) {\n        return family.BREAK;\n      }\n\n      result.parentItems.push(combinedContextsTask.getConfig(itemid));\n    });\n    family.loopChildren(this, newItemConfig.id, function (itemid, item, levelIndex) {\n      if (levelIndex > 0) {\n        return family.BREAK;\n      }\n\n      result.childrenItems.push(combinedContextsTask.getConfig(itemid));\n    });\n    panelOffset = getElementOffset(data.layout.mousePanel);\n    offset = getElementOffset(data.layout.element);\n    itemPosition = alignDiagramTask.getItemPosition(newTreeItemId);\n    result.position = new Rect(itemPosition.actualPosition).translate(panelOffset.left, panelOffset.top).translate(-offset.left, -offset.top);\n  }\n\n  if (name != null) {\n    result.name = name;\n  }\n\n  return result;\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/FamEventArgsFactory.js"],"names":["FamEventArgs","getElementOffset","Rect","FamEventArgsFactory","data","oldTreeItemId","newTreeItemId","name","result","combinedContextsTask","tasks","getTask","alignDiagramTask","logicalFamilyTask","oldItemConfig","getConfig","newItemConfig","family","getLogicalFamily","itemPosition","offset","panelOffset","id","oldContext","context","loopParents","itemid","item","levelIndex","BREAK","parentItems","push","loopChildren","childrenItems","layout","mousePanel","element","getItemPosition","position","actualPosition","translate","left","top"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,aAAnC,EAAkDC,aAAlD,EAAiEC,IAAjE,EAAuE;AACpF,MAAIC,MAAM,GAAG,IAAIR,YAAJ,EAAb;AAAA,MACES,oBAAoB,GAAGL,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmB,sBAAnB,CADzB;AAAA,MAEEC,gBAAgB,GAAGR,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmB,kBAAnB,CAFrB;AAAA,MAGEE,iBAAiB,GAAGT,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmB,mBAAnB,CAHtB;AAAA,MAIEG,aAAa,GAAGL,oBAAoB,CAACM,SAArB,CAA+BV,aAA/B,CAJlB;AAAA,MAKEW,aAAa,GAAGP,oBAAoB,CAACM,SAArB,CAA+BT,aAA/B,CALlB;AAAA,MAMEW,MAAM,GAAGJ,iBAAiB,CAACK,gBAAlB,EANX;AAAA,MAOEC,YAPF;AAAA,MAQEC,MARF;AAAA,MASEC,WATF;;AAWA,MAAIP,aAAa,IAAIA,aAAa,CAACQ,EAAd,IAAoB,IAAzC,EAA+C;AAC7Cd,IAAAA,MAAM,CAACe,UAAP,GAAoBT,aAApB;AACD;;AAED,MAAIE,aAAa,IAAIA,aAAa,CAACM,EAAd,IAAoB,IAAzC,EAA+C;AAC7Cd,IAAAA,MAAM,CAACgB,OAAP,GAAiBR,aAAjB;AAEAC,IAAAA,MAAM,CAACQ,WAAP,CAAmB,IAAnB,EAAyBT,aAAa,CAACM,EAAvC,EAA2C,UAAUI,MAAV,EAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AAC7E,UAAIA,UAAU,GAAG,CAAjB,EAAoB;AAClB,eAAOX,MAAM,CAACY,KAAd;AACD;;AACDrB,MAAAA,MAAM,CAACsB,WAAP,CAAmBC,IAAnB,CAAwBtB,oBAAoB,CAACM,SAArB,CAA+BW,MAA/B,CAAxB;AACD,KALD;AAOAT,IAAAA,MAAM,CAACe,YAAP,CAAoB,IAApB,EAA0BhB,aAAa,CAACM,EAAxC,EAA4C,UAAUI,MAAV,EAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AAC9E,UAAIA,UAAU,GAAG,CAAjB,EAAoB;AAClB,eAAOX,MAAM,CAACY,KAAd;AACD;;AACDrB,MAAAA,MAAM,CAACyB,aAAP,CAAqBF,IAArB,CAA0BtB,oBAAoB,CAACM,SAArB,CAA+BW,MAA/B,CAA1B;AACD,KALD;AAOAL,IAAAA,WAAW,GAAGpB,gBAAgB,CAACG,IAAI,CAAC8B,MAAL,CAAYC,UAAb,CAA9B;AACAf,IAAAA,MAAM,GAAGnB,gBAAgB,CAACG,IAAI,CAAC8B,MAAL,CAAYE,OAAb,CAAzB;AACAjB,IAAAA,YAAY,GAAGP,gBAAgB,CAACyB,eAAjB,CAAiC/B,aAAjC,CAAf;AACAE,IAAAA,MAAM,CAAC8B,QAAP,GAAkB,IAAIpC,IAAJ,CAASiB,YAAY,CAACoB,cAAtB,EACfC,SADe,CACLnB,WAAW,CAACoB,IADP,EACapB,WAAW,CAACqB,GADzB,EAEfF,SAFe,CAEL,CAACpB,MAAM,CAACqB,IAFH,EAES,CAACrB,MAAM,CAACsB,GAFjB,CAAlB;AAGD;;AAED,MAAInC,IAAI,IAAI,IAAZ,EAAkB;AAChBC,IAAAA,MAAM,CAACD,IAAP,GAAcA,IAAd;AACD;;AAED,SAAOC,MAAP;AACD;AAAA","sourcesContent":["import FamEventArgs from './events/FamEventArgs';\nimport { getElementOffset } from './graphics/dom';\nimport Rect from './graphics/structs/Rect';\n\nexport default function FamEventArgsFactory(data, oldTreeItemId, newTreeItemId, name) {\n  var result = new FamEventArgs(),\n    combinedContextsTask = data.tasks.getTask(\"CombinedContextsTask\"),\n    alignDiagramTask = data.tasks.getTask(\"AlignDiagramTask\"),\n    logicalFamilyTask = data.tasks.getTask(\"LogicalFamilyTask\"),\n    oldItemConfig = combinedContextsTask.getConfig(oldTreeItemId),\n    newItemConfig = combinedContextsTask.getConfig(newTreeItemId),\n    family = logicalFamilyTask.getLogicalFamily(),\n    itemPosition,\n    offset,\n    panelOffset;\n\n  if (oldItemConfig && oldItemConfig.id != null) {\n    result.oldContext = oldItemConfig;\n  }\n\n  if (newItemConfig && newItemConfig.id != null) {\n    result.context = newItemConfig;\n\n    family.loopParents(this, newItemConfig.id, function (itemid, item, levelIndex) {\n      if (levelIndex > 0) {\n        return family.BREAK;\n      }\n      result.parentItems.push(combinedContextsTask.getConfig(itemid));\n    });\n\n    family.loopChildren(this, newItemConfig.id, function (itemid, item, levelIndex) {\n      if (levelIndex > 0) {\n        return family.BREAK;\n      }\n      result.childrenItems.push(combinedContextsTask.getConfig(itemid));\n    });\n\n    panelOffset = getElementOffset(data.layout.mousePanel);\n    offset = getElementOffset(data.layout.element);\n    itemPosition = alignDiagramTask.getItemPosition(newTreeItemId);\n    result.position = new Rect(itemPosition.actualPosition)\n      .translate(panelOffset.left, panelOffset.top)\n      .translate(-offset.left, -offset.top);\n  }\n\n  if (name != null) {\n    result.name = name;\n  }\n\n  return result;\n};"]},"metadata":{},"sourceType":"module"}