{"ast":null,"code":"export default function EnumerationReader(enumeration, isNullable, defaultValue) {\n  this.enumeration = enumeration;\n  this.isNullable = isNullable;\n  this.defaultValue = defaultValue;\n  this.hash = {};\n  /* collect valid enumeration values */\n\n  for (var key in enumeration) {\n    this.hash[enumeration[key]] = key;\n  }\n}\n;\n\nEnumerationReader.prototype.read = function (target, source, path, context) {\n  var result = null;\n\n  if (source === null || typeof source == \"undefined\" || !this.hash.hasOwnProperty(source)) {\n    source = this.isNullable ? null : this.defaultValue;\n  }\n\n  result = source;\n\n  if (target !== source) {\n    context.isChanged = true;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/readers/EnumerationReader.js"],"names":["EnumerationReader","enumeration","isNullable","defaultValue","hash","key","prototype","read","target","source","path","context","result","hasOwnProperty","isChanged"],"mappings":"AAAA,eAAe,SAASA,iBAAT,CAA2BC,WAA3B,EAAwCC,UAAxC,EAAoDC,YAApD,EAAkE;AAC/E,OAAKF,WAAL,GAAmBA,WAAnB;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,YAAL,GAAoBA,YAApB;AAEA,OAAKC,IAAL,GAAY,EAAZ;AAEA;;AACA,OAAK,IAAIC,GAAT,IAAgBJ,WAAhB,EAA6B;AAC3B,SAAKG,IAAL,CAAUH,WAAW,CAACI,GAAD,CAArB,IAA8BA,GAA9B;AACD;AACF;AAAA;;AAEDL,iBAAiB,CAACM,SAAlB,CAA4BC,IAA5B,GAAmC,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AAC1E,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIH,MAAM,KAAK,IAAX,IAAmB,OAAOA,MAAP,IAAiB,WAApC,IAAmD,CAAC,KAAKL,IAAL,CAAUS,cAAV,CAAyBJ,MAAzB,CAAxD,EAA0F;AACxFA,IAAAA,MAAM,GAAG,KAAKP,UAAL,GAAkB,IAAlB,GAAyB,KAAKC,YAAvC;AACD;;AAEDS,EAAAA,MAAM,GAAGH,MAAT;;AAEA,MAAID,MAAM,KAAKC,MAAf,EAAuB;AACrBE,IAAAA,OAAO,CAACG,SAAR,GAAoB,IAApB;AACD;;AAED,SAAOF,MAAP;AACD,CAdD","sourcesContent":["export default function EnumerationReader(enumeration, isNullable, defaultValue) {\n  this.enumeration = enumeration;\n  this.isNullable = isNullable;\n  this.defaultValue = defaultValue;\n\n  this.hash = {};\n\n  /* collect valid enumeration values */\n  for (var key in enumeration) {\n    this.hash[enumeration[key]] = key;\n  }\n};\n\nEnumerationReader.prototype.read = function (target, source, path, context) {\n  var result = null;\n\n  if (source === null || typeof source == \"undefined\" || !this.hash.hasOwnProperty(source)) {\n    source = this.isNullable ? null : this.defaultValue;\n  }\n\n  result = source;\n\n  if (target !== source) {\n    context.isChanged = true;\n  }\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}