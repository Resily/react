{"ast":null,"code":"/**\n * @class Matrix\n * @classdesc Square matrix having 2 rows and 2 columns.\n * \n * @param {Matrix} arg0 Matrix to clone\n * \n * @param {number} arg0 A1 - top left.\n * @param {number} arg1 B1 - top right.\n * @param {number} arg2 A2 - bottom left.\n * @param {number} arg3 B2 - bottom right.\n */\nexport default function Matrix(arg0, arg1, arg2, arg3) {\n  this.a1 = null;\n  this.b1 = null;\n  this.a2 = null;\n  this.b2 = null;\n\n  switch (arguments.length) {\n    case 1:\n      this.a1 = arg0.a1;\n      this.b1 = arg0.b1;\n      this.a2 = arg0.a2;\n      this.b2 = arg0.b2;\n      break;\n\n    case 4:\n      this.a1 = arg0;\n      this.b1 = arg1;\n      this.a2 = arg2;\n      this.b2 = arg3;\n      break;\n\n    default:\n      break;\n  }\n}\n;\n/**\n * Finds matrix determinant\n * \n * @returns {number} Returns matrix determinant\n */\n\nMatrix.prototype.determinant = function () {\n  return this.a1 * this.b2 - this.b1 * this.a2;\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/graphics/structs/Matrix.js"],"names":["Matrix","arg0","arg1","arg2","arg3","a1","b1","a2","b2","arguments","length","prototype","determinant"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AAErD,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,EAAL,GAAU,IAAV;;AAEA,UAAQC,SAAS,CAACC,MAAlB;AACE,SAAK,CAAL;AACE,WAAKL,EAAL,GAAUJ,IAAI,CAACI,EAAf;AACA,WAAKC,EAAL,GAAUL,IAAI,CAACK,EAAf;AACA,WAAKC,EAAL,GAAUN,IAAI,CAACM,EAAf;AACA,WAAKC,EAAL,GAAUP,IAAI,CAACO,EAAf;AACA;;AACF,SAAK,CAAL;AACE,WAAKH,EAAL,GAAUJ,IAAV;AACA,WAAKK,EAAL,GAAUJ,IAAV;AACA,WAAKK,EAAL,GAAUJ,IAAV;AACA,WAAKK,EAAL,GAAUJ,IAAV;AACA;;AACF;AACE;AAdJ;AAgBD;AAAA;AAED;AACA;AACA;AACA;AACA;;AACAJ,MAAM,CAACW,SAAP,CAAiBC,WAAjB,GAA+B,YAAY;AACzC,SAAO,KAAKP,EAAL,GAAU,KAAKG,EAAf,GAAoB,KAAKF,EAAL,GAAU,KAAKC,EAA1C;AACD,CAFD","sourcesContent":["/**\n * @class Matrix\n * @classdesc Square matrix having 2 rows and 2 columns.\n * \n * @param {Matrix} arg0 Matrix to clone\n * \n * @param {number} arg0 A1 - top left.\n * @param {number} arg1 B1 - top right.\n * @param {number} arg2 A2 - bottom left.\n * @param {number} arg3 B2 - bottom right.\n */\nexport default function Matrix(arg0, arg1, arg2, arg3) {\n\n  this.a1 = null;\n  this.b1 = null;\n  this.a2 = null;\n  this.b2 = null;\n\n  switch (arguments.length) {\n    case 1:\n      this.a1 = arg0.a1;\n      this.b1 = arg0.b1;\n      this.a2 = arg0.a2;\n      this.b2 = arg0.b2;\n      break;\n    case 4:\n      this.a1 = arg0;\n      this.b1 = arg1;\n      this.a2 = arg2;\n      this.b2 = arg3;\n      break;\n    default:\n      break;\n  }\n};\n\n/**\n * Finds matrix determinant\n * \n * @returns {number} Returns matrix determinant\n */\nMatrix.prototype.determinant = function () {\n  return this.a1 * this.b2 - this.b1 * this.a2;\n};"]},"metadata":{},"sourceType":"module"}