{"ast":null,"code":"import ValueReader from '../../readers/ValueReader';\nimport ObjectReader from '../../readers/ObjectReader';\nimport ArrayReader from '../../readers/ArrayReader';\nexport default function ItemsContentOptionTask(optionsTask, defaultItemConfig) {\n  var _data = {},\n      _hash = {},\n      _sourceHash = {};\n\n  var _dataTemplate = new ObjectReader({\n    items: new ArrayReader(new ObjectReader({\n      id: new ValueReader([\"string\", \"number\"], true),\n      title: new ValueReader([\"string\"], true),\n      description: new ValueReader([\"string\"], true),\n      image: new ValueReader([\"string\"], true),\n      context: new ValueReader([\"string\", \"number\", \"object\"], true),\n      itemTitleColor: new ValueReader([\"string\"], false, defaultItemConfig.itemTitleColor),\n      groupTitle: new ValueReader([\"string\"], false, defaultItemConfig.groupTitle),\n      groupTitleColor: new ValueReader([\"string\"], false, defaultItemConfig.groupTitleColor)\n    }), true, \"id\", true, true)\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash,\n      sourceHash: _sourceHash\n    };\n    _data = _dataTemplate.read(_data, optionsTask.getOptions(), \"options\", context);\n    return context.isChanged;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  function getConfig(itemId) {\n    return _sourceHash[\"options-items\"][itemId];\n  }\n\n  return {\n    process: process,\n    getItems: getItems,\n    getConfig: getConfig,\n    description: \"Checks items configuration options effecting their placement in layout.\"\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/options/ItemsContentOptionTask.js"],"names":["ValueReader","ObjectReader","ArrayReader","ItemsContentOptionTask","optionsTask","defaultItemConfig","_data","_hash","_sourceHash","_dataTemplate","items","id","title","description","image","context","itemTitleColor","groupTitle","groupTitleColor","process","isChanged","hash","sourceHash","read","getOptions","getItems","getConfig","itemId"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,WAAhC,EAA6CC,iBAA7C,EAAgE;AAC7E,MAAIC,KAAK,GAAG,EAAZ;AAAA,MACEC,KAAK,GAAG,EADV;AAAA,MAEEC,WAAW,GAAG,EAFhB;;AAIA,MAAIC,aAAa,GAAG,IAAIR,YAAJ,CAAiB;AACnCS,IAAAA,KAAK,EAAE,IAAIR,WAAJ,CACL,IAAID,YAAJ,CAAiB;AACfU,MAAAA,EAAE,EAAE,IAAIX,WAAJ,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB,EAAsC,IAAtC,CADW;AAEfY,MAAAA,KAAK,EAAE,IAAIZ,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,IAA5B,CAFQ;AAGfa,MAAAA,WAAW,EAAE,IAAIb,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,IAA5B,CAHE;AAIfc,MAAAA,KAAK,EAAE,IAAId,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,IAA5B,CAJQ;AAKfe,MAAAA,OAAO,EAAE,IAAIf,WAAJ,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAhB,EAAgD,IAAhD,CALM;AAMfgB,MAAAA,cAAc,EAAE,IAAIhB,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,KAA5B,EAAmCK,iBAAiB,CAACW,cAArD,CAND;AAOfC,MAAAA,UAAU,EAAE,IAAIjB,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,KAA5B,EAAmCK,iBAAiB,CAACY,UAArD,CAPG;AAQfC,MAAAA,eAAe,EAAE,IAAIlB,WAAJ,CAAgB,CAAC,QAAD,CAAhB,EAA4B,KAA5B,EAAmCK,iBAAiB,CAACa,eAArD;AARF,KAAjB,CADK,EAWL,IAXK,EAYL,IAZK,EAaL,IAbK,EAcL,IAdK;AAD4B,GAAjB,CAApB;;AAmBA,WAASC,OAAT,GAAmB;AACjB,QAAIJ,OAAO,GAAG;AACZK,MAAAA,SAAS,EAAE,KADC;AAEZC,MAAAA,IAAI,EAAEd,KAFM;AAGZe,MAAAA,UAAU,EAAEd;AAHA,KAAd;AAMAF,IAAAA,KAAK,GAAGG,aAAa,CAACc,IAAd,CAAmBjB,KAAnB,EAA0BF,WAAW,CAACoB,UAAZ,EAA1B,EAAoD,SAApD,EAA+DT,OAA/D,CAAR;AAEA,WAAOA,OAAO,CAACK,SAAf;AACD;;AAED,WAASK,QAAT,GAAoB;AAClB,WAAOnB,KAAK,CAACI,KAAb;AACD;;AAED,WAASgB,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,WAAOnB,WAAW,CAAC,eAAD,CAAX,CAA6BmB,MAA7B,CAAP;AACD;;AAED,SAAO;AACLR,IAAAA,OAAO,EAAEA,OADJ;AAELM,IAAAA,QAAQ,EAAEA,QAFL;AAGLC,IAAAA,SAAS,EAAEA,SAHN;AAILb,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA","sourcesContent":["import ValueReader from '../../readers/ValueReader';\nimport ObjectReader from '../../readers/ObjectReader';\nimport ArrayReader from '../../readers/ArrayReader';\n\nexport default function ItemsContentOptionTask(optionsTask, defaultItemConfig) {\n  var _data = {},\n    _hash = {},\n    _sourceHash = {};\n\n  var _dataTemplate = new ObjectReader({\n    items: new ArrayReader(\n      new ObjectReader({\n        id: new ValueReader([\"string\", \"number\"], true),\n        title: new ValueReader([\"string\"], true),\n        description: new ValueReader([\"string\"], true),\n        image: new ValueReader([\"string\"], true),\n        context: new ValueReader([\"string\", \"number\", \"object\"], true),\n        itemTitleColor: new ValueReader([\"string\"], false, defaultItemConfig.itemTitleColor),\n        groupTitle: new ValueReader([\"string\"], false, defaultItemConfig.groupTitle),\n        groupTitleColor: new ValueReader([\"string\"], false, defaultItemConfig.groupTitleColor)\n      }),\n      true,\n      \"id\",\n      true,\n      true\n    )\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash,\n      sourceHash: _sourceHash\n    };\n\n    _data = _dataTemplate.read(_data, optionsTask.getOptions(), \"options\", context);\n\n    return context.isChanged;\n  }\n\n  function getItems() {\n    return _data.items;\n  }\n\n  function getConfig(itemId) {\n    return _sourceHash[\"options-items\"][itemId];\n  }\n\n  return {\n    process: process,\n    getItems: getItems,\n    getConfig: getConfig,\n    description: \"Checks items configuration options effecting their placement in layout.\"\n  };\n};"]},"metadata":{},"sourceType":"module"}