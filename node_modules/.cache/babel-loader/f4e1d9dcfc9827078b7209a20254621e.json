{"ast":null,"code":"import Graphics from './Graphics';\nimport Element from './Element';\nimport { GraphicsType, LineType, SegmentType } from '../enums';\nimport JsonML from '../common/jsonml-html';\nexport default function SvgGraphics(element) {\n  this.parent = Graphics.prototype;\n  this.parent.constructor.apply(this, arguments);\n  this._svgxmlns = \"http://www.w3.org/2000/svg\";\n  this.graphicsType = GraphicsType.SVG;\n  this.hasGraphics = true;\n}\n;\nSvgGraphics.prototype = new Graphics();\n\nSvgGraphics.prototype.clean = function () {\n  var key, placeholder, layerKey, layer;\n\n  for (key in this.m_placeholders) {\n    if (this.m_placeholders.hasOwnProperty(key)) {\n      placeholder = this.m_placeholders[key];\n\n      for (layerKey in placeholder.layers) {\n        if (placeholder.layers.hasOwnProperty(layerKey)) {\n          layer = placeholder.layers[layerKey];\n\n          if (layer.svgcanvas !== null) {\n            layer.svgcanvas.parentNode.removeChild(layer.svgcanvas);\n            layer.svgcanvas = null;\n          }\n        }\n      }\n    }\n  }\n\n  this.parent.clean.apply(this, arguments);\n};\n\nSvgGraphics.prototype.resizePlaceholder = function (placeholder, left, top, width, height) {\n  var layerKey, layer;\n  this.parent.resizePlaceholder.apply(this, arguments);\n\n  for (layerKey in placeholder.layers) {\n    if (placeholder.layers.hasOwnProperty(layerKey)) {\n      layer = placeholder.layers[layerKey];\n\n      if (layer.svgcanvas !== null) {\n        JsonML.applyStyles(layer.svgcanvas, {\n          \"position\": \"absolute\",\n          \"width\": width + \"px\",\n          \"height\": height + \"px\"\n        });\n        layer.svgcanvas.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\n      }\n    }\n  }\n};\n\nSvgGraphics.prototype._getCanvas = function () {\n  var placeholder = this.m_activePlaceholder,\n      layer = placeholder.activeLayer,\n      panelSize = placeholder.rect;\n\n  if (layer.svgcanvas === null) {\n    layer.svgcanvas = document.createElementNS(this._svgxmlns, \"svg\");\n    layer.svgcanvas.setAttribute(\"viewBox\", panelSize.x + \" \" + panelSize.y + \" \" + panelSize.width + \" \" + panelSize.height);\n    JsonML.applyStyles(layer.svgcanvas, {\n      \"width\": panelSize.width + \"px\",\n      \"height\": panelSize.height + \"px\"\n    });\n    this.prepend(placeholder.activeLayer.canvas, layer.svgcanvas);\n  }\n\n  return layer.svgcanvas;\n};\n\nSvgGraphics.prototype.polyline = function (polylineData) {\n  var placeholder = this.m_activePlaceholder,\n      polyline,\n      data,\n      attr = polylineData.paletteItem.toAttr(),\n      element,\n      svgcanvas,\n      step,\n      radius,\n      cornerRadius;\n  polyline = new Element(this._svgxmlns, \"path\");\n\n  if (attr.fillColor !== undefined) {\n    polyline.setAttribute(\"fill\", attr.fillColor);\n    polyline.setAttribute(\"fill-opacity\", attr.opacity);\n  } else {\n    polyline.setAttribute(\"fill-opacity\", 0);\n  }\n\n  if (attr.lineWidth !== undefined && attr.borderColor !== undefined) {\n    polyline.setAttribute(\"stroke\", attr.borderColor);\n    polyline.setAttribute(\"stroke-width\", attr.lineWidth);\n\n    if (attr.opacity !== undefined) {\n      polyline.setAttribute(\"stroke-opacity\", attr.opacity);\n    } else {\n      polyline.setAttribute(\"stroke-opacity\", 1);\n    }\n  } else {\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"stroke-width\", 0);\n  }\n\n  if (attr.lineType != null) {\n    step = Math.round(attr.lineWidth) || 1;\n\n    switch (attr.lineType) {\n      case LineType.Solid:\n        polyline.setAttribute(\"stroke-dasharray\", \"\");\n        break;\n\n      case LineType.Dotted:\n        polyline.setAttribute(\"stroke-dasharray\", step + \",\" + step);\n        break;\n\n      case LineType.Dashed:\n        polyline.setAttribute(\"stroke-dasharray\", step * 5 + \",\" + step * 3);\n        break;\n    }\n  }\n\n  data = \"\";\n  polylineData.loop(this, function (segment) {\n    switch (segment.segmentType) {\n      case SegmentType.Move:\n        data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n\n      case SegmentType.Line:\n        data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n\n      case SegmentType.QuadraticArc:\n        data += \"Q\" + (Math.round(segment.cpX) + 0.5) + \" \" + (Math.round(segment.cpY) + 0.5) + \" \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n\n      case SegmentType.Dot:\n        // A rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y\n        if (segment.width == segment.height && segment.width / 2.0 <= segment.cornerRadius) {\n          // dot\n          radius = segment.width / 2.0;\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n          data += \"A\" + radius + \" \" + radius + \" 0 0 0 \" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n          data += \"A\" + radius + \" \" + radius + \" 0 0 0 \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n        } else if (segment.cornerRadius === 0) {\n          // square\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        } else {\n          cornerRadius = Math.min(segment.cornerRadius, Math.min(segment.width / 2.0, segment.height / 2.0));\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + cornerRadius) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width - cornerRadius) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + segment.height - cornerRadius) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + segment.width - cornerRadius) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x + cornerRadius) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + segment.height - cornerRadius) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n        }\n\n        break;\n\n      case SegmentType.CubicArc:\n        data += \"C\" + (Math.round(segment.cpX1) + 0.5) + \" \" + (Math.round(segment.cpY1) + 0.5) + \" \" + (Math.round(segment.cpX2) + 0.5) + \" \" + (Math.round(segment.cpY2) + 0.5) + \" \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n    }\n  });\n  polyline.setAttribute(\"d\", data);\n  element = this.m_cache.get(placeholder.name, placeholder.activeLayer.name, \"path\");\n\n  if (element === null) {\n    element = polyline.create();\n    svgcanvas = this._getCanvas();\n    svgcanvas.appendChild(element);\n    this.m_cache.put(placeholder.name, placeholder.activeLayer.name, \"path\", element);\n  } else {\n    polyline.update(element);\n  }\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/graphics/SvgGraphics.js"],"names":["Graphics","Element","GraphicsType","LineType","SegmentType","JsonML","SvgGraphics","element","parent","prototype","constructor","apply","arguments","_svgxmlns","graphicsType","SVG","hasGraphics","clean","key","placeholder","layerKey","layer","m_placeholders","hasOwnProperty","layers","svgcanvas","parentNode","removeChild","resizePlaceholder","left","top","width","height","applyStyles","setAttribute","_getCanvas","m_activePlaceholder","activeLayer","panelSize","rect","document","createElementNS","x","y","prepend","canvas","polyline","polylineData","data","attr","paletteItem","toAttr","step","radius","cornerRadius","fillColor","undefined","opacity","lineWidth","borderColor","lineType","Math","round","Solid","Dotted","Dashed","loop","segment","segmentType","Move","Line","QuadraticArc","cpX","cpY","Dot","min","CubicArc","cpX1","cpY1","cpX2","cpY2","m_cache","get","name","create","appendChild","put","update"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,WAAjC,QAAoD,UAApD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC3C,OAAKC,MAAL,GAAcR,QAAQ,CAACS,SAAvB;AAEA,OAAKD,MAAL,CAAYE,WAAZ,CAAwBC,KAAxB,CAA8B,IAA9B,EAAoCC,SAApC;AAEA,OAAKC,SAAL,GAAiB,4BAAjB;AAEA,OAAKC,YAAL,GAAoBZ,YAAY,CAACa,GAAjC;AAEA,OAAKC,WAAL,GAAmB,IAAnB;AACD;AAAA;AAEDV,WAAW,CAACG,SAAZ,GAAwB,IAAIT,QAAJ,EAAxB;;AAEAM,WAAW,CAACG,SAAZ,CAAsBQ,KAAtB,GAA8B,YAAY;AACxC,MAAIC,GAAJ,EACEC,WADF,EAEEC,QAFF,EAGEC,KAHF;;AAIA,OAAKH,GAAL,IAAY,KAAKI,cAAjB,EAAiC;AAC/B,QAAI,KAAKA,cAAL,CAAoBC,cAApB,CAAmCL,GAAnC,CAAJ,EAA6C;AAC3CC,MAAAA,WAAW,GAAG,KAAKG,cAAL,CAAoBJ,GAApB,CAAd;;AACA,WAAKE,QAAL,IAAiBD,WAAW,CAACK,MAA7B,EAAqC;AACnC,YAAIL,WAAW,CAACK,MAAZ,CAAmBD,cAAnB,CAAkCH,QAAlC,CAAJ,EAAiD;AAC/CC,UAAAA,KAAK,GAAGF,WAAW,CAACK,MAAZ,CAAmBJ,QAAnB,CAAR;;AACA,cAAIC,KAAK,CAACI,SAAN,KAAoB,IAAxB,EAA8B;AAC5BJ,YAAAA,KAAK,CAACI,SAAN,CAAgBC,UAAhB,CAA2BC,WAA3B,CAAuCN,KAAK,CAACI,SAA7C;AACAJ,YAAAA,KAAK,CAACI,SAAN,GAAkB,IAAlB;AACD;AACF;AACF;AACF;AACF;;AACD,OAAKjB,MAAL,CAAYS,KAAZ,CAAkBN,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B;AACD,CApBD;;AAsBAN,WAAW,CAACG,SAAZ,CAAsBmB,iBAAtB,GAA0C,UAAUT,WAAV,EAAuBU,IAAvB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiD;AACzF,MAAIZ,QAAJ,EACEC,KADF;AAGA,OAAKb,MAAL,CAAYoB,iBAAZ,CAA8BjB,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C;;AAEA,OAAKQ,QAAL,IAAiBD,WAAW,CAACK,MAA7B,EAAqC;AACnC,QAAIL,WAAW,CAACK,MAAZ,CAAmBD,cAAnB,CAAkCH,QAAlC,CAAJ,EAAiD;AAC/CC,MAAAA,KAAK,GAAGF,WAAW,CAACK,MAAZ,CAAmBJ,QAAnB,CAAR;;AACA,UAAIC,KAAK,CAACI,SAAN,KAAoB,IAAxB,EAA8B;AAC5BpB,QAAAA,MAAM,CAAC4B,WAAP,CAAmBZ,KAAK,CAACI,SAAzB,EAAoC;AAClC,sBAAY,UADsB;AAElC,mBAASM,KAAK,GAAG,IAFiB;AAGlC,oBAAUC,MAAM,GAAG;AAHe,SAApC;AAKAX,QAAAA,KAAK,CAACI,SAAN,CAAgBS,YAAhB,CAA6B,SAA7B,EAAwC,SAASH,KAAT,GAAiB,GAAjB,GAAuBC,MAA/D;AACD;AACF;AACF;AACF,CAnBD;;AAqBA1B,WAAW,CAACG,SAAZ,CAAsB0B,UAAtB,GAAmC,YAAY;AAC7C,MAAIhB,WAAW,GAAG,KAAKiB,mBAAvB;AAAA,MACEf,KAAK,GAAGF,WAAW,CAACkB,WADtB;AAAA,MAEEC,SAAS,GAAGnB,WAAW,CAACoB,IAF1B;;AAGA,MAAIlB,KAAK,CAACI,SAAN,KAAoB,IAAxB,EAA8B;AAC5BJ,IAAAA,KAAK,CAACI,SAAN,GAAkBe,QAAQ,CAACC,eAAT,CAAyB,KAAK5B,SAA9B,EAAyC,KAAzC,CAAlB;AACAQ,IAAAA,KAAK,CAACI,SAAN,CAAgBS,YAAhB,CAA6B,SAA7B,EAAwCI,SAAS,CAACI,CAAV,GAAc,GAAd,GAAoBJ,SAAS,CAACK,CAA9B,GAAkC,GAAlC,GAAwCL,SAAS,CAACP,KAAlD,GAA0D,GAA1D,GAAgEO,SAAS,CAACN,MAAlH;AACA3B,IAAAA,MAAM,CAAC4B,WAAP,CAAmBZ,KAAK,CAACI,SAAzB,EAAoC;AAClC,eAASa,SAAS,CAACP,KAAV,GAAkB,IADO;AAElC,gBAAUO,SAAS,CAACN,MAAV,GAAmB;AAFK,KAApC;AAKA,SAAKY,OAAL,CAAazB,WAAW,CAACkB,WAAZ,CAAwBQ,MAArC,EAA6CxB,KAAK,CAACI,SAAnD;AACD;;AAED,SAAOJ,KAAK,CAACI,SAAb;AACD,CAhBD;;AAkBAnB,WAAW,CAACG,SAAZ,CAAsBqC,QAAtB,GAAiC,UAAUC,YAAV,EAAwB;AACvD,MAAI5B,WAAW,GAAG,KAAKiB,mBAAvB;AAAA,MACEU,QADF;AAAA,MAEEE,IAFF;AAAA,MAGEC,IAAI,GAAGF,YAAY,CAACG,WAAb,CAAyBC,MAAzB,EAHT;AAAA,MAIE5C,OAJF;AAAA,MAKEkB,SALF;AAAA,MAME2B,IANF;AAAA,MAOEC,MAPF;AAAA,MAQEC,YARF;AAWAR,EAAAA,QAAQ,GAAG,IAAI7C,OAAJ,CAAY,KAAKY,SAAjB,EAA4B,MAA5B,CAAX;;AACA,MAAIoC,IAAI,CAACM,SAAL,KAAmBC,SAAvB,EAAkC;AAChCV,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,MAAtB,EAA8Be,IAAI,CAACM,SAAnC;AACAT,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,cAAtB,EAAsCe,IAAI,CAACQ,OAA3C;AACD,GAHD,MAIK;AACHX,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,cAAtB,EAAsC,CAAtC;AACD;;AAED,MAAIe,IAAI,CAACS,SAAL,KAAmBF,SAAnB,IAAgCP,IAAI,CAACU,WAAL,KAAqBH,SAAzD,EAAoE;AAClEV,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,QAAtB,EAAgCe,IAAI,CAACU,WAArC;AACAb,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,cAAtB,EAAsCe,IAAI,CAACS,SAA3C;;AAEA,QAAIT,IAAI,CAACQ,OAAL,KAAiBD,SAArB,EAAgC;AAC9BV,MAAAA,QAAQ,CAACZ,YAAT,CAAsB,gBAAtB,EAAwCe,IAAI,CAACQ,OAA7C;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAACZ,YAAT,CAAsB,gBAAtB,EAAwC,CAAxC;AACD;AACF,GATD,MASO;AACLY,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,QAAtB,EAAgC,aAAhC;AACAY,IAAAA,QAAQ,CAACZ,YAAT,CAAsB,cAAtB,EAAsC,CAAtC;AACD;;AAED,MAAIe,IAAI,CAACW,QAAL,IAAiB,IAArB,EAA2B;AACzBR,IAAAA,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACS,SAAhB,KAA8B,CAArC;;AACA,YAAQT,IAAI,CAACW,QAAb;AACE,WAAKzD,QAAQ,CAAC4D,KAAd;AACEjB,QAAAA,QAAQ,CAACZ,YAAT,CAAsB,kBAAtB,EAA0C,EAA1C;AACA;;AACF,WAAK/B,QAAQ,CAAC6D,MAAd;AACElB,QAAAA,QAAQ,CAACZ,YAAT,CAAsB,kBAAtB,EAA0CkB,IAAI,GAAG,GAAP,GAAaA,IAAvD;AACA;;AACF,WAAKjD,QAAQ,CAAC8D,MAAd;AACEnB,QAAAA,QAAQ,CAACZ,YAAT,CAAsB,kBAAtB,EAA2CkB,IAAI,GAAG,CAAR,GAAa,GAAb,GAAoBA,IAAI,GAAG,CAArE;AACA;AATJ;AAWD;;AAEDJ,EAAAA,IAAI,GAAG,EAAP;AACAD,EAAAA,YAAY,CAACmB,IAAb,CAAkB,IAAlB,EAAwB,UAAUC,OAAV,EAAmB;AACzC,YAAQA,OAAO,CAACC,WAAhB;AACE,WAAKhE,WAAW,CAACiE,IAAjB;AACErB,QAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArE,CAAR;AACA;;AACF,WAAKvC,WAAW,CAACkE,IAAjB;AACEtB,QAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArE,CAAR;AACA;;AACF,WAAKvC,WAAW,CAACmE,YAAjB;AACEvB,QAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACK,GAAnB,IAA0B,GAAjC,IAAwC,GAAxC,IAA+CX,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACM,GAAnB,IAA0B,GAAzE,IAAgF,GAAhF,IAAuFZ,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/G,IAAsH,GAAtH,IAA6HmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArJ,CAAR;AACA;;AACF,WAAKvC,WAAW,CAACsE,GAAjB;AACE;AACA,YAAIP,OAAO,CAACpC,KAAR,IAAiBoC,OAAO,CAACnC,MAAzB,IAAmCmC,OAAO,CAACpC,KAAR,GAAgB,GAAhB,IAAuBoC,OAAO,CAACb,YAAtE,EAAoF;AAClF;AACAD,UAAAA,MAAM,GAAGc,OAAO,CAACpC,KAAR,GAAgB,GAAzB;AACAiB,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwBwB,OAAO,CAACnC,MAAR,GAAiB,GAAzC,GAA+C,GAA5F,CAAR;AACAgB,UAAAA,IAAI,IAAI,MAAMK,MAAN,GAAe,GAAf,GAAqBA,MAArB,GAA8B,SAA9B,IAA2CQ,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAA/B,IAAwC,GAAnF,IAA0F,GAA1F,IAAiG8B,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwBwB,OAAO,CAACnC,MAAR,GAAiB,GAAzC,GAA+C,GAAhJ,CAAR;AACAgB,UAAAA,IAAI,IAAI,MAAMK,MAAN,GAAe,GAAf,GAAqBA,MAArB,GAA8B,SAA9B,IAA2CQ,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAAnE,IAA0E,GAA1E,IAAiFmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwBwB,OAAO,CAACnC,MAAR,GAAiB,GAAzC,GAA+C,GAAhI,CAAR;AACD,SAND,MAMO,IAAImC,OAAO,CAACb,YAAR,KAAyB,CAA7B,EAAgC;AACrC;AACAN,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArE,CAAR;AACAK,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAA/B,IAAwC,GAA/C,IAAsD,GAAtD,IAA6D8B,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArF,CAAR;AACAK,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAA/B,IAAwC,GAA/C,IAAsD,GAAtD,IAA6D8B,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAA/B,IAAyC,GAAtG,CAAR;AACAgB,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAA/B,IAAyC,GAAtF,CAAR;AACAgB,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAArE,CAAR;AACD,SAPM,MAOA;AACLW,UAAAA,YAAY,GAAGO,IAAI,CAACc,GAAL,CAASR,OAAO,CAACb,YAAjB,EAA+BO,IAAI,CAACc,GAAL,CAASR,OAAO,CAACpC,KAAR,GAAgB,GAAzB,EAA8BoC,OAAO,CAACnC,MAAR,GAAiB,GAA/C,CAA/B,CAAf;AACAgB,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYW,YAAvB,IAAuC,GAApF,CAAR;AACAN,UAAAA,IAAI,IAAI,MAAMa,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAN,GAAiC,GAAjC,GAAuCO,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAvC,GAAkE,SAAlE,IAA+EO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYY,YAAvB,IAAuC,GAAtH,IAA6H,GAA7H,IAAoIO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAA5J,CAAR;AACAK,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAApB,GAA4BuB,YAAvC,IAAuD,GAA9D,IAAqE,GAArE,IAA4EO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAApG,CAAR;AACAK,UAAAA,IAAI,IAAI,MAAMa,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAN,GAAiC,GAAjC,GAAuCO,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAvC,GAAkE,SAAlE,IAA+EO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAA/B,IAAwC,GAAvH,IAA8H,GAA9H,IAAqI8B,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYW,YAAvB,IAAuC,GAA5K,CAAR;AACAN,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAA/B,IAAwC,GAA/C,IAAsD,GAAtD,IAA6D8B,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAApB,GAA6BsB,YAAxC,IAAwD,GAArH,CAAR;AACAN,UAAAA,IAAI,IAAI,MAAMa,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAN,GAAiC,GAAjC,GAAuCO,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAvC,GAAkE,SAAlE,IAA+EO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYyB,OAAO,CAACpC,KAApB,GAA4BuB,YAAvC,IAAuD,GAAtI,IAA6I,GAA7I,IAAoJO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAA/B,IAAyC,GAA7L,CAAR;AACAgB,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAR,GAAYY,YAAvB,IAAuC,GAA9C,IAAqD,GAArD,IAA4DO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAA/B,IAAyC,GAArG,CAAR;AACAgB,UAAAA,IAAI,IAAI,MAAMa,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAN,GAAiC,GAAjC,GAAuCO,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAvC,GAAkE,SAAlE,IAA+EO,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAAvG,IAA8G,GAA9G,IAAqHmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYwB,OAAO,CAACnC,MAApB,GAA6BsB,YAAxC,IAAwD,GAA7K,CAAR;AACAN,UAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAA/B,IAAsC,GAAtC,IAA6CmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAR,GAAYW,YAAvB,IAAuC,GAApF,CAAR;AACD;;AACD;;AACF,WAAKlD,WAAW,CAACwE,QAAjB;AACE5B,QAAAA,IAAI,IAAI,OAAOa,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACU,IAAnB,IAA2B,GAAlC,IAAyC,GAAzC,IAAgDhB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACW,IAAnB,IAA2B,GAA3E,IACN,GADM,IACCjB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACY,IAAnB,IAA2B,GAD5B,IACmC,GADnC,IAC0ClB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACa,IAAnB,IAA2B,GADrE,IAEN,GAFM,IAECnB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACzB,CAAnB,IAAwB,GAFzB,IAEgC,GAFhC,IAEuCmB,IAAI,CAACC,KAAL,CAAWK,OAAO,CAACxB,CAAnB,IAAwB,GAF/D,CAAR;AAGA;AA1CJ;AA4CD,GA7CD;AA+CAG,EAAAA,QAAQ,CAACZ,YAAT,CAAsB,GAAtB,EAA2Bc,IAA3B;AACAzC,EAAAA,OAAO,GAAG,KAAK0E,OAAL,CAAaC,GAAb,CAAiB/D,WAAW,CAACgE,IAA7B,EAAmChE,WAAW,CAACkB,WAAZ,CAAwB8C,IAA3D,EAAiE,MAAjE,CAAV;;AACA,MAAI5E,OAAO,KAAK,IAAhB,EAAsB;AACpBA,IAAAA,OAAO,GAAGuC,QAAQ,CAACsC,MAAT,EAAV;AACA3D,IAAAA,SAAS,GAAG,KAAKU,UAAL,EAAZ;AACAV,IAAAA,SAAS,CAAC4D,WAAV,CAAsB9E,OAAtB;AACA,SAAK0E,OAAL,CAAaK,GAAb,CAAiBnE,WAAW,CAACgE,IAA7B,EAAmChE,WAAW,CAACkB,WAAZ,CAAwB8C,IAA3D,EAAiE,MAAjE,EAAyE5E,OAAzE;AACD,GALD,MAMK;AACHuC,IAAAA,QAAQ,CAACyC,MAAT,CAAgBhF,OAAhB;AACD;AACF,CA7GD","sourcesContent":["import Graphics from './Graphics';\nimport Element from './Element';\nimport { GraphicsType, LineType, SegmentType } from '../enums';\nimport JsonML from '../common/jsonml-html';\n\nexport default function SvgGraphics(element) {\n  this.parent = Graphics.prototype;\n\n  this.parent.constructor.apply(this, arguments);\n\n  this._svgxmlns = \"http://www.w3.org/2000/svg\";\n\n  this.graphicsType = GraphicsType.SVG;\n\n  this.hasGraphics = true;\n};\n\nSvgGraphics.prototype = new Graphics();\n\nSvgGraphics.prototype.clean = function () {\n  var key,\n    placeholder,\n    layerKey,\n    layer;\n  for (key in this.m_placeholders) {\n    if (this.m_placeholders.hasOwnProperty(key)) {\n      placeholder = this.m_placeholders[key];\n      for (layerKey in placeholder.layers) {\n        if (placeholder.layers.hasOwnProperty(layerKey)) {\n          layer = placeholder.layers[layerKey];\n          if (layer.svgcanvas !== null) {\n            layer.svgcanvas.parentNode.removeChild(layer.svgcanvas);\n            layer.svgcanvas = null;\n          }\n        }\n      }\n    }\n  }\n  this.parent.clean.apply(this, arguments);\n};\n\nSvgGraphics.prototype.resizePlaceholder = function (placeholder, left, top, width, height) {\n  var layerKey,\n    layer;\n\n  this.parent.resizePlaceholder.apply(this, arguments);\n\n  for (layerKey in placeholder.layers) {\n    if (placeholder.layers.hasOwnProperty(layerKey)) {\n      layer = placeholder.layers[layerKey];\n      if (layer.svgcanvas !== null) {\n        JsonML.applyStyles(layer.svgcanvas, {\n          \"position\": \"absolute\",\n          \"width\": width + \"px\",\n          \"height\": height + \"px\"\n        });\n        layer.svgcanvas.setAttribute('viewBox', \"0 0 \" + width + \" \" + height);\n      }\n    }\n  }\n};\n\nSvgGraphics.prototype._getCanvas = function () {\n  var placeholder = this.m_activePlaceholder,\n    layer = placeholder.activeLayer,\n    panelSize = placeholder.rect;\n  if (layer.svgcanvas === null) {\n    layer.svgcanvas = document.createElementNS(this._svgxmlns, \"svg\");\n    layer.svgcanvas.setAttribute(\"viewBox\", panelSize.x + \" \" + panelSize.y + \" \" + panelSize.width + \" \" + panelSize.height);\n    JsonML.applyStyles(layer.svgcanvas, {\n      \"width\": panelSize.width + \"px\",\n      \"height\": panelSize.height + \"px\"\n    });\n\n    this.prepend(placeholder.activeLayer.canvas, layer.svgcanvas);\n  }\n\n  return layer.svgcanvas;\n};\n\nSvgGraphics.prototype.polyline = function (polylineData) {\n  var placeholder = this.m_activePlaceholder,\n    polyline,\n    data,\n    attr = polylineData.paletteItem.toAttr(),\n    element,\n    svgcanvas,\n    step,\n    radius,\n    cornerRadius;\n\n\n  polyline = new Element(this._svgxmlns, \"path\");\n  if (attr.fillColor !== undefined) {\n    polyline.setAttribute(\"fill\", attr.fillColor);\n    polyline.setAttribute(\"fill-opacity\", attr.opacity);\n  }\n  else {\n    polyline.setAttribute(\"fill-opacity\", 0);\n  }\n\n  if (attr.lineWidth !== undefined && attr.borderColor !== undefined) {\n    polyline.setAttribute(\"stroke\", attr.borderColor);\n    polyline.setAttribute(\"stroke-width\", attr.lineWidth);\n\n    if (attr.opacity !== undefined) {\n      polyline.setAttribute(\"stroke-opacity\", attr.opacity);\n    } else {\n      polyline.setAttribute(\"stroke-opacity\", 1);\n    }\n  } else {\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"stroke-width\", 0);\n  }\n\n  if (attr.lineType != null) {\n    step = Math.round(attr.lineWidth) || 1;\n    switch (attr.lineType) {\n      case LineType.Solid:\n        polyline.setAttribute(\"stroke-dasharray\", \"\");\n        break;\n      case LineType.Dotted:\n        polyline.setAttribute(\"stroke-dasharray\", step + \",\" + step);\n        break;\n      case LineType.Dashed:\n        polyline.setAttribute(\"stroke-dasharray\", (step * 5) + \",\" + (step * 3));\n        break;\n    }\n  }\n\n  data = \"\";\n  polylineData.loop(this, function (segment) {\n    switch (segment.segmentType) {\n      case SegmentType.Move:\n        data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n      case SegmentType.Line:\n        data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n      case SegmentType.QuadraticArc:\n        data += \"Q\" + (Math.round(segment.cpX) + 0.5) + \" \" + (Math.round(segment.cpY) + 0.5) + \" \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n      case SegmentType.Dot:\n        // A rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y\n        if (segment.width == segment.height && segment.width / 2.0 <= segment.cornerRadius) {\n          // dot\n          radius = segment.width / 2.0;\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n          data += \"A\" + radius + \" \" + radius + \" 0 0 0 \" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n          data += \"A\" + radius + \" \" + radius + \" 0 0 0 \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + segment.height / 2.0 + 0.5);\n        } else if (segment.cornerRadius === 0) {\n          // square\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        } else {\n          cornerRadius = Math.min(segment.cornerRadius, Math.min(segment.width / 2.0, segment.height / 2.0));\n          data += \"M\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + cornerRadius) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width - cornerRadius) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n          data += \"L\" + (Math.round(segment.x + segment.width) + 0.5) + \" \" + (Math.round(segment.y + segment.height - cornerRadius) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x + segment.width - cornerRadius) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"L\" + (Math.round(segment.x + cornerRadius) + 0.5) + \" \" + (Math.round(segment.y + segment.height) + 0.5);\n          data += \"A\" + Math.round(cornerRadius) + \" \" + Math.round(cornerRadius) + \" 0 0 1 \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + segment.height - cornerRadius) + 0.5);\n          data += \"L\" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y + cornerRadius) + 0.5);\n        }\n        break;\n      case SegmentType.CubicArc:\n        data += \"C\" + (Math.round(segment.cpX1) + 0.5) + \" \" + (Math.round(segment.cpY1) + 0.5) +\n          \" \" + (Math.round(segment.cpX2) + 0.5) + \" \" + (Math.round(segment.cpY2) + 0.5) +\n          \" \" + (Math.round(segment.x) + 0.5) + \" \" + (Math.round(segment.y) + 0.5);\n        break;\n    }\n  });\n\n  polyline.setAttribute(\"d\", data);\n  element = this.m_cache.get(placeholder.name, placeholder.activeLayer.name, \"path\");\n  if (element === null) {\n    element = polyline.create();\n    svgcanvas = this._getCanvas();\n    svgcanvas.appendChild(element);\n    this.m_cache.put(placeholder.name, placeholder.activeLayer.name, \"path\", element);\n  }\n  else {\n    polyline.update(element);\n  }\n};"]},"metadata":{},"sourceType":"module"}