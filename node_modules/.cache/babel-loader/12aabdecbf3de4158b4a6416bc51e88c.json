{"ast":null,"code":"import Rect from '../../graphics/structs/Rect';\nimport Point from '../../graphics/structs/Point';\nimport Size from '../../graphics/structs/Size';\nimport ObjectReader from '../../readers/ObjectReader';\nimport ValueReader from '../../readers/ValueReader';\nexport default function ViewPortPlacementTask(scaleOptionTask, centerOnCursorTask, createTransformTask, applyLayoutChangesTask) {\n  var _data = {},\n      _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    viewPortPosition: new ObjectReader({\n      x: new ValueReader([\"number\"], false, 0),\n      y: new ValueReader([\"number\"], false, 0),\n      width: new ValueReader([\"number\"], false, 0),\n      height: new ValueReader([\"number\"], false, 0)\n    }, false, new Rect(0, 0, 0, 0))\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n    _data = _dataTemplate.read(_data, getTransformedPosition(), \"options\", context);\n    return context.isChanged;\n  }\n\n  function getTransformedPosition() {\n    var viewPortPosition,\n        transform = createTransformTask.getTransform(),\n        position = getPosition();\n\n    if (position != null) {\n      transform.transformRect(position.x, position.y, position.width, position.height, false, this, function (x, y, width, height) {\n        viewPortPosition = new Rect(x, y, width, height);\n      });\n    }\n\n    return {\n      viewPortPosition: viewPortPosition\n    };\n  }\n\n  function getPosition() {\n    var scaleOptions = scaleOptionTask.getOptions(),\n        scale = scaleOptions.scale,\n        placeholderOffset = centerOnCursorTask ? new Point(centerOnCursorTask.getPlaceholderOffset()) : new Point(0, 0),\n        optimalPanelSize = new Size(applyLayoutChangesTask.getOptimalPanelSize());\n    placeholderOffset.scale(1.0 / scale);\n    optimalPanelSize.scale(1.0 / scale);\n    var result = new Rect(placeholderOffset.x, placeholderOffset.y, optimalPanelSize.width, optimalPanelSize.height);\n    return result;\n  }\n\n  function getViewPortPosition() {\n    return _data.viewPortPosition;\n  }\n\n  return {\n    process: process,\n    getViewPortPosition: getViewPortPosition\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/layout/ViewPortPlacementTask.js"],"names":["Rect","Point","Size","ObjectReader","ValueReader","ViewPortPlacementTask","scaleOptionTask","centerOnCursorTask","createTransformTask","applyLayoutChangesTask","_data","_hash","_dataTemplate","viewPortPosition","x","y","width","height","process","context","isChanged","hash","read","getTransformedPosition","transform","getTransform","position","getPosition","transformRect","scaleOptions","getOptions","scale","placeholderOffset","getPlaceholderOffset","optimalPanelSize","getOptimalPanelSize","result","getViewPortPosition"],"mappings":"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","sourcesContent":["import Rect from '../../graphics/structs/Rect';\nimport Point from '../../graphics/structs/Point';\nimport Size from '../../graphics/structs/Size';\nimport ObjectReader from '../../readers/ObjectReader';\nimport ValueReader from '../../readers/ValueReader';\n\nexport default function ViewPortPlacementTask(scaleOptionTask, centerOnCursorTask, createTransformTask, applyLayoutChangesTask) {\n  var _data = {},\n    _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    viewPortPosition: new ObjectReader({\n      x: new ValueReader([\"number\"], false, 0),\n      y: new ValueReader([\"number\"], false, 0),\n      width: new ValueReader([\"number\"], false, 0),\n      height: new ValueReader([\"number\"], false, 0)\n    }, false, new Rect(0, 0, 0, 0))\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n\n    _data = _dataTemplate.read(_data, getTransformedPosition(), \"options\", context);\n\n    return context.isChanged;\n  }\n\n  function getTransformedPosition() {\n    var viewPortPosition,\n      transform = createTransformTask.getTransform(),\n      position = getPosition();\n    if(position != null ) {\n      transform.transformRect(position.x, position.y, position.width, position.height, false,\n        this, function (x, y, width, height) { \n          viewPortPosition = new Rect(x, y, width, height);\n        });\n    }\n    return { viewPortPosition: viewPortPosition };\n  }\n\n  function getPosition() {\n    var scaleOptions = scaleOptionTask.getOptions(),\n      scale = scaleOptions.scale,\n      placeholderOffset = centerOnCursorTask ? new Point(centerOnCursorTask.getPlaceholderOffset()) : new Point(0, 0),\n      optimalPanelSize = new Size(applyLayoutChangesTask.getOptimalPanelSize());\n\n    placeholderOffset.scale(1.0 / scale);\n    optimalPanelSize.scale(1.0 / scale);\n\n    var result = new Rect(\n      placeholderOffset.x,\n      placeholderOffset.y,\n      optimalPanelSize.width,\n      optimalPanelSize.height\n    );\n    return result;\n  }\n\n  function getViewPortPosition() {\n    return _data.viewPortPosition;\n  }\n\n  return {\n    process: process,\n    getViewPortPosition: getViewPortPosition\n  };\n};"]},"metadata":{},"sourceType":"module"}