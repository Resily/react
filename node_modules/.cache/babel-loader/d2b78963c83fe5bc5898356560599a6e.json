{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport { PageFitMode, Visibility } from '../../../enums';\nexport default function CombinedNormalVisibilityItemsTask(itemsSizesOptionTask, cursorItemTask, cursorNeighboursTask, selectedItemsTask, selectionPathItemsTask, normalVisibilityItemsByForegroundShapeAnnotationTask, normalVisibilityItemsByBackgroundShapeAnnotationTask, normalVisibilityItemsByBackgroundAnnotationTask, normalVisibilityItemsByForegroundHighlightPathAnnotationTask, normalVisibilityItemsByBackgroundHighlightPathAnnotationTask, normalVisibilityItemsByForegroundConnectorAnnotationTask, normalVisibilityItemsByBackgroundConnectorAnnotationTask) {\n  var _data = {\n    items: []\n  },\n      _hash = {},\n      _sourceTasks = [cursorItemTask, cursorNeighboursTask, selectedItemsTask, selectionPathItemsTask, normalVisibilityItemsByForegroundShapeAnnotationTask, normalVisibilityItemsByBackgroundShapeAnnotationTask, normalVisibilityItemsByBackgroundAnnotationTask, normalVisibilityItemsByForegroundHighlightPathAnnotationTask, normalVisibilityItemsByBackgroundHighlightPathAnnotationTask, normalVisibilityItemsByForegroundConnectorAnnotationTask, normalVisibilityItemsByBackgroundConnectorAnnotationTask],\n      _dataTemplate = new ArrayReader(new ValueReader([\"string\", \"number\"], true), true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n        itemsSizesOption = itemsSizesOptionTask.getOptions();\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(_sourceTasks), \"items\", context);\n\n    if (itemsSizesOption.pageFitMode == PageFitMode.None || itemsSizesOption.minimalVisibility == Visibility.Normal) {\n      context.isChanged = false;\n    }\n\n    return context.isChanged;\n  }\n\n  function getSelectedItems(sourceTasks, getItemOptions) {\n    var result = [],\n        sourceIndex,\n        sourceLen,\n        sourceTask,\n        index,\n        len,\n        items,\n        item,\n        processed = {};\n\n    for (sourceIndex = 0, sourceLen = sourceTasks.length; sourceIndex < sourceLen; sourceIndex += 1) {\n      sourceTask = sourceTasks[sourceIndex];\n      items = sourceTask.getItems();\n\n      for (index = 0, len = items.length; index < len; index += 1) {\n        item = items[index];\n\n        if (!processed.hasOwnProperty(item)) {\n          result.push(item);\n          processed[item] = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function isItemSelected(treeItem) {\n    return _hash.items.hasOwnProperty(treeItem);\n  }\n\n  return {\n    process: process,\n    isItemSelected: isItemSelected\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/transformations/selection/CombinedNormalVisibilityItemsTask.js"],"names":["ArrayReader","ValueReader","PageFitMode","Visibility","CombinedNormalVisibilityItemsTask","itemsSizesOptionTask","cursorItemTask","cursorNeighboursTask","selectedItemsTask","selectionPathItemsTask","normalVisibilityItemsByForegroundShapeAnnotationTask","normalVisibilityItemsByBackgroundShapeAnnotationTask","normalVisibilityItemsByBackgroundAnnotationTask","normalVisibilityItemsByForegroundHighlightPathAnnotationTask","normalVisibilityItemsByBackgroundHighlightPathAnnotationTask","normalVisibilityItemsByForegroundConnectorAnnotationTask","normalVisibilityItemsByBackgroundConnectorAnnotationTask","_data","items","_hash","_sourceTasks","_dataTemplate","process","context","isChanged","hash","itemsSizesOption","getOptions","read","getSelectedItems","pageFitMode","None","minimalVisibility","Normal","sourceTasks","getItemOptions","result","sourceIndex","sourceLen","sourceTask","index","len","item","processed","length","getItems","hasOwnProperty","push","isItemSelected","treeItem"],"mappings":"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","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport { PageFitMode, Visibility } from '../../../enums';\n\nexport default function CombinedNormalVisibilityItemsTask(itemsSizesOptionTask, cursorItemTask, cursorNeighboursTask, selectedItemsTask, selectionPathItemsTask,\n  normalVisibilityItemsByForegroundShapeAnnotationTask, normalVisibilityItemsByBackgroundShapeAnnotationTask,\n  normalVisibilityItemsByBackgroundAnnotationTask,\n  normalVisibilityItemsByForegroundHighlightPathAnnotationTask, normalVisibilityItemsByBackgroundHighlightPathAnnotationTask,\n  normalVisibilityItemsByForegroundConnectorAnnotationTask, normalVisibilityItemsByBackgroundConnectorAnnotationTask\n) {\n  var _data = {\n    items: []\n  },\n    _hash = {},\n    _sourceTasks = [\n      cursorItemTask,\n      cursorNeighboursTask,\n      selectedItemsTask,\n      selectionPathItemsTask,\n      normalVisibilityItemsByForegroundShapeAnnotationTask, normalVisibilityItemsByBackgroundShapeAnnotationTask,\n      normalVisibilityItemsByBackgroundAnnotationTask,\n      normalVisibilityItemsByForegroundHighlightPathAnnotationTask, normalVisibilityItemsByBackgroundHighlightPathAnnotationTask,\n      normalVisibilityItemsByForegroundConnectorAnnotationTask, normalVisibilityItemsByBackgroundConnectorAnnotationTask\n    ],\n    _dataTemplate = new ArrayReader(\n      new ValueReader([\"string\", \"number\"], true),\n      true\n    );\n\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    },\n      itemsSizesOption = itemsSizesOptionTask.getOptions();\n\n    _data.items = _dataTemplate.read(_data.items, getSelectedItems(_sourceTasks), \"items\", context);\n\n    if (itemsSizesOption.pageFitMode == PageFitMode.None || itemsSizesOption.minimalVisibility == Visibility.Normal) {\n      context.isChanged = false;\n    }\n\n    return context.isChanged;\n  }\n\n  function getSelectedItems(sourceTasks, getItemOptions) {\n    var result = [],\n      sourceIndex, sourceLen,\n      sourceTask,\n      index, len,\n      items, item,\n      processed = {};\n\n    for (sourceIndex = 0, sourceLen = sourceTasks.length; sourceIndex < sourceLen; sourceIndex += 1) {\n      sourceTask = sourceTasks[sourceIndex];\n      items = sourceTask.getItems();\n\n      for (index = 0, len = items.length; index < len; index += 1) {\n        item = items[index];\n\n        if (!processed.hasOwnProperty(item)) {\n          result.push(item);\n          processed[item] = true;\n        }\n      }\n    }\n    return result;\n  }\n\n  function isItemSelected(treeItem) {\n    return _hash.items.hasOwnProperty(treeItem);\n  }\n\n  return {\n    process: process,\n    isItemSelected: isItemSelected\n  };\n};"]},"metadata":{},"sourceType":"module"}