{"ast":null,"code":"import { Layers } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Thickness from '../../graphics/structs/Thickness';\nimport Interval from '../../graphics/structs/Interval';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nexport default function DrawLevelAnnotationTitlesTask(getGraphics, verticalOffsetTask, createTransformTask, applyLayoutChangesTask, levelAnnotationOptionTask, mergeLevelIntervalsTask, levelAnnotationTemplateTask, levelTitlePlacementOptionTask) {\n  var _graphics, _positions, _transform, _template;\n\n  function process() {\n    var annotations = levelAnnotationOptionTask.getAnnotations();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"titlesplaceholder\", Layers.LevelAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = mergeLevelIntervalsTask.getPositions();\n      _transform = createTransformTask.getTransform();\n      _template = levelAnnotationTemplateTask.getTitleTemplate();\n      drawAnnotations(annotations, _positions);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions) {\n    var verticalOffset = new Interval(verticalOffsetTask.getVerticalOffset()),\n        _levelTitlePlacementO = levelTitlePlacementOptionTask.getOptions(),\n        levelTitlePanelSize = _levelTitlePlacementO.levelTitlePanelSize;\n\n    _graphics.activate(\"titlesplaceholder\", Layers.LevelAnnotation);\n\n    var transformedVerticalOffset;\n\n    _transform.transformRect(0, verticalOffset.from, 0, verticalOffset.width(), true, this, function (x, y, width, height) {\n      transformedVerticalOffset = new Rect(x, y, width, height);\n    });\n\n    for (var index = 0, len = annotations.length; index < len; index += 1) {\n      var annotationConfig = annotations[index];\n      var intervals = positions[index];\n\n      if (intervals != null) {\n        for (var index3 = 0, len3 = intervals.length; index3 < len3; index3 += 1) {\n          var interval = intervals[index3];\n          var position = new Rect(0, interval.from, levelTitlePanelSize, interval.width());\n          var verticalInterval = position.verticalInterval();\n\n          if (verticalInterval.overlaps(verticalOffset)) {\n            var offset = new Thickness(0, annotationConfig.offset.top, 0, annotationConfig.offset.bottom);\n            position.offset(offset);\n            var uiHash = new RenderEventArgs();\n            uiHash.context = annotationConfig;\n\n            _transform.transformRect(position.x, position.y, position.width, position.height, true, this, function (x, y, width, height) {\n              _graphics.template(x - transformedVerticalOffset.x, y - transformedVerticalOffset.y, width, height, 0, 0, width, height, _template.template(), _template.getHashCode(), _template.render, uiHash, null);\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawLevelAnnotationTitlesTask.js"],"names":["Layers","Rect","Thickness","Interval","RenderEventArgs","DrawLevelAnnotationTitlesTask","getGraphics","verticalOffsetTask","createTransformTask","applyLayoutChangesTask","levelAnnotationOptionTask","mergeLevelIntervalsTask","levelAnnotationTemplateTask","levelTitlePlacementOptionTask","_graphics","_positions","_transform","_template","process","annotations","getAnnotations","reset","LevelAnnotation","length","getPositions","getTransform","getTitleTemplate","drawAnnotations","positions","verticalOffset","getVerticalOffset","getOptions","levelTitlePanelSize","activate","transformedVerticalOffset","transformRect","from","width","x","y","height","index","len","annotationConfig","intervals","index3","len3","interval","position","verticalInterval","overlaps","offset","top","bottom","uiHash","context","template","getHashCode","render"],"mappings":"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","sourcesContent":["import { Layers } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Thickness from '../../graphics/structs/Thickness';\nimport Interval from '../../graphics/structs/Interval';\nimport RenderEventArgs from '../../events/RenderEventArgs';\n\nexport default function DrawLevelAnnotationTitlesTask(getGraphics, verticalOffsetTask, createTransformTask, applyLayoutChangesTask, \n  levelAnnotationOptionTask, mergeLevelIntervalsTask, levelAnnotationTemplateTask, levelTitlePlacementOptionTask) {\n  var _graphics,\n    _positions,\n    _transform,\n    _template;\n\n  function process() {\n    var annotations = levelAnnotationOptionTask.getAnnotations();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"titlesplaceholder\", Layers.LevelAnnotation);\n\n    if (annotations.length > 0) {\n      _positions = mergeLevelIntervalsTask.getPositions();\n      _transform = createTransformTask.getTransform();\n      _template = levelAnnotationTemplateTask.getTitleTemplate();\n\n      drawAnnotations(annotations, _positions);\n    }\n\n    return false;\n  }\n\n  function drawAnnotations(annotations, positions) {\n    var verticalOffset = new Interval(verticalOffsetTask.getVerticalOffset()),\n    { levelTitlePanelSize } = levelTitlePlacementOptionTask.getOptions();\n\n    _graphics.activate(\"titlesplaceholder\", Layers.LevelAnnotation);\n\n    var transformedVerticalOffset;\n    _transform.transformRect(0, verticalOffset.from, 0, verticalOffset.width(), true,\n      this, function (x, y, width, height) {\n        transformedVerticalOffset = new Rect(x, y, width, height);\n      });\n\n    for (var index = 0, len = annotations.length; index < len; index += 1) {\n      var annotationConfig = annotations[index];\n      var intervals = positions[index];\n      if (intervals != null) {\n        for (var index3 = 0, len3 = intervals.length; index3 < len3; index3 += 1) {\n          var interval = intervals[index3];\n\n          var position = new Rect(0, interval.from, levelTitlePanelSize, interval.width());\n          var verticalInterval = position.verticalInterval();\n\n          if(verticalInterval.overlaps(verticalOffset)) {\n            var offset = new Thickness(0, annotationConfig.offset.top, 0, annotationConfig.offset.bottom);\n            position.offset(offset);\n\n            var uiHash = new RenderEventArgs();\n            uiHash.context = annotationConfig;\n      \n            _transform.transformRect(position.x, position.y, position.width, position.height, true,\n              this, function (x, y, width, height) {\n                _graphics.template(\n                  x - transformedVerticalOffset.x\n                  , y - transformedVerticalOffset.y\n                  , width\n                  , height\n                  , 0\n                  , 0\n                  , width\n                  , height\n                  , _template.template()\n                  , _template.getHashCode()\n                  , _template.render\n                  , uiHash\n                  , null\n                );\n              });\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}