{"ast":null,"code":"import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers } from '../../enums';\nexport default function DrawFrameHighlightTask(getGraphics, projectItemsToFrameTask, combinedContextsTask, itemTemplateParamsTask, highlightItemTask, cursorItemTask) {\n  var _graphics;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"frameplaceholder\", Layers.Highlight);\n\n    if (treeItemId != null) {\n      drawHighlight(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawHighlight(treeItemId) {\n    var uiHash,\n        positions = projectItemsToFrameTask.getPositions(),\n        position = positions[treeItemId];\n\n    if (position != null) {\n      var templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n          template = templateParams.template,\n          templateConfig = template.templateConfig,\n          highlightPadding = templateConfig.highlightPadding;\n\n      _graphics.activate(\"frameplaceholder\", Layers.Highlight);\n\n      uiHash = new RenderEventArgs();\n      uiHash.context = combinedContextsTask.getConfig(treeItemId);\n      uiHash.isCursor = cursorItemTask.getCursorTreeItem() == treeItemId;\n      uiHash.isSelected = true;\n      uiHash.templateName = templateConfig.name;\n      var contentPosition = new Rect(0, 0, Math.round(position.width), Math.round(position.height));\n      contentPosition.offset(highlightPadding.left, highlightPadding.top, highlightPadding.right, highlightPadding.bottom);\n\n      _graphics.template(Math.round(position.x), Math.round(position.y), Math.round(position.width), Math.round(position.height), Math.round(contentPosition.x), Math.round(contentPosition.y), Math.round(contentPosition.width), Math.round(contentPosition.height), template.dotHighlightTemplate.template(), template.dotHighlightTemplate.getHashCode(), template.dotHighlightTemplate.render, uiHash, {\n        \"borderWidth\": templateConfig.highlightBorderWidth\n      });\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawFrameHighlightTask.js"],"names":["Rect","RenderEventArgs","Layers","DrawFrameHighlightTask","getGraphics","projectItemsToFrameTask","combinedContextsTask","itemTemplateParamsTask","highlightItemTask","cursorItemTask","_graphics","process","treeItemId","getHighlightTreeItem","reset","Highlight","drawHighlight","uiHash","positions","getPositions","position","templateParams","getTemplateParams","template","templateConfig","highlightPadding","activate","context","getConfig","isCursor","getCursorTreeItem","isSelected","templateName","name","contentPosition","Math","round","width","height","offset","left","top","right","bottom","x","y","dotHighlightTemplate","getHashCode","render","highlightBorderWidth"],"mappings":"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","sourcesContent":["import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers } from '../../enums';\n\nexport default function DrawFrameHighlightTask(getGraphics, projectItemsToFrameTask,\n  combinedContextsTask,\n  itemTemplateParamsTask,\n  highlightItemTask, cursorItemTask) {\n  var _graphics;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"frameplaceholder\", Layers.Highlight);\n\n    if (treeItemId != null) {\n      drawHighlight(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawHighlight(treeItemId) {\n    var uiHash,\n      positions = projectItemsToFrameTask.getPositions(),\n      position = positions[treeItemId];\n    if(position != null) {\n      var templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n        template = templateParams.template,\n        templateConfig = template.templateConfig,\n        highlightPadding = templateConfig.highlightPadding;\n\n      _graphics.activate(\"frameplaceholder\", Layers.Highlight)\n\n      uiHash = new RenderEventArgs();\n      uiHash.context = combinedContextsTask.getConfig(treeItemId);\n      uiHash.isCursor = (cursorItemTask.getCursorTreeItem() == treeItemId);\n      uiHash.isSelected = true;\n      uiHash.templateName = templateConfig.name;\n\n      var contentPosition = new Rect(0, 0, Math.round(position.width), Math.round(position.height));\n      contentPosition.offset(highlightPadding.left, highlightPadding.top, highlightPadding.right, highlightPadding.bottom);\n\n      _graphics.template(\n        Math.round(position.x)\n        , Math.round(position.y)\n        , Math.round(position.width)\n        , Math.round(position.height)\n        , Math.round(contentPosition.x)\n        , Math.round(contentPosition.y)\n        , Math.round(contentPosition.width)\n        , Math.round(contentPosition.height)\n        , template.dotHighlightTemplate.template()\n        , template.dotHighlightTemplate.getHashCode()\n        , template.dotHighlightTemplate.render\n        , uiHash\n        , { \"borderWidth\": templateConfig.highlightBorderWidth }\n      );\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}