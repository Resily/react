{"ast":null,"code":"import Point from '../../graphics/structs/Point';\nimport Rect from '../../graphics/structs/Rect';\nimport Size from '../../graphics/structs/Size';\nimport Thickness from '../../graphics/structs/Thickness';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, Visibility, Enabled, PlacementType, OrientationType } from '../../enums';\nimport Callout from '../../graphics/shapes/Callout';\nimport { isNullOrEmpty } from '../../common';\nexport default function DrawHighlightAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask, scaleOptionTask, combinedContextsTask, calloutOptionTask, readTemplatesTask, alignDiagramTask, centerOnCursorTask, highlightItemTask, cursorItemTask, selectedItemsTask, frameSizeTask) {\n  var _graphics,\n      _transform,\n      _calloutShape = new Callout(getGraphics()),\n      _options;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"calloutplaceholder\", Layers.Annotation);\n\n    if (treeItemId !== null) {\n      _transform = createTransformTask.getTransform();\n      _options = calloutOptionTask.getOptions();\n      drawHighlightAnnotation(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawHighlightAnnotation(treeItemId) {\n    var panel,\n        itemConfig,\n        calloutPanelPosition,\n        position,\n        uiHash,\n        calloutTemplateName,\n        calloutTemplate,\n        showCallout = true,\n        treeItemPosition = alignDiagramTask.getItemPosition(treeItemId),\n        actualPosition = treeItemPosition.actualPosition;\n\n    switch (treeItemPosition.actualVisibility) {\n      case Visibility.Dot:\n      case Visibility.Line:\n      case Visibility.Normal:\n        itemConfig = calloutOptionTask.getItemOptions(treeItemId);\n\n        switch (itemConfig.showCallout) {\n          case Enabled.False:\n            showCallout = false;\n            break;\n\n          case Enabled.True:\n            showCallout = false;\n            break;\n\n          default:\n            showCallout = _options.showCallout;\n            break;\n        }\n\n        if (showCallout) {\n          panel = _graphics.activate(\"placeholder\", Layers.Item);\n\n          _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true, this, function (x, y, width, height) {\n            var snapRect = new Rect(x, y, width, height),\n                snapPoint = new Point(snapRect.centerPoint()),\n                _getFrameMedianPositi = getFrameMedianPosition(),\n                medianRect = _getFrameMedianPositi.medianRect,\n                viewPortRect = _getFrameMedianPositi.viewPortRect,\n                projectionPoint = medianRect.getProjectionPoint(snapRect.centerPoint());\n\n            if (projectionPoint == null) {\n              /* snapPoint is inside viewport, no need to project */\n              projectionPoint = snapPoint;\n            }\n\n            if (treeItemPosition.actualVisibility >= _options.calloutMaximumVisibility && treeItemPosition.actualVisibility != Visibility.Invisible || !medianRect.overlaps(snapRect)) {\n              calloutTemplateName = !isNullOrEmpty(itemConfig.calloutTemplateName) ? itemConfig.calloutTemplateName : !isNullOrEmpty(itemConfig.templateName) ? itemConfig.templateName : !isNullOrEmpty(_options.defaultCalloutTemplateName) ? _options.defaultCalloutTemplateName : _options.defaultTemplateName;\n              calloutTemplate = readTemplatesTask.getTemplate(calloutTemplateName, readTemplatesTask.DefaultWidgetTemplateName);\n              var itemSize = calloutTemplate.templateConfig.itemSize;\n\n              if (calloutTemplate.templateConfig.getDynamicItemSize) {\n                var dynamicItemSize = calloutTemplate.templateConfig.getDynamicItemSize(treeItemId);\n                itemSize.width = dynamicItemSize.width;\n                itemSize.height = dynamicItemSize.height;\n              }\n\n              position = getAnnotationPosition(projectionPoint, viewPortRect, itemSize);\n              /* position callout div placeholder */\n\n              calloutPanelPosition = new Rect(position);\n              calloutPanelPosition.addRect(projectionPoint.x, projectionPoint.y);\n              calloutPanelPosition.offset(50);\n              /* recalculate geometries */\n\n              projectionPoint.x -= calloutPanelPosition.x;\n              projectionPoint.y -= calloutPanelPosition.y;\n              position.x -= calloutPanelPosition.x;\n              position.y -= calloutPanelPosition.y;\n              uiHash = new RenderEventArgs();\n              uiHash.context = combinedContextsTask.getConfig(treeItemId);\n              uiHash.isCursor = cursorItemTask.getCursorTreeItem() == treeItemId;\n              uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n              uiHash.templateName = calloutTemplate.templateConfig.name;\n\n              _graphics.show(\"calloutplaceholder\");\n\n              panel = _graphics.activate(\"calloutplaceholder\", Layers.Annotation);\n\n              _graphics.position(\"calloutplaceholder\", calloutPanelPosition.x, calloutPanelPosition.y, calloutPanelPosition.width, calloutPanelPosition.height);\n\n              _graphics.template(position.x, position.y, position.width, position.height, 0, 0, position.width, position.height, calloutTemplate.itemTemplate.template(), calloutTemplate.itemTemplate.getHashCode(), calloutTemplate.itemTemplate.render, uiHash, null);\n\n              _calloutShape.pointerPlacement = PlacementType.Auto;\n              _calloutShape.cornerRadius = _options.calloutCornerRadius;\n              _calloutShape.offset = _options.calloutOffset;\n              _calloutShape.opacity = _options.calloutOpacity;\n              _calloutShape.lineWidth = _options.calloutLineWidth;\n              _calloutShape.pointerWidth = _options.calloutPointerWidth;\n              _calloutShape.borderColor = _options.calloutBorderColor;\n              _calloutShape.fillColor = _options.calloutfillColor;\n\n              _calloutShape.draw(projectionPoint, position);\n            } else {\n              _graphics.hide(\"calloutplaceholder\");\n            }\n          });\n        } else {\n          _graphics.hide(\"calloutplaceholder\");\n        }\n\n        break;\n\n      case Visibility.Invisible:\n        _graphics.hide(\"calloutplaceholder\");\n\n        break;\n    }\n  }\n\n  function getFrameMedianPosition() {\n    var scaleOptions = scaleOptionTask.getOptions(),\n        scale = scaleOptions.scale,\n        placeholderOffset = new Point(centerOnCursorTask.getPlaceholderOffset()),\n        scrollPanelSize = new Size(applyLayoutChangesTask.getScrollPanelSize()),\n        frameBaseOffset = new Thickness(applyLayoutChangesTask.getFrameOffset()),\n        medianThickness = new Thickness(frameSizeTask.getMedian());\n    placeholderOffset.scale(1.0 / scale);\n    frameBaseOffset.scale(1.0 / scale);\n    scrollPanelSize.scale(1.0 / scale);\n    medianThickness.scale(1.0 / scale);\n    var viewPortRect = new Rect(placeholderOffset.x, placeholderOffset.y, scrollPanelSize.width, scrollPanelSize.height);\n    var medianRect = new Rect(viewPortRect);\n    medianRect.offset(frameBaseOffset);\n    medianRect.offset(medianThickness);\n    return {\n      medianRect: medianRect,\n      viewPortRect: viewPortRect\n    };\n  }\n\n  function getAnnotationPosition(snapPoint, panelRect, itemSize) {\n    var result = new Rect(snapPoint.x, snapPoint.y, itemSize.width, itemSize.height);\n\n    switch (_options.orientationType) {\n      case OrientationType.Top:\n      case OrientationType.Bottom:\n        result.y -= itemSize.height / 4.0;\n\n        if (snapPoint.x < panelRect.horizontalCenter()) {\n          result.x += _options.calloutPlacementOffset;\n        } else {\n          result.x -= _options.calloutPlacementOffset + itemSize.width;\n        }\n\n        break;\n\n      default:\n        result.x -= itemSize.width / 4.0;\n\n        if (snapPoint.y < panelRect.verticalCenter()) {\n          result.y += _options.calloutPlacementOffset;\n        } else {\n          result.y -= _options.calloutPlacementOffset + itemSize.height;\n        }\n\n        break;\n    } // If annotation clipped then move it back into view port\n\n\n    if (result.x < panelRect.x) {\n      result.x = panelRect.x + _options.calloutPlacementOffset;\n    } else if (result.right() > panelRect.right()) {\n      result.x -= result.right() - panelRect.right() + _options.calloutPlacementOffset;\n    }\n\n    if (result.y < panelRect.y) {\n      result.y = panelRect.y + _options.calloutPlacementOffset;\n    } else if (result.bottom() > panelRect.bottom()) {\n      result.y -= result.bottom() - panelRect.bottom() + _options.calloutPlacementOffset;\n    }\n\n    return result;\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawHighlightAnnotationTask.js"],"names":["Point","Rect","Size","Thickness","RenderEventArgs","Layers","Visibility","Enabled","PlacementType","OrientationType","Callout","isNullOrEmpty","DrawHighlightAnnotationTask","getGraphics","createTransformTask","applyLayoutChangesTask","scaleOptionTask","combinedContextsTask","calloutOptionTask","readTemplatesTask","alignDiagramTask","centerOnCursorTask","highlightItemTask","cursorItemTask","selectedItemsTask","frameSizeTask","_graphics","_transform","_calloutShape","_options","process","treeItemId","getHighlightTreeItem","reset","Annotation","getTransform","getOptions","drawHighlightAnnotation","panel","itemConfig","calloutPanelPosition","position","uiHash","calloutTemplateName","calloutTemplate","showCallout","treeItemPosition","getItemPosition","actualPosition","actualVisibility","Dot","Line","Normal","getItemOptions","False","True","activate","Item","transformRect","x","y","width","height","snapRect","snapPoint","centerPoint","getFrameMedianPosition","medianRect","viewPortRect","projectionPoint","getProjectionPoint","calloutMaximumVisibility","Invisible","overlaps","templateName","defaultCalloutTemplateName","defaultTemplateName","getTemplate","DefaultWidgetTemplateName","itemSize","templateConfig","getDynamicItemSize","dynamicItemSize","getAnnotationPosition","addRect","offset","context","getConfig","isCursor","getCursorTreeItem","isSelected","name","show","template","itemTemplate","getHashCode","render","pointerPlacement","Auto","cornerRadius","calloutCornerRadius","calloutOffset","opacity","calloutOpacity","lineWidth","calloutLineWidth","pointerWidth","calloutPointerWidth","borderColor","calloutBorderColor","fillColor","calloutfillColor","draw","hide","scaleOptions","scale","placeholderOffset","getPlaceholderOffset","scrollPanelSize","getScrollPanelSize","frameBaseOffset","getFrameOffset","medianThickness","getMedian","panelRect","result","orientationType","Top","Bottom","horizontalCenter","calloutPlacementOffset","verticalCenter","right","bottom"],"mappings":"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","sourcesContent":["import Point from '../../graphics/structs/Point';\nimport Rect from '../../graphics/structs/Rect';\nimport Size from '../../graphics/structs/Size';\nimport Thickness from '../../graphics/structs/Thickness';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers, Visibility, Enabled, PlacementType, OrientationType } from '../../enums';\nimport Callout from '../../graphics/shapes/Callout';\nimport { isNullOrEmpty } from '../../common';\n\nexport default function DrawHighlightAnnotationTask(getGraphics, createTransformTask, applyLayoutChangesTask, scaleOptionTask,\n  combinedContextsTask,\n  calloutOptionTask,\n  readTemplatesTask,\n  alignDiagramTask, centerOnCursorTask,\n  highlightItemTask, cursorItemTask, selectedItemsTask, frameSizeTask) {\n  var _graphics,\n    _transform,\n    _calloutShape = new Callout(getGraphics()),\n    _options;\n\n  function process() {\n    var treeItemId = highlightItemTask.getHighlightTreeItem();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"calloutplaceholder\", Layers.Annotation);\n\n    if (treeItemId !== null) {\n      _transform = createTransformTask.getTransform();\n      _options = calloutOptionTask.getOptions();\n\n      drawHighlightAnnotation(treeItemId);\n    }\n    return false;\n  }\n\n  function drawHighlightAnnotation(treeItemId) {\n    var panel,\n      itemConfig,\n      calloutPanelPosition,\n      position,\n      uiHash,\n      calloutTemplateName,\n      calloutTemplate,\n      showCallout = true,\n      treeItemPosition = alignDiagramTask.getItemPosition(treeItemId),\n      actualPosition = treeItemPosition.actualPosition;\n\n\n    switch (treeItemPosition.actualVisibility) {\n      case Visibility.Dot:\n      case Visibility.Line:\n      case Visibility.Normal:\n        itemConfig = calloutOptionTask.getItemOptions(treeItemId);\n\n        switch (itemConfig.showCallout) {\n          case Enabled.False:\n            showCallout = false;\n            break;\n          case Enabled.True:\n            showCallout = false;\n            break;\n          default:\n            showCallout = _options.showCallout;\n            break;\n        }\n\n        if (showCallout) {\n          panel = _graphics.activate(\"placeholder\", Layers.Item);\n\n          _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true,\n            this, function (x, y, width, height) {\n              var snapRect = new Rect(x, y, width, height),\n                snapPoint = new Point(snapRect.centerPoint()),\n                { medianRect, viewPortRect } = getFrameMedianPosition(),\n                projectionPoint = medianRect.getProjectionPoint(snapRect.centerPoint());\n\n              if(projectionPoint == null) {\n                /* snapPoint is inside viewport, no need to project */\n                projectionPoint = snapPoint;\n              }\n              if ((treeItemPosition.actualVisibility >= _options.calloutMaximumVisibility && treeItemPosition.actualVisibility != Visibility.Invisible) || !medianRect.overlaps(snapRect)) {\n\n                calloutTemplateName = !isNullOrEmpty(itemConfig.calloutTemplateName) ? itemConfig.calloutTemplateName :\n                  !isNullOrEmpty(itemConfig.templateName) ? itemConfig.templateName :\n                    !isNullOrEmpty(_options.defaultCalloutTemplateName) ? _options.defaultCalloutTemplateName :\n                      _options.defaultTemplateName;\n\n                calloutTemplate = readTemplatesTask.getTemplate(calloutTemplateName, readTemplatesTask.DefaultWidgetTemplateName);\n\n                const itemSize =calloutTemplate.templateConfig.itemSize\n                if (calloutTemplate.templateConfig.getDynamicItemSize) {\n                  const dynamicItemSize = calloutTemplate.templateConfig.getDynamicItemSize(treeItemId)\n                  itemSize.width = dynamicItemSize.width\n                  itemSize.height = dynamicItemSize.height\n                }\n                position = getAnnotationPosition(projectionPoint, viewPortRect, itemSize);\n\n                /* position callout div placeholder */\n                calloutPanelPosition = new Rect(position);\n                calloutPanelPosition.addRect(projectionPoint.x, projectionPoint.y);\n                calloutPanelPosition.offset(50);\n\n                /* recalculate geometries */\n                projectionPoint.x -= calloutPanelPosition.x;\n                projectionPoint.y -= calloutPanelPosition.y;\n                position.x -= calloutPanelPosition.x;\n                position.y -= calloutPanelPosition.y;\n\n                uiHash = new RenderEventArgs();\n                uiHash.context = combinedContextsTask.getConfig(treeItemId);\n                uiHash.isCursor = (cursorItemTask.getCursorTreeItem() == treeItemId);\n                uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n                uiHash.templateName = calloutTemplate.templateConfig.name;\n                _graphics.show(\"calloutplaceholder\");\n                panel = _graphics.activate(\"calloutplaceholder\", Layers.Annotation);\n                _graphics.position(\"calloutplaceholder\", calloutPanelPosition.x, calloutPanelPosition.y, calloutPanelPosition.width, calloutPanelPosition.height);\n                _graphics.template(\n                  position.x\n                  , position.y\n                  , position.width\n                  , position.height\n                  , 0\n                  , 0\n                  , position.width\n                  , position.height\n                  , calloutTemplate.itemTemplate.template()\n                  , calloutTemplate.itemTemplate.getHashCode()\n                  , calloutTemplate.itemTemplate.render\n                  , uiHash\n                  , null\n                );\n\n                _calloutShape.pointerPlacement = PlacementType.Auto;\n                _calloutShape.cornerRadius = _options.calloutCornerRadius;\n                _calloutShape.offset = _options.calloutOffset;\n                _calloutShape.opacity = _options.calloutOpacity;\n                _calloutShape.lineWidth = _options.calloutLineWidth;\n                _calloutShape.pointerWidth = _options.calloutPointerWidth;\n                _calloutShape.borderColor = _options.calloutBorderColor;\n                _calloutShape.fillColor = _options.calloutfillColor;\n                _calloutShape.draw(projectionPoint, position);\n              } else {\n                _graphics.hide(\"calloutplaceholder\");\n              }\n            }\n          );\n        } else {\n          _graphics.hide(\"calloutplaceholder\");\n        }\n        break;\n      case Visibility.Invisible:\n        _graphics.hide(\"calloutplaceholder\");\n        break;\n    }\n  }\n\n  function getFrameMedianPosition() {\n    var scaleOptions = scaleOptionTask.getOptions(),\n      scale = scaleOptions.scale,\n      placeholderOffset = new Point(centerOnCursorTask.getPlaceholderOffset()),\n      scrollPanelSize = new Size(applyLayoutChangesTask.getScrollPanelSize()),\n      frameBaseOffset = new Thickness(applyLayoutChangesTask.getFrameOffset()),\n      medianThickness = new Thickness(frameSizeTask.getMedian());\n\n    \n    placeholderOffset.scale(1.0 / scale);\n    frameBaseOffset.scale(1.0 / scale);\n    scrollPanelSize.scale(1.0 / scale);\n    medianThickness.scale(1.0 / scale);\n\n    var viewPortRect = new Rect(placeholderOffset.x, placeholderOffset.y, scrollPanelSize.width, scrollPanelSize.height);\n    var medianRect = new Rect(viewPortRect);\n    medianRect.offset(frameBaseOffset);\n    medianRect.offset(medianThickness);\n\n    return { \n      medianRect: medianRect,\n      viewPortRect: viewPortRect\n    };\n  }\n\n  function getAnnotationPosition(snapPoint, panelRect, itemSize) {\n    var result = new Rect(snapPoint.x, snapPoint.y, itemSize.width, itemSize.height);\n\n    switch (_options.orientationType) {\n      case OrientationType.Top:\n      case OrientationType.Bottom:\n        result.y -= (itemSize.height / 4.0);\n        if (snapPoint.x < panelRect.horizontalCenter()) {\n          result.x += _options.calloutPlacementOffset;\n        }\n        else {\n          result.x -= (_options.calloutPlacementOffset + itemSize.width);\n        }\n        break;\n      default:\n        result.x -= (itemSize.width / 4.0);\n        if (snapPoint.y < panelRect.verticalCenter()) {\n          result.y += _options.calloutPlacementOffset;\n        }\n        else {\n          result.y -= (_options.calloutPlacementOffset + itemSize.height);\n        }\n        break;\n    }\n\n    // If annotation clipped then move it back into view port\n    if (result.x < panelRect.x) {\n      result.x = panelRect.x + _options.calloutPlacementOffset;\n    }\n    else if (result.right() > panelRect.right()) {\n      result.x -= (result.right() - panelRect.right() + _options.calloutPlacementOffset);\n    }\n\n    if (result.y < panelRect.y) {\n      result.y = panelRect.y + _options.calloutPlacementOffset;\n    }\n    else if (result.bottom() > panelRect.bottom()) {\n      result.y -= (result.bottom() - panelRect.bottom() + _options.calloutPlacementOffset);\n    }\n\n    return result;\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}