{"ast":null,"code":"import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers } from '../../enums';\nexport default function DrawCursorTask(getGraphics, createTransformTask, applyLayoutChangesTask, combinedContextsTask, alignDiagramTask, itemTemplateParamsTask, cursorItemTask, selectedItemsTask) {\n  var _graphics, _transform;\n\n  function process() {\n    var treeItemId = cursorItemTask.getCursorTreeItem();\n    _graphics = getGraphics();\n\n    _graphics.reset(\"placeholder\", Layers.Cursor);\n\n    if (treeItemId != null) {\n      _transform = createTransformTask.getTransform();\n      drawCursor(treeItemId);\n    }\n\n    return false;\n  }\n\n  function drawCursor(treeItemId) {\n    var treeItem,\n        uiHash,\n        panel = _graphics.activate(\"placeholder\", Layers.Cursor),\n        treeItemPosition = alignDiagramTask.getItemPosition(treeItemId);\n\n    if (treeItemPosition != null) {\n      var actualPosition = treeItemPosition.actualPosition,\n          position = new Rect(treeItemPosition.contentPosition),\n          templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n          template = templateParams.template,\n          templateConfig = template.templateConfig,\n          cursorPadding = templateConfig.cursorPadding;\n      position.offset(cursorPadding.left, cursorPadding.top, cursorPadding.right, cursorPadding.bottom);\n      uiHash = new RenderEventArgs();\n      uiHash.context = combinedContextsTask.getConfig(treeItemId);\n      uiHash.isCursor = true;\n      uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n      uiHash.templateName = templateConfig.name;\n\n      _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true, this, function (x, y, width, height) {\n        var element = _graphics.template(x, y, width, height, position.x, position.y, position.width, position.height, template.cursorTemplate.template(), template.cursorTemplate.getHashCode(), template.cursorTemplate.render, uiHash, {\n          \"borderWidth\": templateConfig.cursorBorderWidth\n        });\n      });\n    }\n  }\n\n  return {\n    process: process\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/renders/DrawCursorTask.js"],"names":["Rect","RenderEventArgs","Layers","DrawCursorTask","getGraphics","createTransformTask","applyLayoutChangesTask","combinedContextsTask","alignDiagramTask","itemTemplateParamsTask","cursorItemTask","selectedItemsTask","_graphics","_transform","process","treeItemId","getCursorTreeItem","reset","Cursor","getTransform","drawCursor","treeItem","uiHash","panel","activate","treeItemPosition","getItemPosition","actualPosition","position","contentPosition","templateParams","getTemplateParams","template","templateConfig","cursorPadding","offset","left","top","right","bottom","context","getConfig","isCursor","isSelected","templateName","name","transformRect","x","y","width","height","element","cursorTemplate","getHashCode","render","cursorBorderWidth"],"mappings":"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","sourcesContent":["import Rect from '../../graphics/structs/Rect';\nimport RenderEventArgs from '../../events/RenderEventArgs';\nimport { Layers } from '../../enums';\n\nexport default function DrawCursorTask(getGraphics, createTransformTask, applyLayoutChangesTask,\n  combinedContextsTask,\n  alignDiagramTask, itemTemplateParamsTask,\n  cursorItemTask, selectedItemsTask) {\n  var _graphics,\n    _transform;\n\n  function process() {\n    var treeItemId = cursorItemTask.getCursorTreeItem();\n\n    _graphics = getGraphics();\n    _graphics.reset(\"placeholder\", Layers.Cursor);\n\n    if (treeItemId != null) {\n      _transform = createTransformTask.getTransform();\n\n      drawCursor(treeItemId);\n    }\n    return false;\n  }\n\n  function drawCursor(treeItemId) {\n    var treeItem,\n      uiHash,\n      panel = _graphics.activate(\"placeholder\", Layers.Cursor),\n      treeItemPosition = alignDiagramTask.getItemPosition(treeItemId);\n    if (treeItemPosition != null) {\n      var actualPosition = treeItemPosition.actualPosition,\n        position = new Rect(treeItemPosition.contentPosition),\n        templateParams = itemTemplateParamsTask.getTemplateParams(treeItemId),\n        template = templateParams.template,\n        templateConfig = template.templateConfig,\n        cursorPadding = templateConfig.cursorPadding;\n\n      position.offset(cursorPadding.left, cursorPadding.top, cursorPadding.right, cursorPadding.bottom);\n\n      uiHash = new RenderEventArgs();\n      uiHash.context = combinedContextsTask.getConfig(treeItemId);\n      uiHash.isCursor = true;\n      uiHash.isSelected = selectedItemsTask.isSelected(treeItemId);\n      uiHash.templateName = templateConfig.name;\n\n      _transform.transformRect(actualPosition.x, actualPosition.y, actualPosition.width, actualPosition.height, true,\n        this, function (x, y, width, height) {\n          var element = _graphics.template(\n            x\n            , y\n            , width\n            , height\n            , position.x\n            , position.y\n            , position.width\n            , position.height\n            , template.cursorTemplate.template()\n            , template.cursorTemplate.getHashCode()\n            , template.cursorTemplate.render\n            , uiHash\n            , { \"borderWidth\": templateConfig.cursorBorderWidth }\n          );\n        });\n    }\n  }\n\n  return {\n    process: process\n  };\n};"]},"metadata":{},"sourceType":"module"}