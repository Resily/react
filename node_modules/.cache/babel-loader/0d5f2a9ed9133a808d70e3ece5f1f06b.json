{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport ObjectReader from '../../../readers/ObjectReader';\nimport EnumerationReader from '../../../readers/EnumerationReader';\nimport { ZOrderType, AnnotationType } from '../../../enums';\nexport default function LabelAnnotationOptionTask(splitAnnotationsOptionTask, removeLoopsTask, defaultLabelAnnotationConfig) {\n  var _data = {\n    annotations: [],\n    configs: {},\n    maximumId: null\n  },\n      _hash = {};\n\n  var _dataTemplate = new ArrayReader(new ObjectReader({\n    zOrderType: new EnumerationReader(ZOrderType, false, defaultLabelAnnotationConfig.zOrderType),\n    fromItem: new ValueReader([\"string\", \"number\"], true),\n    toItems: new ArrayReader(new ValueReader([\"string\", \"number\"], true), true),\n    title: new ValueReader([\"string\"], true),\n    itemTitleColor: new ValueReader([\"string\"], false, defaultLabelAnnotationConfig.itemTitleColor),\n    templateName: new ValueReader([\"string\"], true)\n  }, false), false, null, true);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash,\n      sourceHash: {}\n    },\n        maximumId = removeLoopsTask.getMaximumId(),\n        index,\n        len,\n        annotation;\n    _data.annotations = _dataTemplate.read(_data.annotations, splitAnnotationsOptionTask.getAnnotations(AnnotationType.Label), \"annotations\", context);\n    _data.configs = {};\n    /* here we assign unique id to every annotation used in layout\n      and populate configs hash mapping id to source annotation\n      these source items used as context objects in rendering cycle\n    */\n\n    var sourceItems = context.sourceHash.annotations;\n\n    for (index = 0, len = _data.annotations.length; index < len; index += 1) {\n      annotation = _data.annotations[index];\n      maximumId += 1;\n      annotation.id = maximumId;\n      _data.configs[annotation.id] = sourceItems[index];\n    }\n\n    _data.maximumId = maximumId;\n    return context.isChanged;\n  }\n\n  function getAnnotations() {\n    return _data.annotations;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  function getConfig(itemId) {\n    return _data.configs[itemId];\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations,\n    getMaximumId: getMaximumId,\n    getConfig: getConfig\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/options/annotations/LabelAnnotationOptionTask.js"],"names":["ArrayReader","ValueReader","ObjectReader","EnumerationReader","ZOrderType","AnnotationType","LabelAnnotationOptionTask","splitAnnotationsOptionTask","removeLoopsTask","defaultLabelAnnotationConfig","_data","annotations","configs","maximumId","_hash","_dataTemplate","zOrderType","fromItem","toItems","title","itemTitleColor","templateName","process","context","isChanged","hash","sourceHash","getMaximumId","index","len","annotation","read","getAnnotations","Label","sourceItems","length","id","getConfig","itemId"],"mappings":"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","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport ObjectReader from '../../../readers/ObjectReader';\nimport EnumerationReader from '../../../readers/EnumerationReader';\nimport {ZOrderType, AnnotationType} from '../../../enums';\n\nexport default function LabelAnnotationOptionTask(splitAnnotationsOptionTask, removeLoopsTask, defaultLabelAnnotationConfig) {\n  var _data = {\n    annotations: [],\n    configs: {},\n    maximumId: null\n  },\n    _hash = {};\n\n  var _dataTemplate = new ArrayReader(\n    new ObjectReader({\n      zOrderType: new EnumerationReader(ZOrderType, false, defaultLabelAnnotationConfig.zOrderType),\n      fromItem: new ValueReader([\"string\", \"number\"], true),\n      toItems: new ArrayReader(\n        new ValueReader([\"string\", \"number\"], true),\n        true\n      ),\n      title: new ValueReader([\"string\"], true),\n      itemTitleColor: new ValueReader([\"string\"], false, defaultLabelAnnotationConfig.itemTitleColor),\n      templateName: new ValueReader([\"string\"], true)\n    },\n      false\n    ),\n    false,\n    null,\n    true\n  );\n\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash,\n      sourceHash: {}\n    },\n      maximumId = removeLoopsTask.getMaximumId(),\n      index, len, annotation;\n\n    _data.annotations = _dataTemplate.read(_data.annotations, splitAnnotationsOptionTask.getAnnotations(AnnotationType.Label), \"annotations\", context);\n    _data.configs = {};\n\n    /* here we assign unique id to every annotation used in layout\n      and populate configs hash mapping id to source annotation\n      these source items used as context objects in rendering cycle\n    */\n    var sourceItems = context.sourceHash.annotations;\n    for (index = 0, len = _data.annotations.length; index < len; index += 1) {\n      annotation = _data.annotations[index];\n      maximumId += 1;\n      annotation.id = maximumId;\n\n      _data.configs[annotation.id] = sourceItems[index];\n    }\n\n    _data.maximumId = maximumId;\n\n    return context.isChanged;\n  }\n\n  function getAnnotations() {\n    return _data.annotations;\n  }\n\n  function getMaximumId() {\n    return _data.maximumId;\n  }\n\n  function getConfig(itemId) {\n    return _data.configs[itemId];\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations,\n    getMaximumId: getMaximumId,\n    getConfig: getConfig\n  };\n};"]},"metadata":{},"sourceType":"module"}