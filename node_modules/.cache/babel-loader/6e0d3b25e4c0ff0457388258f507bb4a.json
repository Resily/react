{"ast":null,"code":"import { LineType, PlacementType } from '../../enums';\nexport default function LevelBackgroundTemplate(options, levelAnnotationConfig) {\n  function template() {\n    return {};\n  }\n\n  function getHashCode() {\n    return 0;\n  }\n\n  function render(doc, position, data) {\n    var annotationConfig = data.context;\n    var opacity = annotationConfig.opacity,\n        borderColor = annotationConfig.borderColor,\n        fillColor = annotationConfig.fillColor,\n        borderWidth = annotationConfig.lineWidth,\n        lineType = annotationConfig.lineType;\n    doc.save();\n    /* item border */\n\n    doc.rect(position.x, position.y, position.width, position.height, 0).fillColor(fillColor, opacity).fill();\n    doc.lineJoin('round');\n    position.loopEdges(function (vector, placementType) {\n      var lineWidth = 0;\n\n      switch (placementType) {\n        case PlacementType.Top:\n          lineWidth = borderWidth.top;\n          break;\n\n        case PlacementType.Right:\n          lineWidth = borderWidth.right;\n          break;\n\n        case PlacementType.Bottom:\n          lineWidth = borderWidth.bottom;\n          break;\n\n        case PlacementType.Left:\n          lineWidth = borderWidth.left;\n          break;\n      }\n\n      if (lineWidth > 0) {\n        if (lineType != null) {\n          var step = Math.round(lineWidth) || 1;\n\n          switch (lineType) {\n            case LineType.Solid:\n              break;\n\n            case LineType.Dotted:\n              doc.dash(step, step * 2);\n              break;\n\n            case LineType.Dashed:\n              doc.dash(step * 5, step * 3);\n              break;\n          }\n        }\n\n        doc.moveTo(vector.from.x, vector.from.y).lineTo(vector.to.x, vector.to.y).lineWidth(lineWidth).strokeColor(borderColor).stroke();\n      }\n    });\n    doc.restore();\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/templates/pdf/LevelBackgroundTemplate.js"],"names":["LineType","PlacementType","LevelBackgroundTemplate","options","levelAnnotationConfig","template","getHashCode","render","doc","position","data","annotationConfig","context","opacity","borderColor","fillColor","borderWidth","lineWidth","lineType","save","rect","x","y","width","height","fill","lineJoin","loopEdges","vector","placementType","Top","top","Right","right","Bottom","bottom","Left","left","step","Math","round","Solid","Dotted","dash","Dashed","moveTo","from","lineTo","to","strokeColor","stroke","restore"],"mappings":"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","sourcesContent":["import { LineType, PlacementType } from '../../enums';\n\nexport default function LevelBackgroundTemplate(options, levelAnnotationConfig) {\n  function template() {\n    return {};\n  }\n\n  function getHashCode() {\n    return 0;\n  }\n\n  function render(doc, position, data) {\n    var annotationConfig = data.context;\n    var {\n      opacity,\n      borderColor,\n      fillColor,\n      lineWidth: borderWidth,\n      lineType\n    } = annotationConfig;\n\n    doc.save();\n\n    /* item border */\n    doc.rect(position.x, position.y, position.width, position.height, 0)\n      .fillColor(fillColor, opacity)\n      .fill();\n\n    doc.lineJoin('round');\n\n    position.loopEdges(function(vector, placementType) {\n      var lineWidth = 0;\n      switch(placementType) {\n        case PlacementType.Top:\n          lineWidth = borderWidth.top;\n          break;\n        case PlacementType.Right:\n          lineWidth = borderWidth.right;\n          break;\n        case PlacementType.Bottom:\n          lineWidth = borderWidth.bottom;\n          break;\n        case PlacementType.Left:\n          lineWidth = borderWidth.left;\n          break;\n      }\n      if(lineWidth > 0) {\n        if (lineType != null) {\n          var step = Math.round(lineWidth) || 1;\n          switch (lineType) {\n            case LineType.Solid:\n              break;\n            case LineType.Dotted:\n              doc.dash(step, step * 2);\n              break;\n            case LineType.Dashed:\n              doc.dash(step * 5, step * 3);\n              break;\n          }\n        }\n        doc.moveTo(vector.from.x, vector.from.y)\n          .lineTo(vector.to.x, vector.to.y)\n          .lineWidth(lineWidth)\n          .strokeColor(borderColor)\n          .stroke();\n      }\n    });\n\n    doc.restore();\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n};"]},"metadata":{},"sourceType":"module"}