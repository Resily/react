{"ast":null,"code":"import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport ObjectReader from '../../../readers/ObjectReader';\nimport EnumerationReader from '../../../readers/EnumerationReader';\nimport { ConnectorPlacementType, ShapeType, ZOrderType, ConnectorLabelPlacementType, AnnotationType, LineType } from '../../../enums';\nexport default function ConnectorAnnotationOptionTask(splitAnnotationsOptionTask, defaultConnectorAnnotationConfig, zOrderType) {\n  var _annotations = [],\n      _hash = {};\n\n  var _dataTemplate = new ArrayReader(new ObjectReader({\n    zOrderType: new EnumerationReader(ZOrderType, false, defaultConnectorAnnotationConfig.zOrderType),\n    fromItem: new ValueReader([\"string\", \"number\"], true),\n    toItem: new ValueReader([\"string\", \"number\"], true),\n    connectorShapeType: new EnumerationReader(ShapeType, false, defaultConnectorAnnotationConfig.connectorShapeType),\n    connectorPlacementType: new EnumerationReader(ConnectorPlacementType, false, defaultConnectorAnnotationConfig.connectorPlacementType),\n    labelPlacementType: new EnumerationReader(ConnectorLabelPlacementType, false, defaultConnectorAnnotationConfig.labelPlacementType),\n    offset: new ObjectReader({\n      left: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.left),\n      top: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.top),\n      right: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.right),\n      bottom: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.bottom)\n    }, false, defaultConnectorAnnotationConfig.offset),\n    lineWidth: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.lineWidth),\n    color: new ValueReader([\"string\"], false, defaultConnectorAnnotationConfig.color),\n    lineType: new EnumerationReader(LineType, false, defaultConnectorAnnotationConfig.lineType),\n    selectItems: new ValueReader([\"boolean\"], false, defaultConnectorAnnotationConfig.selectItems),\n    label: new ValueReader([\"string\", \"object\"], false, defaultConnectorAnnotationConfig.label),\n    labelSize: new ObjectReader({\n      width: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.labelSize.width),\n      height: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.labelSize.height)\n    }, false, defaultConnectorAnnotationConfig.labelSize)\n  }), false);\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n    _annotations = _dataTemplate.read(_annotations, splitAnnotationsOptionTask.getAnnotations(AnnotationType.Connector, zOrderType), \"annotations\", context);\n    return context.isChanged;\n  }\n\n  function getAnnotations() {\n    return _annotations;\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/options/annotations/ConnectorAnnotationOptionTask.js"],"names":["ArrayReader","ValueReader","ObjectReader","EnumerationReader","ConnectorPlacementType","ShapeType","ZOrderType","ConnectorLabelPlacementType","AnnotationType","LineType","ConnectorAnnotationOptionTask","splitAnnotationsOptionTask","defaultConnectorAnnotationConfig","zOrderType","_annotations","_hash","_dataTemplate","fromItem","toItem","connectorShapeType","connectorPlacementType","labelPlacementType","offset","left","top","right","bottom","lineWidth","color","lineType","selectItems","label","labelSize","width","height","process","context","isChanged","hash","read","getAnnotations","Connector"],"mappings":"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","sourcesContent":["import ArrayReader from '../../../readers/ArrayReader';\nimport ValueReader from '../../../readers/ValueReader';\nimport ObjectReader from '../../../readers/ObjectReader';\nimport EnumerationReader from '../../../readers/EnumerationReader';\nimport {ConnectorPlacementType, ShapeType, ZOrderType, ConnectorLabelPlacementType, AnnotationType, LineType} from '../../../enums';\n\nexport default function ConnectorAnnotationOptionTask(splitAnnotationsOptionTask, defaultConnectorAnnotationConfig, zOrderType) {\n  var _annotations = [],\n    _hash = {};\n\n  var _dataTemplate = new ArrayReader(\n    new ObjectReader({\n      zOrderType: new EnumerationReader(ZOrderType, false, defaultConnectorAnnotationConfig.zOrderType),\n      fromItem: new ValueReader([\"string\", \"number\"], true),\n      toItem: new ValueReader([\"string\", \"number\"], true),\n      connectorShapeType: new EnumerationReader(ShapeType, false, defaultConnectorAnnotationConfig.connectorShapeType),\n      connectorPlacementType: new EnumerationReader(ConnectorPlacementType, false, defaultConnectorAnnotationConfig.connectorPlacementType),\n      labelPlacementType: new EnumerationReader(ConnectorLabelPlacementType, false, defaultConnectorAnnotationConfig.labelPlacementType),\n      offset: new ObjectReader({\n        left: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.left),\n        top: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.top),\n        right: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.right),\n        bottom: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.offset.bottom)\n      }, false, defaultConnectorAnnotationConfig.offset),\n      lineWidth: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.lineWidth),\n      color: new ValueReader([\"string\"], false, defaultConnectorAnnotationConfig.color),\n      lineType: new EnumerationReader(LineType, false, defaultConnectorAnnotationConfig.lineType),\n      selectItems: new ValueReader([\"boolean\"], false, defaultConnectorAnnotationConfig.selectItems),\n      label: new ValueReader([\"string\", \"object\"], false, defaultConnectorAnnotationConfig.label),\n      labelSize: new ObjectReader({\n        width: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.labelSize.width),\n        height: new ValueReader([\"number\"], false, defaultConnectorAnnotationConfig.labelSize.height)\n      }, false, defaultConnectorAnnotationConfig.labelSize)\n    }),\n    false\n  );\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n\n    _annotations = _dataTemplate.read(_annotations, splitAnnotationsOptionTask.getAnnotations(AnnotationType.Connector, zOrderType), \"annotations\", context);\n\n    return context.isChanged;\n  }\n\n  function getAnnotations() {\n    return _annotations;\n  }\n\n  return {\n    process: process,\n    getAnnotations: getAnnotations\n  };\n};"]},"metadata":{},"sourceType":"module"}