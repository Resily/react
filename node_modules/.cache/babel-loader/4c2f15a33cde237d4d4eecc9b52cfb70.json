{"ast":null,"code":"import ObjectReader from '../../readers/ObjectReader';\nimport ValueReader from '../../readers/ValueReader';\nimport Thickness from '../../graphics/structs/Thickness';\nimport Size from '../../graphics/structs/Size';\nexport default function FrameSizeTask(frameOptionTask, readTemplatesTask, scaleOptionTask) {\n  var _data = {},\n      _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    median: new ObjectReader({\n      left: new ValueReader([\"number\"], false, 0),\n      top: new ValueReader([\"number\"], false, 0),\n      right: new ValueReader([\"number\"], false, 0),\n      bottom: new ValueReader([\"number\"], false, 0)\n    }, false, new Thickness(0, 0, 0, 0)),\n    thickness: new ObjectReader({\n      left: new ValueReader([\"number\"], false, 0),\n      top: new ValueReader([\"number\"], false, 0),\n      right: new ValueReader([\"number\"], false, 0),\n      bottom: new ValueReader([\"number\"], false, 0)\n    }, false, new Thickness(0, 0, 0, 0))\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n    _data = _dataTemplate.read(_data, getFrameSize(), \"options\", context);\n    return context.isChanged;\n  }\n\n  function getFrameSize() {\n    var frameOptions = frameOptionTask.getOptions(),\n        showFrame = frameOptions.showFrame,\n        frameInnerPadding = frameOptions.frameInnerPadding,\n        frameOuterPadding = frameOptions.frameOuterPadding,\n        scale = scaleOptionTask.getOptions().scale,\n        median = new Thickness(0, 0, 0, 0),\n        thickness = new Thickness(0, 0, 0, 0);\n\n    if (showFrame) {\n      var maximumMarkerSize = new Size(0, 0),\n          maximumMarkerPadding = new Thickness(0, 0, 0, 0),\n          index,\n          len,\n          templates = readTemplatesTask.getItemTemplates();\n\n      for (index = 0, len = templates.length; index < len; index += 1) {\n        var template = templates[index];\n        var templateConfig = template.templateConfig,\n            cursorPadding = new Thickness(templateConfig.cursorPadding),\n            highlightPadding = new Thickness(templateConfig.highlightPadding);\n        cursorPadding.addThickness(templateConfig.cursorBorderWidth);\n        highlightPadding.addThickness(templateConfig.highlightBorderWidth);\n        maximumMarkerSize.maxSize(templateConfig.minimizedItemSize);\n        maximumMarkerPadding.maxThickness(templateConfig.cursorPadding);\n        maximumMarkerPadding.maxThickness(templateConfig.highlightPadding);\n      }\n\n      median = new Thickness(Math.ceil(maximumMarkerSize.width / 2.0) + maximumMarkerPadding.right, Math.ceil(maximumMarkerSize.height / 2.0) + maximumMarkerPadding.bottom, Math.ceil(maximumMarkerSize.width / 2.0) + maximumMarkerPadding.left, Math.ceil(maximumMarkerSize.height / 2.0) + maximumMarkerPadding.top);\n      median.addThickness(frameInnerPadding);\n      median.scale(scale);\n      thickness = new Thickness(maximumMarkerSize.width + maximumMarkerPadding.left + maximumMarkerPadding.right, maximumMarkerSize.height + maximumMarkerPadding.top + maximumMarkerPadding.bottom, maximumMarkerSize.width + maximumMarkerPadding.left + maximumMarkerPadding.right, maximumMarkerSize.height + maximumMarkerPadding.top + maximumMarkerPadding.bottom);\n      thickness.addThickness(frameInnerPadding);\n      thickness.addThickness(frameOuterPadding);\n      thickness.scale(scale);\n    }\n\n    return {\n      median: median,\n      thickness: thickness\n    };\n  }\n\n  function getMedian() {\n    return _data.median;\n  }\n\n  function getThickness() {\n    return _data.thickness;\n  }\n\n  return {\n    process: process,\n    getMedian: getMedian,\n    getThickness: getThickness\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/layout/FrameSizeTask.js"],"names":["ObjectReader","ValueReader","Thickness","Size","FrameSizeTask","frameOptionTask","readTemplatesTask","scaleOptionTask","_data","_hash","_dataTemplate","median","left","top","right","bottom","thickness","process","context","isChanged","hash","read","getFrameSize","frameOptions","getOptions","showFrame","frameInnerPadding","frameOuterPadding","scale","maximumMarkerSize","maximumMarkerPadding","index","len","templates","getItemTemplates","length","template","templateConfig","cursorPadding","highlightPadding","addThickness","cursorBorderWidth","highlightBorderWidth","maxSize","minimizedItemSize","maxThickness","Math","ceil","width","height","getMedian","getThickness"],"mappings":"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","sourcesContent":["import ObjectReader from '../../readers/ObjectReader';\nimport ValueReader from '../../readers/ValueReader';\nimport Thickness from '../../graphics/structs/Thickness';\nimport Size from '../../graphics/structs/Size';\n\nexport default function FrameSizeTask(frameOptionTask, readTemplatesTask, scaleOptionTask) {\n  var _data = {},\n    _hash = {};\n\n  var _dataTemplate = new ObjectReader({\n    median: new ObjectReader({\n      left: new ValueReader([\"number\"], false, 0),\n      top: new ValueReader([\"number\"], false, 0),\n      right: new ValueReader([\"number\"], false, 0),\n      bottom: new ValueReader([\"number\"], false, 0)\n    }, false, new Thickness(0, 0, 0, 0)),\n    thickness: new ObjectReader({\n      left: new ValueReader([\"number\"], false, 0),\n      top: new ValueReader([\"number\"], false, 0),\n      right: new ValueReader([\"number\"], false, 0),\n      bottom: new ValueReader([\"number\"], false, 0)\n    }, false, new Thickness(0, 0, 0, 0))\n  });\n\n  function process() {\n    var context = {\n      isChanged: false,\n      hash: _hash\n    };\n\n    _data = _dataTemplate.read(_data, getFrameSize(), \"options\", context);\n\n    return context.isChanged;\n  }\n\n  function getFrameSize() {\n    var frameOptions = frameOptionTask.getOptions(),\n      showFrame = frameOptions.showFrame,\n      frameInnerPadding = frameOptions.frameInnerPadding,\n      frameOuterPadding = frameOptions.frameOuterPadding,\n      scale = scaleOptionTask.getOptions().scale,\n      median = new Thickness(0, 0, 0, 0),\n      thickness = new Thickness(0, 0, 0, 0);\n\n    if(showFrame) {\n      var maximumMarkerSize = new Size(0, 0),\n          maximumMarkerPadding = new Thickness(0, 0, 0, 0),\n          index, len,\n          templates = readTemplatesTask.getItemTemplates();\n\n      for (index = 0, len = templates.length; index < len; index += 1) {\n        var template = templates[index];\n        var templateConfig = template.templateConfig,\n            cursorPadding = new Thickness(templateConfig.cursorPadding),\n            highlightPadding = new Thickness(templateConfig.highlightPadding);\n        \n        cursorPadding.addThickness(templateConfig.cursorBorderWidth);\n        highlightPadding.addThickness(templateConfig.highlightBorderWidth);\n\n        maximumMarkerSize.maxSize(templateConfig.minimizedItemSize);\n        maximumMarkerPadding.maxThickness(templateConfig.cursorPadding);\n        maximumMarkerPadding.maxThickness(templateConfig.highlightPadding);\n      }\n\n      median = new Thickness(Math.ceil(maximumMarkerSize.width / 2.0) + maximumMarkerPadding.right, \n        Math.ceil(maximumMarkerSize.height / 2.0) + maximumMarkerPadding.bottom, \n        Math.ceil(maximumMarkerSize.width / 2.0) + maximumMarkerPadding.left, \n        Math.ceil(maximumMarkerSize.height / 2.0) + maximumMarkerPadding.top\n      );\n      median.addThickness(frameInnerPadding);\n      median.scale(scale);\n      thickness = new Thickness(maximumMarkerSize.width + maximumMarkerPadding.left + maximumMarkerPadding.right, \n        maximumMarkerSize.height + maximumMarkerPadding.top + maximumMarkerPadding.bottom, \n        maximumMarkerSize.width + maximumMarkerPadding.left + maximumMarkerPadding.right, \n        maximumMarkerSize.height + maximumMarkerPadding.top + maximumMarkerPadding.bottom\n      );\n      thickness.addThickness(frameInnerPadding);\n      thickness.addThickness(frameOuterPadding);\n      thickness.scale(scale);\n    }\n    return { median: median, thickness: thickness };\n  }\n\n  function getMedian() {\n    return _data.median;\n  }\n\n  function getThickness() {\n    return _data.thickness;\n  }\n\n  return {\n    process: process,\n    getMedian: getMedian,\n    getThickness: getThickness\n  };\n};"]},"metadata":{},"sourceType":"module"}