{"ast":null,"code":"import { getHashCode as getCommonHashCode } from '../../common';\nimport { highestContrast } from '../../common/colors';\nimport { getElementsByName } from '../../graphics/dom';\nimport JsonML from '../../common/jsonml-html';\nimport { Colors } from '../../enums';\nexport default function UserTemplate(options, content, onRender) {\n  var _hashCode = getCommonHashCode(JSON.stringify(content));\n\n  function template() {\n    return content;\n  }\n\n  function getHashCode() {\n    return _hashCode;\n  }\n\n  function render(event, data) {\n    if (onRender != null) {\n      onRender(event, data);\n    } else {\n      var itemConfig = data.context,\n          itemTitleColor = itemConfig.itemTitleColor != null ? itemConfig.itemTitleColor : Colors.RoyalBlue,\n          color = highestContrast(itemTitleColor, options.itemTitleSecondFontColor, options.itemTitleFirstFontColor);\n      getElementsByName(this, data.element, \"photo\", function (node) {\n        node.src = itemConfig.image;\n        node.alt = itemConfig.title;\n      });\n      getElementsByName(this, data.element, \"titleBackground\", function (node) {\n        JsonML.applyStyles(node, {\n          \"background\": itemTitleColor\n        });\n      });\n      getElementsByName(this, data.element, \"title\", function (node) {\n        JsonML.applyStyles(node, {\n          \"color\": color\n        });\n        node.textContent = itemConfig.title;\n      });\n      getElementsByName(this, data.element, \"description\", function (node) {\n        node.textContent = itemConfig.description;\n      });\n    }\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/templates/html/UserTemplate.js"],"names":["getHashCode","getCommonHashCode","highestContrast","getElementsByName","JsonML","Colors","UserTemplate","options","content","onRender","_hashCode","JSON","stringify","template","render","event","data","itemConfig","context","itemTitleColor","RoyalBlue","color","itemTitleSecondFontColor","itemTitleFirstFontColor","element","node","src","image","alt","title","applyStyles","textContent","description"],"mappings":"AAAA,SAASA,WAAW,IAAIC,iBAAxB,QAAiD,cAAjD;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkD;AAC/D,MAAIC,SAAS,GAAGT,iBAAiB,CAACU,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAD,CAAjC;;AAEA,WAASK,QAAT,GAAoB;AAClB,WAAOL,OAAP;AACD;;AAED,WAASR,WAAT,GAAuB;AACrB,WAAOU,SAAP;AACD;;AAED,WAASI,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6B;AAC3B,QAAIP,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,MAAAA,QAAQ,CAACM,KAAD,EAAQC,IAAR,CAAR;AACD,KAFD,MAEO;AACL,UAAIC,UAAU,GAAGD,IAAI,CAACE,OAAtB;AAAA,UACEC,cAAc,GAAGF,UAAU,CAACE,cAAX,IAA6B,IAA7B,GAAoCF,UAAU,CAACE,cAA/C,GAAgEd,MAAM,CAACe,SAD1F;AAAA,UAEEC,KAAK,GAAGnB,eAAe,CAACiB,cAAD,EAAiBZ,OAAO,CAACe,wBAAzB,EAAmDf,OAAO,CAACgB,uBAA3D,CAFzB;AAIApB,MAAAA,iBAAiB,CAAC,IAAD,EAAOa,IAAI,CAACQ,OAAZ,EAAqB,OAArB,EAA8B,UAAUC,IAAV,EAAgB;AAC7DA,QAAAA,IAAI,CAACC,GAAL,GAAWT,UAAU,CAACU,KAAtB;AACAF,QAAAA,IAAI,CAACG,GAAL,GAAWX,UAAU,CAACY,KAAtB;AACD,OAHgB,CAAjB;AAKA1B,MAAAA,iBAAiB,CAAC,IAAD,EAAOa,IAAI,CAACQ,OAAZ,EAAqB,iBAArB,EAAwC,UAAUC,IAAV,EAAgB;AACvErB,QAAAA,MAAM,CAAC0B,WAAP,CAAmBL,IAAnB,EAAyB;AACvB,wBAAcN;AADS,SAAzB;AAGD,OAJgB,CAAjB;AAMAhB,MAAAA,iBAAiB,CAAC,IAAD,EAAOa,IAAI,CAACQ,OAAZ,EAAqB,OAArB,EAA8B,UAAUC,IAAV,EAAgB;AAC7DrB,QAAAA,MAAM,CAAC0B,WAAP,CAAmBL,IAAnB,EAAyB;AACvB,mBAASJ;AADc,SAAzB;AAGAI,QAAAA,IAAI,CAACM,WAAL,GAAmBd,UAAU,CAACY,KAA9B;AACD,OALgB,CAAjB;AAOA1B,MAAAA,iBAAiB,CAAC,IAAD,EAAOa,IAAI,CAACQ,OAAZ,EAAqB,aAArB,EAAoC,UAAUC,IAAV,EAAgB;AACnEA,QAAAA,IAAI,CAACM,WAAL,GAAmBd,UAAU,CAACe,WAA9B;AACD,OAFgB,CAAjB;AAGD;AACF;;AAED,SAAO;AACLnB,IAAAA,QAAQ,EAAEA,QADL;AAELb,IAAAA,WAAW,EAAEA,WAFR;AAGLc,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD;AAAA","sourcesContent":["import { getHashCode as getCommonHashCode } from '../../common';\nimport { highestContrast } from '../../common/colors';\nimport { getElementsByName } from '../../graphics/dom';\nimport JsonML from '../../common/jsonml-html';\nimport { Colors } from '../../enums';\n\nexport default function UserTemplate(options, content, onRender) {\n  var _hashCode = getCommonHashCode(JSON.stringify(content));\n\n  function template() {\n    return content;\n  }\n\n  function getHashCode() {\n    return _hashCode;\n  }\n\n  function render(event, data) {\n    if (onRender != null) {\n      onRender(event, data);\n    } else {\n      var itemConfig = data.context,\n        itemTitleColor = itemConfig.itemTitleColor != null ? itemConfig.itemTitleColor : Colors.RoyalBlue,\n        color = highestContrast(itemTitleColor, options.itemTitleSecondFontColor, options.itemTitleFirstFontColor);\n\n      getElementsByName(this, data.element, \"photo\", function (node) {\n        node.src = itemConfig.image;\n        node.alt = itemConfig.title;\n      });\n\n      getElementsByName(this, data.element, \"titleBackground\", function (node) {\n        JsonML.applyStyles(node, {\n          \"background\": itemTitleColor\n        });\n      });\n\n      getElementsByName(this, data.element, \"title\", function (node) {\n        JsonML.applyStyles(node, {\n          \"color\": color\n        });\n        node.textContent = itemConfig.title;\n      });\n\n      getElementsByName(this, data.element, \"description\", function (node) {\n        node.textContent = itemConfig.description;\n      });\n    }\n  }\n\n  return {\n    template: template,\n    getHashCode: getHashCode,\n    render: render\n  };\n};"]},"metadata":{},"sourceType":"module"}