{"ast":null,"code":"import BaseShape from './BaseShape';\nimport Callout from './Callout';\nimport Marker from './Marker';\nimport Size from '../structs/Size';\nimport Rect from '../structs/Rect';\nimport Thickness from '../structs/Thickness';\nimport PaletteItem from '../structs/PaletteItem';\nimport Transform from '../Transform';\nimport PolylinesBuffer from '../structs/PolylinesBuffer';\nimport { LineType, OrientationType, PlacementType, ShapeType } from '../../enums';\nexport default function Shape(graphics) {\n  this.m_graphics = graphics;\n  this.transform = null;\n  this.orientationType = OrientationType.Top;\n  this.panelSize = null;\n  this.shapeType = ShapeType.Rectangle;\n  this.offset = new Thickness(0, 0, 0, 0);\n  this.lineWidth = 1;\n  this.labelOffset = 4;\n  this.cornerRadius = \"10%\";\n  this.opacity = 1;\n  this.fillColor = null;\n  this.labelSize = new Size(60, 30);\n  this.lineType = LineType.Solid;\n  this.borderColor = null;\n  this.hasLabel = false;\n  this.labelTemplate = null;\n  this.labelPlacement = PlacementType.Auto;\n}\n;\nShape.prototype = new BaseShape();\n\nShape.prototype.draw = function (position, uiHash) {\n  var labelPlacement, calloutShape, linePaletteItem, buffer, marker;\n  position = new Rect(position).offset(this.offset);\n  this.transform = new Transform();\n  this.transform.size = this.panelSize;\n  this.transform.setOrientation(this.orientationType);\n  /* label size */\n\n  if (this.hasLabel) {\n    labelPlacement = this._getLabelPosition(position.x, position.y, position.width, position.height, this.labelSize.width, this.labelSize.height, this.labelOffset, this.labelPlacement);\n  }\n\n  switch (this.shapeType) {\n    case ShapeType.Rectangle:\n      calloutShape = new Callout(this.m_graphics);\n      calloutShape.cornerRadius = this.cornerRadius;\n      calloutShape.opacity = this.opacity;\n      calloutShape.lineWidth = this.lineWidth;\n      calloutShape.lineType = this.lineType;\n      calloutShape.borderColor = this.borderColor;\n      calloutShape.fillColor = this.fillColor;\n      calloutShape.draw(null, position);\n      break;\n\n    default:\n      linePaletteItem = new PaletteItem({\n        lineColor: this.borderColor,\n        lineWidth: this.lineWidth,\n        lineType: this.lineType,\n        fillColor: this.fillColor,\n        opacity: this.opacity\n      });\n      /* from rectangle */\n\n      this.transform.transformRect(position.x, position.y, position.width, position.height, false, this, function (x, y, width, height) {\n        position = new Rect(x, y, width, height);\n      });\n      marker = new Marker();\n      buffer = new PolylinesBuffer();\n      marker.draw(buffer, this.shapeType, position, linePaletteItem);\n      buffer.transform(this.transform, true);\n      this.m_graphics.polylinesBuffer(buffer);\n      break;\n  }\n\n  if (this.hasLabel) {\n    this.m_graphics.template(labelPlacement.x, labelPlacement.y, 0, 0, 0, 0, labelPlacement.width, labelPlacement.height, this.labelTemplate.template(), this.labelTemplate.getHashCode(), this.labelTemplate.render, uiHash, null);\n  }\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/graphics/shapes/Shape.js"],"names":["BaseShape","Callout","Marker","Size","Rect","Thickness","PaletteItem","Transform","PolylinesBuffer","LineType","OrientationType","PlacementType","ShapeType","Shape","graphics","m_graphics","transform","orientationType","Top","panelSize","shapeType","Rectangle","offset","lineWidth","labelOffset","cornerRadius","opacity","fillColor","labelSize","lineType","Solid","borderColor","hasLabel","labelTemplate","labelPlacement","Auto","prototype","draw","position","uiHash","calloutShape","linePaletteItem","buffer","marker","size","setOrientation","_getLabelPosition","x","y","width","height","lineColor","transformRect","polylinesBuffer","template","getHashCode","render"],"mappings":"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","sourcesContent":["import BaseShape from './BaseShape';\nimport Callout from './Callout';\nimport Marker from './Marker';\nimport Size from '../structs/Size';\nimport Rect from '../structs/Rect';\nimport Thickness from '../structs/Thickness';\nimport PaletteItem from '../structs/PaletteItem';\nimport Transform from '../Transform';\nimport PolylinesBuffer from '../structs/PolylinesBuffer';\nimport { LineType, OrientationType, PlacementType, ShapeType } from '../../enums';\n\nexport default function Shape(graphics) {\n  this.m_graphics = graphics;\n  this.transform = null;\n\n  this.orientationType = OrientationType.Top;\n  this.panelSize = null;\n  this.shapeType = ShapeType.Rectangle;\n  this.offset = new Thickness(0, 0, 0, 0);\n  this.lineWidth = 1;\n  this.labelOffset = 4;\n  this.cornerRadius = \"10%\";\n  this.opacity = 1;\n  this.fillColor = null;\n  this.labelSize = new Size(60, 30);\n  this.lineType = LineType.Solid;\n  this.borderColor = null;\n  this.hasLabel = false;\n  this.labelTemplate = null;\n  this.labelPlacement = PlacementType.Auto;\n};\n\nShape.prototype = new BaseShape();\n\nShape.prototype.draw = function (position, uiHash) {\n  var labelPlacement,\n    calloutShape,\n    linePaletteItem,\n    buffer,\n    marker;\n\n  position = new Rect(position).offset(this.offset);\n\n  this.transform = new Transform();\n  this.transform.size = this.panelSize;\n  this.transform.setOrientation(this.orientationType);\n\n  /* label size */\n  if (this.hasLabel) {\n    labelPlacement = this._getLabelPosition(position.x, position.y, position.width, position.height, this.labelSize.width, this.labelSize.height, this.labelOffset, this.labelPlacement);\n  }\n\n\n  switch (this.shapeType) {\n    case ShapeType.Rectangle:\n      calloutShape = new Callout(this.m_graphics);\n      calloutShape.cornerRadius = this.cornerRadius;\n      calloutShape.opacity = this.opacity;\n      calloutShape.lineWidth = this.lineWidth;\n      calloutShape.lineType = this.lineType;\n      calloutShape.borderColor = this.borderColor;\n      calloutShape.fillColor = this.fillColor;\n      calloutShape.draw(null, position);\n      break;\n    default:\n      linePaletteItem = new PaletteItem({\n        lineColor: this.borderColor,\n        lineWidth: this.lineWidth,\n        lineType: this.lineType,\n        fillColor: this.fillColor,\n        opacity: this.opacity\n      });\n\n      /* from rectangle */\n      this.transform.transformRect(position.x, position.y, position.width, position.height, false,\n        this, function (x, y, width, height) {\n          position = new Rect(x, y, width, height);\n        });\n\n\n      marker = new Marker();\n      buffer = new PolylinesBuffer();\n      marker.draw(buffer, this.shapeType, position, linePaletteItem);\n      buffer.transform(this.transform, true);\n\n      this.m_graphics.polylinesBuffer(buffer);\n      break;\n  }\n\n  if (this.hasLabel) {\n    this.m_graphics.template(\n      labelPlacement.x,\n      labelPlacement.y,\n      0,\n      0,\n      0,\n      0,\n      labelPlacement.width,\n      labelPlacement.height,\n      this.labelTemplate.template(),\n      this.labelTemplate.getHashCode(),\n      this.labelTemplate.render,\n      uiHash,\n      null\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}