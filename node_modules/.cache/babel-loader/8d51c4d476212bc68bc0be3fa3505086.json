{"ast":null,"code":"import Size from './graphics/structs/Size';\nimport PdfGraphics from './graphics/PdfGraphics';\nimport { PageFitMode, Enabled } from './enums';\n/**\n * Creates PDFKit Family Diagram Plugin\n * @class BasePdfkitPlugin\n * \n * @param {object} options Family Diagram Configuration object\n * \n * @returns {BasePdfkitPlugin} Returns reference to PDFKit Plugin instance.\n */\n\nexport default function BasePdfkitPlugin(options, createTaskManager, templates) {\n  var _data = {\n    doc: null,\n    options: options,\n    tasks: null,\n    graphics: null,\n    controlSize: null\n  },\n      _debug = false;\n\n  function getOptions() {\n    return _data.options;\n  }\n\n  function getGraphics() {\n    return _data.graphics;\n  }\n\n  function setLayout(options) {\n    var graphics = _data.graphics,\n        frameMousePanelRect = options.frameMousePanelRect,\n        titlesMousePanelRect = options.titlesMousePanelRect,\n        scrollPanelRect = options.scrollPanelRect,\n        controlSize = options.controlSize;\n    graphics.position(\"frameplaceholder\", frameMousePanelRect.x, frameMousePanelRect.y, frameMousePanelRect.width, frameMousePanelRect.height);\n    graphics.position(\"titlesplaceholder\", titlesMousePanelRect.x, titlesMousePanelRect.y, titlesMousePanelRect.width, titlesMousePanelRect.height);\n    graphics.position(\"placeholder\", scrollPanelRect.x, scrollPanelRect.y, scrollPanelRect.width, scrollPanelRect.height);\n    _data.controlSize = controlSize;\n  }\n\n  function _disableNotAvailableFunctionality() {\n    /* disable functionality not available in PDF */\n    _data.options.scale = 1;\n    _data.options.showFrame = false;\n    _data.options.hasButtons = Enabled.False;\n    _data.options.pageFitMode = PageFitMode.AutoSize;\n    _data.options.autoSizeMinimum = new Size(0, 0);\n    _data.options.autoSizeMaximum = new Size(1000000, 1000000);\n  }\n  /**\n   * Calculates size of the diagram required to render all nodes without truncation.\n   * \n   * @param {object} doc PDFKit document\n   * @param {number} positionX Diagram placement X coordinate\n   * @param {number} positionY Diagram placement Y coordinate\n   * @returns {Size} Returns size of the diagram\n   */\n\n\n  function draw(doc, positionX, positionY) {\n    _data.doc = doc;\n    _data.tasks = createTaskManager(getOptions, getGraphics, setLayout, templates);\n    _data.graphics = new PdfGraphics(_data.doc);\n    _data.graphics.debug = _debug;\n\n    _disableNotAvailableFunctionality();\n\n    _data.doc.save();\n\n    _data.doc.translate(positionX, positionY);\n\n    _data.tasks.process('OptionsTask', null, _debug);\n\n    _data.graphics.clean();\n\n    _data.doc.restore();\n\n    return new Size(_data.controlSize);\n  }\n  /**\n   * Calculates size of the diagram required to render all nodes without truncation.\n   * \n   * @returns {Size} Returns size of the diagram\n   */\n\n\n  function getSize() {\n    _data.tasks = createTaskManager(getOptions, getGraphics, setLayout, templates);\n    _data.graphics = new PdfGraphics(_data.doc);\n    _data.graphics.debug = _debug;\n\n    _disableNotAvailableFunctionality();\n\n    _data.tasks.process('OptionsTask', 'ApplyLayoutChangesTask', _debug);\n\n    _data.graphics.clean();\n\n    return new Size(_data.controlSize);\n  }\n\n  return {\n    draw: draw,\n    getSize: getSize\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/BasePdfkitPlugin.js"],"names":["Size","PdfGraphics","PageFitMode","Enabled","BasePdfkitPlugin","options","createTaskManager","templates","_data","doc","tasks","graphics","controlSize","_debug","getOptions","getGraphics","setLayout","frameMousePanelRect","titlesMousePanelRect","scrollPanelRect","position","x","y","width","height","_disableNotAvailableFunctionality","scale","showFrame","hasButtons","False","pageFitMode","AutoSize","autoSizeMinimum","autoSizeMaximum","draw","positionX","positionY","debug","save","translate","process","clean","restore","getSize"],"mappings":"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","sourcesContent":["import Size from './graphics/structs/Size';\nimport PdfGraphics from './graphics/PdfGraphics';\nimport { PageFitMode, Enabled } from './enums';\n/**\n * Creates PDFKit Family Diagram Plugin\n * @class BasePdfkitPlugin\n * \n * @param {object} options Family Diagram Configuration object\n * \n * @returns {BasePdfkitPlugin} Returns reference to PDFKit Plugin instance.\n */\nexport default function BasePdfkitPlugin(options, createTaskManager, templates) {\n  var _data = {\n    doc: null,\n    options: options,\n    tasks: null,\n    graphics: null,\n    controlSize: null,\n  },\n    _debug = false;\n\n  function getOptions() {\n    return _data.options;\n  }\n\n  function getGraphics() {\n    return _data.graphics;\n  }\n\n  function setLayout(options) {\n    var { graphics } = _data,\n      { frameMousePanelRect, titlesMousePanelRect, scrollPanelRect, controlSize } = options;\n\n    graphics.position(\"frameplaceholder\", frameMousePanelRect.x, frameMousePanelRect.y, frameMousePanelRect.width, frameMousePanelRect.height );\n    graphics.position(\"titlesplaceholder\", titlesMousePanelRect.x, titlesMousePanelRect.y, titlesMousePanelRect.width, titlesMousePanelRect.height );\n    graphics.position(\"placeholder\", scrollPanelRect.x, scrollPanelRect.y, scrollPanelRect.width, scrollPanelRect.height);\n\n    _data.controlSize = controlSize;\n  }\n\n  function _disableNotAvailableFunctionality() {\n    /* disable functionality not available in PDF */\n    _data.options.scale = 1;\n    _data.options.showFrame = false;\n    _data.options.hasButtons = Enabled.False;\n    _data.options.pageFitMode = PageFitMode.AutoSize;\n    _data.options.autoSizeMinimum = new Size(0, 0);\n    _data.options.autoSizeMaximum = new Size(1000000, 1000000);\n  }\n\n  /**\n   * Calculates size of the diagram required to render all nodes without truncation.\n   * \n   * @param {object} doc PDFKit document\n   * @param {number} positionX Diagram placement X coordinate\n   * @param {number} positionY Diagram placement Y coordinate\n   * @returns {Size} Returns size of the diagram\n   */\n  function draw(doc, positionX, positionY) {\n    _data.doc = doc;\n\n    _data.tasks = createTaskManager(getOptions, getGraphics, setLayout, templates);\n    _data.graphics = new PdfGraphics(_data.doc);\n    _data.graphics.debug = _debug;\n\n    _disableNotAvailableFunctionality();\n\n    _data.doc.save();\n\n    _data.doc.translate(positionX, positionY);\n\n    _data.tasks.process('OptionsTask', null, _debug);\n    _data.graphics.clean();\n\n    _data.doc.restore();\n\n    return new Size(_data.controlSize);\n  }\n\n  /**\n   * Calculates size of the diagram required to render all nodes without truncation.\n   * \n   * @returns {Size} Returns size of the diagram\n   */\n  function getSize() {\n    _data.tasks = createTaskManager(getOptions, getGraphics, setLayout, templates);\n    _data.graphics = new PdfGraphics(_data.doc);\n    _data.graphics.debug = _debug;\n\n    _disableNotAvailableFunctionality();\n\n    _data.tasks.process('OptionsTask', 'ApplyLayoutChangesTask', _debug);\n    _data.graphics.clean();\n    \n    return new Size(_data.controlSize);\n  }\n\n  return {\n    draw: draw,\n    getSize: getSize\n  };\n};\n"]},"metadata":{},"sourceType":"module"}