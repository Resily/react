{"ast":null,"code":"import Size from '../../graphics/structs/Size';\nimport Thickness from '../../graphics/structs/Thickness';\nimport { PageFitMode } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Point from '../../graphics/structs/Point';\nexport default function ApplyLayoutChangesTask(getGraphics, setLayout, itemsSizesOptionTask, currentControlSizeTask, scaleOptionTask, alignDiagramTask, frameSizeTask, levelTitleSizeTask) {\n  var _data = {\n    viewportSize: null,\n    frameThickness: null,\n    framePlaceholderSize: null\n  };\n\n  function process() {\n    var graphics = getGraphics(),\n        _scaleOptionTask$getO = scaleOptionTask.getOptions(),\n        scale = _scaleOptionTask$getO.scale,\n        _itemsSizesOptionTask = itemsSizesOptionTask.getOptions(),\n        pageFitMode = _itemsSizesOptionTask.pageFitMode,\n        autoSizeMinimum = _itemsSizesOptionTask.autoSizeMinimum,\n        autoSizeMaximum = _itemsSizesOptionTask.autoSizeMaximum,\n        placeholderSize = alignDiagramTask.getContentSize(),\n        _currentControlSizeTa = currentControlSizeTask.getOptions(),\n        scrollPanelSize = _currentControlSizeTa.scrollPanelSize,\n        hasFrame = _currentControlSizeTa.hasFrame,\n        hasLevelTitles = _currentControlSizeTa.hasLevelTitles,\n        viewportSize = new Size(scrollPanelSize),\n        frameThickness = frameSizeTask.getThickness(),\n        titlesThickness = new Thickness(levelTitleSizeTask.getOptions().thickness),\n        autoSize = pageFitMode == PageFitMode.AutoSize;\n    /* scaled content size */\n\n\n    var mousePanelSize = new Size(placeholderSize);\n    mousePanelSize.scale(scale);\n\n    if (autoSize) {\n      /* resize element to fit placeholder if control is in auto size mode\n        25 it is reservation for scrollbars \n        minimum & maximum auto size regulate maximum and minimum diagram size\n        it is handy when it is needed to limit oversized diagram expansion\n        or diagram is empty or so tiny that it is not clear that it exists at all\n      */\n      viewportSize = new Size(mousePanelSize.width + 25, mousePanelSize.height + 25);\n      viewportSize.addThickness(frameThickness);\n\n      if (titlesThickness.isPositive()) {\n        viewportSize.addThickness(titlesThickness);\n      }\n\n      viewportSize.cropBySize(autoSizeMaximum);\n      viewportSize.maxSize(autoSizeMinimum); //ignore jslint\n      // disable frame if its square space is bigger than viewport\n\n      var framedViewportSize = new Size(viewportSize);\n      framedViewportSize.removeThickness(frameThickness);\n\n      if (titlesThickness.isPositive()) {\n        framedViewportSize.removeThickness(titlesThickness);\n      }\n\n      if (viewportSize.space() < framedViewportSize.space() * 2) {\n        viewportSize = framedViewportSize;\n      } else {\n        frameThickness = new Thickness(0, 0, 0, 0);\n        titlesThickness = new Thickness(0, 0, 0, 0);\n      }\n    } else {\n      if (!hasFrame) {\n        frameThickness = new Thickness(0, 0, 0, 0);\n      }\n\n      if (!hasLevelTitles && titlesThickness.isPositive()) {\n        titlesThickness = new Thickness(0, 0, 0, 0);\n      }\n    } // Control Size\n\n\n    var decorThickness = new Thickness(frameThickness);\n\n    if (titlesThickness.isPositive()) {\n      decorThickness.addThickness(titlesThickness);\n    }\n\n    var controlSize = new Size(viewportSize);\n    controlSize.addThickness(decorThickness); // Scroll panel placement\n\n    var scrollPanelRect = new Rect(decorThickness.left, decorThickness.top, viewportSize.width, viewportSize.height);\n    /* frame */\n\n    var framePlaceholderSize = new Size(controlSize);\n    var frameMousePanelRect = new Rect(0, 0, framePlaceholderSize.width, framePlaceholderSize.height);\n    framePlaceholderSize.scale(1 / scale);\n    /* level titles */\n\n    var firstPoint = new Point(0, 0),\n        secondPoint = new Point(0, 0);\n\n    if (titlesThickness.left != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.x - titlesThickness.left, scrollPanelRect.bottom());\n    } else if (titlesThickness.right != 0) {\n      firstPoint = new Point(scrollPanelRect.right(), scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.right() + titlesThickness.right, scrollPanelRect.bottom());\n    } else if (titlesThickness.top != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.right(), scrollPanelRect.y - titlesThickness.top);\n    } else if (titlesThickness.bottom != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.bottom());\n      secondPoint = new Point(scrollPanelRect.right(), scrollPanelRect.bottom() + titlesThickness.bottom);\n    }\n\n    var titlesMousePanelRect = new Rect(firstPoint, secondPoint);\n    var titlesPlaceholderSize = new Size(titlesMousePanelRect);\n    titlesPlaceholderSize.scale(1 / scale);\n    graphics.resize(\"frameplaceholder\", framePlaceholderSize.width, framePlaceholderSize.height);\n    graphics.resize(\"titlesplaceholder\", titlesPlaceholderSize.width, titlesPlaceholderSize.height);\n    graphics.resize(\"placeholder\", placeholderSize.width, placeholderSize.height);\n    setLayout({\n      autoSize: autoSize,\n      // resize control if true\n      controlSize: controlSize,\n      // Sets control Size in auto scale mode\n      scale: scale,\n      // scale is needed for scale transform CSS creation\n      frameMousePanelRect: frameMousePanelRect,\n      framePlaceholderSize: framePlaceholderSize,\n      // the frame content size before CSS Scale Transform applied\n      titlesMousePanelRect: titlesMousePanelRect,\n      titlesPlaceholderSize: titlesPlaceholderSize,\n      // Titles size before CSS Scale Transform applied\n      scrollPanelRect: scrollPanelRect,\n      mousePanelSize: mousePanelSize,\n      // Content mouse panel size\n      placeholderSize: placeholderSize // Content size before CSS Scale Transform applied\n\n    });\n    _data.viewportSize = viewportSize;\n    _data.frameThickness = frameThickness;\n    _data.frameOffset = titlesThickness.isPositive() ? titlesThickness : new Thickness(0, 0, 0, 0);\n    _data.titlesThickness = titlesThickness;\n    _data.framePlaceholderSize = framePlaceholderSize;\n    return true;\n  }\n\n  function getOptimalPanelSize() {\n    return new Size(_data.viewportSize.width - 25, _data.viewportSize.height - 25);\n  }\n\n  function getScrollPanelSize() {\n    return new Size(_data.viewportSize.width, _data.viewportSize.height);\n  }\n\n  function getFrameThickness() {\n    return new Thickness(_data.frameThickness);\n  }\n\n  function getFrameOffset() {\n    return new Thickness(_data.frameOffset);\n  }\n\n  function getTitlesThickness() {\n    return new Thickness(_data.titlesThickness);\n  }\n\n  return {\n    process: process,\n    getOptimalPanelSize: getOptimalPanelSize,\n    getScrollPanelSize: getScrollPanelSize,\n    getFrameThickness: getFrameThickness,\n    getFrameOffset: getFrameOffset,\n    getTitlesThickness: getTitlesThickness\n  };\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/tasks/layout/ApplyLayoutChangesTask.js"],"names":["Size","Thickness","PageFitMode","Rect","Point","ApplyLayoutChangesTask","getGraphics","setLayout","itemsSizesOptionTask","currentControlSizeTask","scaleOptionTask","alignDiagramTask","frameSizeTask","levelTitleSizeTask","_data","viewportSize","frameThickness","framePlaceholderSize","process","graphics","getOptions","scale","pageFitMode","autoSizeMinimum","autoSizeMaximum","placeholderSize","getContentSize","scrollPanelSize","hasFrame","hasLevelTitles","getThickness","titlesThickness","thickness","autoSize","AutoSize","mousePanelSize","width","height","addThickness","isPositive","cropBySize","maxSize","framedViewportSize","removeThickness","space","decorThickness","controlSize","scrollPanelRect","left","top","frameMousePanelRect","firstPoint","secondPoint","x","y","bottom","right","titlesMousePanelRect","titlesPlaceholderSize","resize","frameOffset","getOptimalPanelSize","getScrollPanelSize","getFrameThickness","getFrameOffset","getTitlesThickness"],"mappings":"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","sourcesContent":["import Size from '../../graphics/structs/Size';\nimport Thickness from '../../graphics/structs/Thickness';\nimport { PageFitMode } from '../../enums';\nimport Rect from '../../graphics/structs/Rect';\nimport Point from '../../graphics/structs/Point';\n\nexport default function ApplyLayoutChangesTask(getGraphics, setLayout, itemsSizesOptionTask,\n  currentControlSizeTask, scaleOptionTask, alignDiagramTask, frameSizeTask, levelTitleSizeTask) {\n  var _data = {\n    viewportSize: null,\n    frameThickness: null,\n    framePlaceholderSize: null\n  };\n\n  function process() {\n    var graphics = getGraphics(),\n      { scale } = scaleOptionTask.getOptions(),\n      { pageFitMode, autoSizeMinimum, autoSizeMaximum } = itemsSizesOptionTask.getOptions(),\n      placeholderSize = alignDiagramTask.getContentSize(),\n      { scrollPanelSize, hasFrame, hasLevelTitles } = currentControlSizeTask.getOptions(),\n      viewportSize = new Size(scrollPanelSize),\n      frameThickness = frameSizeTask.getThickness(),\n      titlesThickness = new Thickness(levelTitleSizeTask.getOptions().thickness),\n      autoSize = (pageFitMode == PageFitMode.AutoSize);\n\n    /* scaled content size */\n    var mousePanelSize = new Size(placeholderSize);\n    mousePanelSize.scale(scale);\n\n    if (autoSize) {\n      /* resize element to fit placeholder if control is in auto size mode\n        25 it is reservation for scrollbars \n        minimum & maximum auto size regulate maximum and minimum diagram size\n        it is handy when it is needed to limit oversized diagram expansion\n        or diagram is empty or so tiny that it is not clear that it exists at all\n      */\n      viewportSize = new Size(mousePanelSize.width + 25, mousePanelSize.height + 25);\n      viewportSize.addThickness(frameThickness);\n      if(titlesThickness.isPositive()) {\n        viewportSize.addThickness(titlesThickness);\n      }\n      viewportSize.cropBySize(autoSizeMaximum);\n      viewportSize.maxSize(autoSizeMinimum);//ignore jslint\n\n      // disable frame if its square space is bigger than viewport\n      var framedViewportSize = new Size(viewportSize);\n      framedViewportSize.removeThickness(frameThickness);\n      if(titlesThickness.isPositive()) {\n        framedViewportSize.removeThickness(titlesThickness);\n      }\n      if(viewportSize.space() < framedViewportSize.space() * 2) {\n        viewportSize = framedViewportSize;\n      } else {\n        frameThickness = new Thickness( 0, 0, 0, 0 );\n        titlesThickness = new Thickness( 0, 0, 0, 0 );\n      }\n    } else {\n      if(!hasFrame) {\n        frameThickness = new Thickness( 0, 0, 0, 0 );\n      }\n      if(!hasLevelTitles && titlesThickness.isPositive()) {\n        titlesThickness = new Thickness( 0, 0, 0, 0 );\n      }\n    }\n\n    // Control Size\n    var decorThickness = new Thickness(frameThickness);\n    if(titlesThickness.isPositive()) {\n      decorThickness.addThickness(titlesThickness);\n    }\n    var controlSize = new Size(viewportSize);\n    controlSize.addThickness(decorThickness);\n\n    // Scroll panel placement\n    var scrollPanelRect = new Rect(decorThickness.left, decorThickness.top, viewportSize.width, viewportSize.height);\n\n    /* frame */\n    var framePlaceholderSize = new Size(controlSize);\n    var frameMousePanelRect = new Rect(0, 0, framePlaceholderSize.width, framePlaceholderSize.height);\n    framePlaceholderSize.scale(1 / scale);\n\n    /* level titles */\n    var firstPoint = new Point(0, 0), \n      secondPoint = new Point(0, 0);\n    if(titlesThickness.left != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.x - titlesThickness.left, scrollPanelRect.bottom());\n    } else if(titlesThickness.right != 0) {\n      firstPoint = new Point(scrollPanelRect.right(), scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.right() + titlesThickness.right, scrollPanelRect.bottom());\n    } else if(titlesThickness.top != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.y);\n      secondPoint = new Point(scrollPanelRect.right(), scrollPanelRect.y - titlesThickness.top);\n    } else if(titlesThickness.bottom != 0) {\n      firstPoint = new Point(scrollPanelRect.x, scrollPanelRect.bottom());\n      secondPoint = new Point(scrollPanelRect.right(), scrollPanelRect.bottom() + titlesThickness.bottom);\n    }\n    var titlesMousePanelRect = new Rect(firstPoint, secondPoint);\n    var titlesPlaceholderSize = new Size(titlesMousePanelRect);\n    titlesPlaceholderSize.scale(1 / scale);\n    \n    graphics.resize(\"frameplaceholder\", framePlaceholderSize.width, framePlaceholderSize.height );\n    graphics.resize(\"titlesplaceholder\", titlesPlaceholderSize.width, titlesPlaceholderSize.height );\n    graphics.resize(\"placeholder\", placeholderSize.width, placeholderSize.height);\n\n    setLayout({\n      autoSize: autoSize, // resize control if true\n      controlSize: controlSize, // Sets control Size in auto scale mode\n      scale: scale, // scale is needed for scale transform CSS creation\n\n      frameMousePanelRect: frameMousePanelRect,\n      framePlaceholderSize: framePlaceholderSize, // the frame content size before CSS Scale Transform applied\n\n      titlesMousePanelRect: titlesMousePanelRect,\n      titlesPlaceholderSize: titlesPlaceholderSize, // Titles size before CSS Scale Transform applied\n\n      scrollPanelRect: scrollPanelRect,\n      mousePanelSize: mousePanelSize, // Content mouse panel size\n      placeholderSize: placeholderSize // Content size before CSS Scale Transform applied\n\n    });\n\n    \n    _data.viewportSize = viewportSize;\n    _data.frameThickness = frameThickness;\n    _data.frameOffset = titlesThickness.isPositive() ? titlesThickness : new Thickness( 0, 0, 0, 0 );\n    _data.titlesThickness = titlesThickness;\n    _data.framePlaceholderSize = framePlaceholderSize;\n    return true;\n  }\n\n  function getOptimalPanelSize() {\n    return new Size(_data.viewportSize.width - 25, _data.viewportSize.height - 25);\n  }\n\n  function getScrollPanelSize() {\n    return new Size(_data.viewportSize.width, _data.viewportSize.height);\n  }\n\n  function getFrameThickness() {\n    return new Thickness(_data.frameThickness);\n  }\n\n  function getFrameOffset() {\n    return new Thickness(_data.frameOffset);\n  }\n\n  function getTitlesThickness() {\n    return new Thickness(_data.titlesThickness);\n  }\n\n  return {\n    process: process,\n    getOptimalPanelSize: getOptimalPanelSize,\n    getScrollPanelSize: getScrollPanelSize,\n    getFrameThickness: getFrameThickness,\n    getFrameOffset: getFrameOffset,\n    getTitlesThickness: getTitlesThickness\n  };\n};"]},"metadata":{},"sourceType":"module"}