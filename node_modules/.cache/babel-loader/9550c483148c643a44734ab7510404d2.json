{"ast":null,"code":"/**\n * Callback for iterating rows\n * \n * @callback onRowCallback\n * @param {number} row The y coordinate of the horizontal line\n */\n\n/**\n * Finds minimum number of horizontal lines crossing all rectangles\n * \n * @param {Object} thisArg The callback function invocation context\n * @param {React[]} rectangles Collection of rectangles\n * @param {onRowCallback} onItem Callback function to call for every found row\n */\nexport default function getMinimumCrossingRows(thisArg, rectangles, onItem) {\n  var from = null;\n  var to = null;\n\n  if (onItem != null) {\n    rectangles.sort(function (a, b) {\n      return a.y - b.y;\n    });\n\n    for (var index = 0; index < rectangles.length; index += 1) {\n      var rect = rectangles[index];\n      var bottom = rect.bottom();\n\n      if (from === null) {\n        from = rect.y;\n        to = bottom;\n      } else {\n        if (rect.y >= to) {\n          onItem.call(thisArg, from);\n          from = rect.y;\n          to = bottom;\n        } else {\n          if (rect.y > from) {\n            from = rect.y;\n          }\n\n          if (bottom < to) {\n            to = bottom;\n          }\n        }\n      }\n    }\n\n    if (from !== null) {\n      onItem.call(thisArg, from);\n    }\n  }\n}\n;","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/algorithms/getMinimumCrossingRows.js"],"names":["getMinimumCrossingRows","thisArg","rectangles","onItem","from","to","sort","a","b","y","index","length","rect","bottom","call"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,sBAAT,CAAgCC,OAAhC,EAAyCC,UAAzC,EAAqDC,MAArD,EAA6D;AAC1E,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,EAAE,GAAG,IAAT;;AACA,MAAIF,MAAM,IAAI,IAAd,EAAoB;AAClBD,IAAAA,UAAU,CAACI,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,aAAOD,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CAAf;AACD,KAFD;;AAIA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,UAAU,CAACS,MAAvC,EAA+CD,KAAK,IAAI,CAAxD,EAA2D;AACzD,UAAIE,IAAI,GAAGV,UAAU,CAACQ,KAAD,CAArB;AACA,UAAIG,MAAM,GAAGD,IAAI,CAACC,MAAL,EAAb;;AACA,UAAIT,IAAI,KAAK,IAAb,EAAmB;AACjBA,QAAAA,IAAI,GAAGQ,IAAI,CAACH,CAAZ;AACAJ,QAAAA,EAAE,GAAGQ,MAAL;AACD,OAHD,MAGO;AACL,YAAID,IAAI,CAACH,CAAL,IAAUJ,EAAd,EAAkB;AAChBF,UAAAA,MAAM,CAACW,IAAP,CAAYb,OAAZ,EAAqBG,IAArB;AACAA,UAAAA,IAAI,GAAGQ,IAAI,CAACH,CAAZ;AACAJ,UAAAA,EAAE,GAAGQ,MAAL;AACD,SAJD,MAIO;AACL,cAAID,IAAI,CAACH,CAAL,GAASL,IAAb,EAAmB;AACjBA,YAAAA,IAAI,GAAGQ,IAAI,CAACH,CAAZ;AACD;;AAED,cAAII,MAAM,GAAGR,EAAb,EAAiB;AACfA,YAAAA,EAAE,GAAGQ,MAAL;AACD;AACF;AACF;AACF;;AACD,QAAIT,IAAI,KAAK,IAAb,EAAmB;AACjBD,MAAAA,MAAM,CAACW,IAAP,CAAYb,OAAZ,EAAqBG,IAArB;AACD;AACF;AACF;AAAA","sourcesContent":["/**\n * Callback for iterating rows\n * \n * @callback onRowCallback\n * @param {number} row The y coordinate of the horizontal line\n */\n\n/**\n * Finds minimum number of horizontal lines crossing all rectangles\n * \n * @param {Object} thisArg The callback function invocation context\n * @param {React[]} rectangles Collection of rectangles\n * @param {onRowCallback} onItem Callback function to call for every found row\n */\nexport default function getMinimumCrossingRows(thisArg, rectangles, onItem) {\n  var from = null;\n  var to = null;\n  if (onItem != null) {\n    rectangles.sort(function (a, b) {\n      return a.y - b.y;\n    });\n\n    for (var index = 0; index < rectangles.length; index += 1) {\n      var rect = rectangles[index];\n      var bottom = rect.bottom();\n      if (from === null) {\n        from = rect.y;\n        to = bottom;\n      } else {\n        if (rect.y >= to) {\n          onItem.call(thisArg, from);\n          from = rect.y;\n          to = bottom;\n        } else {\n          if (rect.y > from) {\n            from = rect.y;\n          }\n\n          if (bottom < to) {\n            to = bottom;\n          }\n        }\n      }\n    }\n    if (from !== null) {\n      onItem.call(thisArg, from);\n    }\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}