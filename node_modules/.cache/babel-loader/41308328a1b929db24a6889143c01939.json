{"ast":null,"code":"import Point from './Point';\nimport { SegmentType } from '../../enums';\nexport default function CubicArcSegment(arg0, arg1, arg2, arg3, arg4, arg5) {\n  this.parent = Point.prototype;\n  this.x = null;\n  this.y = null;\n  this.cpX1 = null;\n  this.cpY1 = null;\n  this.cpX2 = null;\n  this.cpY2 = null;\n\n  switch (arguments.length) {\n    case 3:\n      this.parent.constructor.apply(this, [arg2.x, arg2.y]);\n      this.cpX1 = arg0.x;\n      this.cpY1 = arg0.y;\n      this.cpX2 = arg1.x;\n      this.cpY2 = arg1.y;\n      break;\n\n    case 6:\n      this.parent.constructor.apply(this, [arg4, arg5]);\n      this.cpX1 = arg0;\n      this.cpY1 = arg1;\n      this.cpX2 = arg2;\n      this.cpY2 = arg3;\n      break;\n\n    default:\n      break;\n  }\n\n  this.segmentType = SegmentType.CubicArc;\n}\n;\nCubicArcSegment.prototype = new Point();\n\nCubicArcSegment.prototype.clone = function () {\n  return new CubicArcSegment(this.cpX1, this.cpY1, this.cpX2, this.cpY2, this.x, this.y);\n};\n\nCubicArcSegment.prototype.loop = function (thisArg, onItem) {\n  if (onItem != null) {\n    onItem.call(thisArg, this.cpX1, this.cpY1, 0);\n    onItem.call(thisArg, this.cpX2, this.cpY2, 1);\n    onItem.call(thisArg, this.x, this.y, 2);\n  }\n};\n\nCubicArcSegment.prototype.setPoint = function (point, index) {\n  switch (index) {\n    case 0:\n      this.cpX1 = point.x;\n      this.cpY1 = point.y;\n      break;\n\n    case 1:\n      this.cpX2 = point.x;\n      this.cpY2 = point.y;\n      break;\n\n    case 2:\n      this.x = point.x;\n      this.y = point.y;\n      break;\n  }\n};\n\nCubicArcSegment.prototype.getEndPoint = function () {\n  return this;\n};\n\nCubicArcSegment.prototype.invert = function (endPoint) {\n  var tempX = this.cpX1,\n      tempY = this.cpY1;\n  this.x = endPoint.x;\n  this.y = endPoint.y;\n  this.cpX1 = this.cpX2;\n  this.cpY1 = this.cpY2;\n  this.cpX2 = tempX;\n  this.cpY2 = tempY;\n};\n\nCubicArcSegment.prototype.transform = function (transform, forward) {\n  var self = this;\n  transform.transform3Points(self.x, self.y, self.cpX1, self.cpY1, self.cpX2, self.cpY2, forward, self, function (x, y, cpX1, cpY1, cpX2, cpY2) {\n    self.x = x;\n    self.y = y;\n    self.cpX1 = cpX1;\n    self.cpY1 = cpY1;\n    self.cpX2 = cpX2;\n    self.cpY2 = cpY2;\n  }); //ignore jslint\n};\n\nCubicArcSegment.prototype.trim = function (prevEndPoint, offset) {\n  var time = 0.5,\n      endPoint = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time),\n      time2 = 0.1,\n      endPoint2 = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time2);\n  time = offset * (time / endPoint.distanceTo(this.x, this.y) + time2 / endPoint2.distanceTo(this.x, this.y)) / 2.0;\n  endPoint = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time);\n  this.x = endPoint.x;\n  this.y = endPoint.y;\n  return this;\n};\n\nCubicArcSegment.prototype.offsetPoint = function (x, y, cpX1, cpY1, cpX2, cpY2, x2, y2, time) {\n  return new Point((1 - time) * (1 - time) * (1 - time) * x + 3 * (1 - time) * (1 - time) * time * cpX1 + 3 * (1 - time) * time * time * cpX2 + time * time * time * x2, (1 - time) * (1 - time) * (1 - time) * y + 3 * (1 - time) * (1 - time) * time * cpY1 + 3 * (1 - time) * time * time * cpY2 + time * time * time * y2);\n};","map":{"version":3,"sources":["/Users/01005901/go/src/github.com/Resily/react/node_modules/basicprimitives/src/graphics/structs/CubicArcSegment.js"],"names":["Point","SegmentType","CubicArcSegment","arg0","arg1","arg2","arg3","arg4","arg5","parent","prototype","x","y","cpX1","cpY1","cpX2","cpY2","arguments","length","constructor","apply","segmentType","CubicArc","clone","loop","thisArg","onItem","call","setPoint","point","index","getEndPoint","invert","endPoint","tempX","tempY","transform","forward","self","transform3Points","trim","prevEndPoint","offset","time","offsetPoint","time2","endPoint2","distanceTo","x2","y2"],"mappings":"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","sourcesContent":["import Point from './Point';\nimport { SegmentType } from '../../enums';\n\n\nexport default function CubicArcSegment(arg0, arg1, arg2, arg3, arg4, arg5) {\n  this.parent = Point.prototype;\n\n  this.x = null;\n  this.y = null;\n\n  this.cpX1 = null;\n  this.cpY1 = null;\n\n  this.cpX2 = null;\n  this.cpY2 = null;\n\n  switch (arguments.length) {\n    case 3:\n      this.parent.constructor.apply(this, [arg2.x, arg2.y]);\n      this.cpX1 = arg0.x;\n      this.cpY1 = arg0.y;\n      this.cpX2 = arg1.x;\n      this.cpY2 = arg1.y;\n      break;\n    case 6:\n      this.parent.constructor.apply(this, [arg4, arg5]);\n      this.cpX1 = arg0;\n      this.cpY1 = arg1;\n      this.cpX2 = arg2;\n      this.cpY2 = arg3;\n      break;\n    default:\n      break;\n  }\n\n  this.segmentType = SegmentType.CubicArc;\n};\n\nCubicArcSegment.prototype = new Point();\n\nCubicArcSegment.prototype.clone = function () {\n  return new CubicArcSegment(this.cpX1, this.cpY1, this.cpX2, this.cpY2, this.x, this.y);\n};\n\nCubicArcSegment.prototype.loop = function (thisArg, onItem) {\n  if (onItem != null) {\n    onItem.call(thisArg, this.cpX1, this.cpY1, 0);\n    onItem.call(thisArg, this.cpX2, this.cpY2, 1);\n    onItem.call(thisArg, this.x, this.y, 2);\n  }\n};\n\nCubicArcSegment.prototype.setPoint = function (point, index) {\n  switch (index) {\n    case 0:\n      this.cpX1 = point.x;\n      this.cpY1 = point.y;\n      break;\n    case 1:\n      this.cpX2 = point.x;\n      this.cpY2 = point.y;\n      break;\n    case 2:\n      this.x = point.x;\n      this.y = point.y;\n      break;\n  }\n};\n\nCubicArcSegment.prototype.getEndPoint = function () {\n  return this;\n};\n\nCubicArcSegment.prototype.invert = function (endPoint) {\n  var tempX = this.cpX1,\n    tempY = this.cpY1;\n  this.x = endPoint.x;\n  this.y = endPoint.y;\n  this.cpX1 = this.cpX2;\n  this.cpY1 = this.cpY2;\n  this.cpX2 = tempX;\n  this.cpY2 = tempY;\n};\n\nCubicArcSegment.prototype.transform = function (transform, forward) {\n  var self = this;\n  transform.transform3Points(self.x, self.y, self.cpX1, self.cpY1, self.cpX2, self.cpY2, forward, self, function (x, y, cpX1, cpY1, cpX2, cpY2) {\n    self.x = x;\n    self.y = y;\n    self.cpX1 = cpX1;\n    self.cpY1 = cpY1;\n    self.cpX2 = cpX2;\n    self.cpY2 = cpY2;\n  });//ignore jslint\n};\n\nCubicArcSegment.prototype.trim = function (prevEndPoint, offset) {\n  var time = 0.5,\n    endPoint = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time),\n    time2 = 0.1,\n    endPoint2 = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time2);\n\n  time = offset * (time / endPoint.distanceTo(this.x, this.y) + time2 / endPoint2.distanceTo(this.x, this.y)) / 2.0;\n  endPoint = this.offsetPoint(this.x, this.y, this.cpX2, this.cpY2, this.cpX1, this.cpY1, prevEndPoint.x, prevEndPoint.y, time);\n\n  this.x = endPoint.x;\n  this.y = endPoint.y;\n\n  return this;\n};\n\nCubicArcSegment.prototype.offsetPoint = function (x, y, cpX1, cpY1, cpX2, cpY2, x2, y2, time) {\n  return new Point(\n    (1 - time) * (1 - time) * (1 - time) * x + 3 * (1 - time) * (1 - time) * time * cpX1 + 3 * (1 - time) * time * time * cpX2 + time * time * time * x2,\n    (1 - time) * (1 - time) * (1 - time) * y + 3 * (1 - time) * (1 - time) * time * cpY1 + 3 * (1 - time) * time * time * cpY2 + time * time * time * y2\n  );\n};"]},"metadata":{},"sourceType":"module"}